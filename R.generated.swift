// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift

import Foundation
import Rswift
import UIKit

/// This `R` struct is code generated, and contains references to static resources.
struct R: Rswift.Validatable {
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    private init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 16 files.
  struct file {
    /// Resource file `Bugs`.
    static let bugs = FileResource(bundle: _R.hostingBundle, name: "Bugs", pathExtension: "")
    /// Resource file `feedback_add_image@2x.png`.
    static let feedback_add_image2xPng = FileResource(bundle: _R.hostingBundle, name: "feedback_add_image@2x", pathExtension: "png")
    /// Resource file `feedback_back@2x.png`.
    static let feedback_back2xPng = FileResource(bundle: _R.hostingBundle, name: "feedback_back@2x", pathExtension: "png")
    /// Resource file `feedback_bg_1@2x.png`.
    static let feedback_bg_12xPng = FileResource(bundle: _R.hostingBundle, name: "feedback_bg_1@2x", pathExtension: "png")
    /// Resource file `feedback_bg_2@2x.png`.
    static let feedback_bg_22xPng = FileResource(bundle: _R.hostingBundle, name: "feedback_bg_2@2x", pathExtension: "png")
    /// Resource file `feedback_btn@2x.png`.
    static let feedback_btn2xPng = FileResource(bundle: _R.hostingBundle, name: "feedback_btn@2x", pathExtension: "png")
    /// Resource file `feedback_btn_new@2x.png`.
    static let feedback_btn_new2xPng = FileResource(bundle: _R.hostingBundle, name: "feedback_btn_new@2x", pathExtension: "png")
    /// Resource file `feedback_warning@2x.png`.
    static let feedback_warning2xPng = FileResource(bundle: _R.hostingBundle, name: "feedback_warning@2x", pathExtension: "png")
    /// Resource file `hero data.csv`.
    static let heroDataCsv = FileResource(bundle: _R.hostingBundle, name: "hero data", pathExtension: "csv")
    /// Resource file `Info.plist`.
    static let infoPlist = FileResource(bundle: _R.hostingBundle, name: "Info", pathExtension: "plist")
    /// Resource file `MKStoreKitConfigs.plist`.
    static let mKStoreKitConfigsPlist = FileResource(bundle: _R.hostingBundle, name: "MKStoreKitConfigs", pathExtension: "plist")
    /// Resource file `object data.csv`.
    static let objectDataCsv = FileResource(bundle: _R.hostingBundle, name: "object data", pathExtension: "csv")
    /// Resource file `openapi.txt`.
    static let openapiTxt = FileResource(bundle: _R.hostingBundle, name: "openapi", pathExtension: "txt")
    /// Resource file `skill data.csv`.
    static let skillDataCsv = FileResource(bundle: _R.hostingBundle, name: "skill data", pathExtension: "csv")
    /// Resource file `合成所需.csv`.
    static let 合成所需Csv = FileResource(bundle: _R.hostingBundle, name: "合成所需", pathExtension: "csv")
    /// Resource file `进阶所需.csv`.
    static let 进阶所需Csv = FileResource(bundle: _R.hostingBundle, name: "进阶所需", pathExtension: "csv")
    
    /// `bundle.URLForResource("Bugs", withExtension: "")`
    static func bugs(_: Void) -> NSURL? {
      let fileResource = R.file.bugs
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("feedback_add_image@2x", withExtension: "png")`
    static func feedback_add_image2xPng(_: Void) -> NSURL? {
      let fileResource = R.file.feedback_add_image2xPng
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("feedback_back@2x", withExtension: "png")`
    static func feedback_back2xPng(_: Void) -> NSURL? {
      let fileResource = R.file.feedback_back2xPng
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("feedback_bg_1@2x", withExtension: "png")`
    static func feedback_bg_12xPng(_: Void) -> NSURL? {
      let fileResource = R.file.feedback_bg_12xPng
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("feedback_bg_2@2x", withExtension: "png")`
    static func feedback_bg_22xPng(_: Void) -> NSURL? {
      let fileResource = R.file.feedback_bg_22xPng
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("feedback_btn@2x", withExtension: "png")`
    static func feedback_btn2xPng(_: Void) -> NSURL? {
      let fileResource = R.file.feedback_btn2xPng
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("feedback_btn_new@2x", withExtension: "png")`
    static func feedback_btn_new2xPng(_: Void) -> NSURL? {
      let fileResource = R.file.feedback_btn_new2xPng
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("feedback_warning@2x", withExtension: "png")`
    static func feedback_warning2xPng(_: Void) -> NSURL? {
      let fileResource = R.file.feedback_warning2xPng
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("hero data", withExtension: "csv")`
    static func heroDataCsv(_: Void) -> NSURL? {
      let fileResource = R.file.heroDataCsv
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("Info", withExtension: "plist")`
    static func infoPlist(_: Void) -> NSURL? {
      let fileResource = R.file.infoPlist
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("MKStoreKitConfigs", withExtension: "plist")`
    static func mKStoreKitConfigsPlist(_: Void) -> NSURL? {
      let fileResource = R.file.mKStoreKitConfigsPlist
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("object data", withExtension: "csv")`
    static func objectDataCsv(_: Void) -> NSURL? {
      let fileResource = R.file.objectDataCsv
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("openapi", withExtension: "txt")`
    static func openapiTxt(_: Void) -> NSURL? {
      let fileResource = R.file.openapiTxt
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("skill data", withExtension: "csv")`
    static func skillDataCsv(_: Void) -> NSURL? {
      let fileResource = R.file.skillDataCsv
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("合成所需", withExtension: "csv")`
    static func 合成所需Csv(_: Void) -> NSURL? {
      let fileResource = R.file.合成所需Csv
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    /// `bundle.URLForResource("进阶所需", withExtension: "csv")`
    static func 进阶所需Csv(_: Void) -> NSURL? {
      let fileResource = R.file.进阶所需Csv
      return fileResource.bundle.URLForResource(fileResource)
    }
    
    private init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    private init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 876 images.
  struct image {
    /// Image `armored_boot`.
    static let armored_boot = ImageResource(bundle: _R.hostingBundle, name: "armored_boot")
    /// Image `armored_boot_filled`.
    static let armored_boot_filled = ImageResource(bundle: _R.hostingBundle, name: "armored_boot_filled")
    /// Image `armored_helmet`.
    static let armored_helmet = ImageResource(bundle: _R.hostingBundle, name: "armored_helmet")
    /// Image `armored_helmet_filled`.
    static let armored_helmet_filled = ImageResource(bundle: _R.hostingBundle, name: "armored_helmet_filled")
    /// Image `buBing`.
    static let buBing = ImageResource(bundle: _R.hostingBundle, name: "buBing")
    /// Image `coins`.
    static let coins = ImageResource(bundle: _R.hostingBundle, name: "coins")
    /// Image `death`.
    static let death = ImageResource(bundle: _R.hostingBundle, name: "death")
    /// Image `death-old`.
    static let deathOld = ImageResource(bundle: _R.hostingBundle, name: "death-old")
    /// Image `feedback_add_image`.
    static let feedback_add_image = ImageResource(bundle: _R.hostingBundle, name: "feedback_add_image")
    /// Image `feedback_back`.
    static let feedback_back = ImageResource(bundle: _R.hostingBundle, name: "feedback_back")
    /// Image `feedback_bg_1`.
    static let feedback_bg_1 = ImageResource(bundle: _R.hostingBundle, name: "feedback_bg_1")
    /// Image `feedback_bg_2`.
    static let feedback_bg_2 = ImageResource(bundle: _R.hostingBundle, name: "feedback_bg_2")
    /// Image `feedback_btn`.
    static let feedback_btn = ImageResource(bundle: _R.hostingBundle, name: "feedback_btn")
    /// Image `feedback_btn_new`.
    static let feedback_btn_new = ImageResource(bundle: _R.hostingBundle, name: "feedback_btn_new")
    /// Image `feedback_warning`.
    static let feedback_warning = ImageResource(bundle: _R.hostingBundle, name: "feedback_warning")
    /// Image `hero-102夜刀神十香`.
    static let hero102夜刀神十香 = ImageResource(bundle: _R.hostingBundle, name: "hero-102夜刀神十香")
    /// Image `hero-102最后之剑`.
    static let hero102最后之剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-102最后之剑")
    /// Image `hero-102王座`.
    static let hero102王座 = ImageResource(bundle: _R.hostingBundle, name: "hero-102王座")
    /// Image `hero-102神威灵装·十番`.
    static let hero102神威灵装十番 = ImageResource(bundle: _R.hostingBundle, name: "hero-102神威灵装·十番")
    /// Image `hero-102空间震`.
    static let hero102空间震 = ImageResource(bundle: _R.hostingBundle, name: "hero-102空间震")
    /// Image `hero-102鏖杀公`.
    static let hero102鏖杀公 = ImageResource(bundle: _R.hostingBundle, name: "hero-102鏖杀公")
    /// Image `hero-103扭曲力场`.
    static let hero103扭曲力场 = ImageResource(bundle: _R.hostingBundle, name: "hero-103扭曲力场")
    /// Image `hero-103波形延迟`.
    static let hero103波形延迟 = ImageResource(bundle: _R.hostingBundle, name: "hero-103波形延迟")
    /// Image `hero-103立华奏`.
    static let hero103立华奏 = ImageResource(bundle: _R.hostingBundle, name: "hero-103立华奏")
    /// Image `hero-103视频过载`.
    static let hero103视频过载 = ImageResource(bundle: _R.hostingBundle, name: "hero-103视频过载")
    /// Image `hero-103音速手刃`.
    static let hero103音速手刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-103音速手刃")
    /// Image `hero-103高频咆哮`.
    static let hero103高频咆哮 = ImageResource(bundle: _R.hostingBundle, name: "hero-103高频咆哮")
    /// Image `hero-104奇迹的背袭`.
    static let hero104奇迹的背袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-104奇迹的背袭")
    /// Image `hero-104少女的决意`.
    static let hero104少女的决意 = ImageResource(bundle: _R.hostingBundle, name: "hero-104少女的决意")
    /// Image `hero-104战场的轮回`.
    static let hero104战场的轮回 = ImageResource(bundle: _R.hostingBundle, name: "hero-104战场的轮回")
    /// Image `hero-104晓美焰`.
    static let hero104晓美焰 = ImageResource(bundle: _R.hostingBundle, name: "hero-104晓美焰")
    /// Image `hero-104溯时的祈愿`.
    static let hero104溯时的祈愿 = ImageResource(bundle: _R.hostingBundle, name: "hero-104溯时的祈愿")
    /// Image `hero-104锁缚的破却`.
    static let hero104锁缚的破却 = ImageResource(bundle: _R.hostingBundle, name: "hero-104锁缚的破却")
    /// Image `hero-105战维丧失`.
    static let hero105战维丧失 = ImageResource(bundle: _R.hostingBundle, name: "hero-105战维丧失")
    /// Image `hero-105疾风`.
    static let hero105疾风 = ImageResource(bundle: _R.hostingBundle, name: "hero-105疾风")
    /// Image `hero-105神衣鲜血`.
    static let hero105神衣鲜血 = ImageResource(bundle: _R.hostingBundle, name: "hero-105神衣鲜血")
    /// Image `hero-105纏流子`.
    static let hero105纏流子 = ImageResource(bundle: _R.hostingBundle, name: "hero-105纏流子")
    /// Image `hero-105闪刃`.
    static let hero105闪刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-105闪刃")
    /// Image `hero-105鲜血无拍子`.
    static let hero105鲜血无拍子 = ImageResource(bundle: _R.hostingBundle, name: "hero-105鲜血无拍子")
    /// Image `hero-106变形：刃`.
    static let hero106变形刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-106变形：刃")
    /// Image `hero-106变形：拳`.
    static let hero106变形拳 = ImageResource(bundle: _R.hostingBundle, name: "hero-106变形：拳")
    /// Image `hero-106变形：翼`.
    static let hero106变形翼 = ImageResource(bundle: _R.hostingBundle, name: "hero-106变形：翼")
    /// Image `hero-106变形：门`.
    static let hero106变形门 = ImageResource(bundle: _R.hostingBundle, name: "hero-106变形：门")
    /// Image `hero-106破甲系统`.
    static let hero106破甲系统 = ImageResource(bundle: _R.hostingBundle, name: "hero-106破甲系统")
    /// Image `hero-106金色之暗`.
    static let hero106金色之暗 = ImageResource(bundle: _R.hostingBundle, name: "hero-106金色之暗")
    /// Image `hero-10732式X剑`.
    static let hero10732式X剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-10732式X剑")
    /// Image `hero-107主人公补正`.
    static let hero107主人公补正 = ImageResource(bundle: _R.hostingBundle, name: "hero-107主人公补正")
    /// Image `hero-107涅普顿`.
    static let hero107涅普顿 = ImageResource(bundle: _R.hostingBundle, name: "hero-107涅普顿")
    /// Image `hero-107炎流崩裂`.
    static let hero107炎流崩裂 = ImageResource(bundle: _R.hostingBundle, name: "hero-107炎流崩裂")
    /// Image `hero-107穿刺联袭`.
    static let hero107穿刺联袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-107穿刺联袭")
    /// Image `hero-107胜利冲锋`.
    static let hero107胜利冲锋 = ImageResource(bundle: _R.hostingBundle, name: "hero-107胜利冲锋")
    /// Image `hero-108凶手就在我们中间`.
    static let hero108凶手就在我们中间 = ImageResource(bundle: _R.hostingBundle, name: "hero-108凶手就在我们中间")
    /// Image `hero-108太阳能滑板or足球腰带`.
    static let hero108太阳能滑板or足球腰带 = ImageResource(bundle: _R.hostingBundle, name: "hero-108太阳能滑板or足球腰带")
    /// Image `hero-108手表麻醉枪`.
    static let hero108手表麻醉枪 = ImageResource(bundle: _R.hostingBundle, name: "hero-108手表麻醉枪")
    /// Image `hero-108死神小学生`.
    static let hero108死神小学生 = ImageResource(bundle: _R.hostingBundle, name: "hero-108死神小学生")
    /// Image `hero-108江户川柯南`.
    static let hero108江户川柯南 = ImageResource(bundle: _R.hostingBundle, name: "hero-108江户川柯南")
    /// Image `hero-108领结型变声器`.
    static let hero108领结型变声器 = ImageResource(bundle: _R.hostingBundle, name: "hero-108领结型变声器")
    /// Image `hero-109国王的心`.
    static let hero109国王的心 = ImageResource(bundle: _R.hostingBundle, name: "hero-109国王的心")
    /// Image `hero-109恋人的绷带`.
    static let hero109恋人的绷带 = ImageResource(bundle: _R.hostingBundle, name: "hero-109恋人的绷带")
    /// Image `hero-109樱满集`.
    static let hero109樱满集 = ImageResource(bundle: _R.hostingBundle, name: "hero-109樱满集")
    /// Image `hero-109歌手的剑`.
    static let hero109歌手的剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-109歌手的剑")
    /// Image `hero-109王的能力`.
    static let hero109王的能力 = ImageResource(bundle: _R.hostingBundle, name: "hero-109王的能力")
    /// Image `hero-109舞者的鞋`.
    static let hero109舞者的鞋 = ImageResource(bundle: _R.hostingBundle, name: "hero-109舞者的鞋")
    /// Image `hero-10伤害流离`.
    static let hero10伤害流离 = ImageResource(bundle: _R.hostingBundle, name: "hero-10伤害流离")
    /// Image `hero-10斩击`.
    static let hero10斩击 = ImageResource(bundle: _R.hostingBundle, name: "hero-10斩击")
    /// Image `hero-10无心天使`.
    static let hero10无心天使 = ImageResource(bundle: _R.hostingBundle, name: "hero-10无心天使")
    /// Image `hero-10暗黑融合术`.
    static let hero10暗黑融合术 = ImageResource(bundle: _R.hostingBundle, name: "hero-10暗黑融合术")
    /// Image `hero-10萨菲罗斯`.
    static let hero10萨菲罗斯 = ImageResource(bundle: _R.hostingBundle, name: "hero-10萨菲罗斯")
    /// Image `hero-10闪光`.
    static let hero10闪光 = ImageResource(bundle: _R.hostingBundle, name: "hero-10闪光")
    /// Image `hero-110人类的感情`.
    static let hero110人类的感情 = ImageResource(bundle: _R.hostingBundle, name: "hero-110人类的感情")
    /// Image `hero-110因果的层积`.
    static let hero110因果的层积 = ImageResource(bundle: _R.hostingBundle, name: "hero-110因果的层积")
    /// Image `hero-110奇迹的现世`.
    static let hero110奇迹的现世 = ImageResource(bundle: _R.hostingBundle, name: "hero-110奇迹的现世")
    /// Image `hero-110少女的末路`.
    static let hero110少女的末路 = ImageResource(bundle: _R.hostingBundle, name: "hero-110少女的末路")
    /// Image `hero-110救济的祈愿`.
    static let hero110救济的祈愿 = ImageResource(bundle: _R.hostingBundle, name: "hero-110救济的祈愿")
    /// Image `hero-110鹿目圆香`.
    static let hero110鹿目圆香 = ImageResource(bundle: _R.hostingBundle, name: "hero-110鹿目圆香")
    /// Image `hero-111Archer`.
    static let hero111Archer = ImageResource(bundle: _R.hostingBundle, name: "hero-111Archer")
    /// Image `hero-112加农花`.
    static let hero112加农花 = ImageResource(bundle: _R.hostingBundle, name: "hero-112加农花")
    /// Image `hero-112尾巴炮`.
    static let hero112尾巴炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-112尾巴炮")
    /// Image `hero-112敏感`.
    static let hero112敏感 = ImageResource(bundle: _R.hostingBundle, name: "hero-112敏感")
    /// Image `hero-112梦梦`.
    static let hero112梦梦 = ImageResource(bundle: _R.hostingBundle, name: "hero-112梦梦")
    /// Image `hero-112藤蔓`.
    static let hero112藤蔓 = ImageResource(bundle: _R.hostingBundle, name: "hero-112藤蔓")
    /// Image `hero-112食人花`.
    static let hero112食人花 = ImageResource(bundle: _R.hostingBundle, name: "hero-112食人花")
    /// Image `hero-113白井黑子`.
    static let hero113白井黑子 = ImageResource(bundle: _R.hostingBundle, name: "hero-113白井黑子")
    /// Image `hero-113空间折叠`.
    static let hero113空间折叠 = ImageResource(bundle: _R.hostingBundle, name: "hero-113空间折叠")
    /// Image `hero-113空间能力者`.
    static let hero113空间能力者 = ImageResource(bundle: _R.hostingBundle, name: "hero-113空间能力者")
    /// Image `hero-113箭阵`.
    static let hero113箭阵 = ImageResource(bundle: _R.hostingBundle, name: "hero-113箭阵")
    /// Image `hero-113跳转or迁移`.
    static let hero113跳转or迁移 = ImageResource(bundle: _R.hostingBundle, name: "hero-113跳转or迁移")
    /// Image `hero-113金属箭矢`.
    static let hero113金属箭矢 = ImageResource(bundle: _R.hostingBundle, name: "hero-113金属箭矢")
    /// Image `hero-114五更琉璃`.
    static let hero114五更琉璃 = ImageResource(bundle: _R.hostingBundle, name: "hero-114五更琉璃")
    /// Image `hero-114傲娇`.
    static let hero114傲娇 = ImageResource(bundle: _R.hostingBundle, name: "hero-114傲娇")
    /// Image `hero-114新约·命运预言书`.
    static let hero114新约命运预言书 = ImageResource(bundle: _R.hostingBundle, name: "hero-114新约·命运预言书")
    /// Image `hero-114毒舌`.
    static let hero114毒舌 = ImageResource(bundle: _R.hostingBundle, name: "hero-114毒舌")
    /// Image `hero-114诅咒or生涯最大诅咒`.
    static let hero114诅咒or生涯最大诅咒 = ImageResource(bundle: _R.hostingBundle, name: "hero-114诅咒or生涯最大诅咒")
    /// Image `hero-114运动白痴&设定厨`.
    static let hero114运动白痴设定厨 = ImageResource(bundle: _R.hostingBundle, name: "hero-114运动白痴&设定厨")
    /// Image `hero-115冥恸柩缚`.
    static let hero115冥恸柩缚 = ImageResource(bundle: _R.hostingBundle, name: "hero-115冥恸柩缚")
    /// Image `hero-115悼亡圣裁`.
    static let hero115悼亡圣裁 = ImageResource(bundle: _R.hostingBundle, name: "hero-115悼亡圣裁")
    /// Image `hero-115无懈白斩`.
    static let hero115无懈白斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-115无懈白斩")
    /// Image `hero-115现世创造`.
    static let hero115现世创造 = ImageResource(bundle: _R.hostingBundle, name: "hero-115现世创造")
    /// Image `hero-115白岩射手`.
    static let hero115白岩射手 = ImageResource(bundle: _R.hostingBundle, name: "hero-115白岩射手")
    /// Image `hero-115鲜血结末`.
    static let hero115鲜血结末 = ImageResource(bundle: _R.hostingBundle, name: "hero-115鲜血结末")
    /// Image `hero-116伏行的混沌`.
    static let hero116伏行的混沌 = ImageResource(bundle: _R.hostingBundle, name: "hero-116伏行的混沌")
    /// Image `hero-116奈亚子`.
    static let hero116奈亚子 = ImageResource(bundle: _R.hostingBundle, name: "hero-116奈亚子")
    /// Image `hero-116宇宙CQC九七式·亵渎之手榴弹`.
    static let hero116宇宙CQC九七式亵渎之手榴弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-116宇宙CQC九七式·亵渎之手榴弹")
    /// Image `hero-116宇宙CQC二式·不可名状的棒状物体`.
    static let hero116宇宙CQC二式不可名状的棒状物体 = ImageResource(bundle: _R.hostingBundle, name: "hero-116宇宙CQC二式·不可名状的棒状物体")
    /// Image `hero-116宇宙CQC百式之零·Dagon之神力`.
    static let hero116宇宙CQC百式之零Dagon之神力 = ImageResource(bundle: _R.hostingBundle, name: "hero-116宇宙CQC百式之零·Dagon之神力")
    /// Image `hero-116宇宙CQC里百八式·八酒杯`.
    static let hero116宇宙CQC里百八式八酒杯 = ImageResource(bundle: _R.hostingBundle, name: "hero-116宇宙CQC里百八式·八酒杯")
    /// Image `hero-117九四式爆雷`.
    static let hero117九四式爆雷 = ImageResource(bundle: _R.hostingBundle, name: "hero-117九四式爆雷")
    /// Image `hero-117夜战模式`.
    static let hero117夜战模式 = ImageResource(bundle: _R.hostingBundle, name: "hero-117夜战模式")
    /// Image `hero-117威力巨大之九三式酸素鱼雷`.
    static let hero117威力巨大之九三式酸素鱼雷 = ImageResource(bundle: _R.hostingBundle, name: "hero-117威力巨大之九三式酸素鱼雷")
    /// Image `hero-117岛风`.
    static let hero117岛风 = ImageResource(bundle: _R.hostingBundle, name: "hero-117岛风")
    /// Image `hero-117疾如岛风`.
    static let hero117疾如岛风 = ImageResource(bundle: _R.hostingBundle, name: "hero-117疾如岛风")
    /// Image `hero-117连装炮`.
    static let hero117连装炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-117连装炮")
    /// Image `hero-118时之暗面`.
    static let hero118时之暗面 = ImageResource(bundle: _R.hostingBundle, name: "hero-118时之暗面")
    /// Image `hero-118替身使者`.
    static let hero118替身使者 = ImageResource(bundle: _R.hostingBundle, name: "hero-118替身使者")
    /// Image `hero-118欧啦欧啦欧啦欧啦欧啦欧啦`.
    static let hero118欧啦欧啦欧啦欧啦欧啦欧啦 = ImageResource(bundle: _R.hostingBundle, name: "hero-118欧啦欧啦欧啦欧啦欧啦欧啦")
    /// Image `hero-118流星指刺`.
    static let hero118流星指刺 = ImageResource(bundle: _R.hostingBundle, name: "hero-118流星指刺")
    /// Image `hero-118白金之星·世界`.
    static let hero118白金之星世界 = ImageResource(bundle: _R.hostingBundle, name: "hero-118白金之星·世界")
    /// Image `hero-118空条承太郎`.
    static let hero118空条承太郎 = ImageResource(bundle: _R.hostingBundle, name: "hero-118空条承太郎")
    /// Image `hero-119八云紫`.
    static let hero119八云紫 = ImageResource(bundle: _R.hostingBundle, name: "hero-119八云紫")
    /// Image `hero-119废弃车站下车之旅`.
    static let hero119废弃车站下车之旅 = ImageResource(bundle: _R.hostingBundle, name: "hero-119废弃车站下车之旅")
    /// Image `hero-119正物质与反物质的宇宙`.
    static let hero119正物质与反物质的宇宙 = ImageResource(bundle: _R.hostingBundle, name: "hero-119正物质与反物质的宇宙")
    /// Image `hero-119永远的十七岁`.
    static let hero119永远的十七岁 = ImageResource(bundle: _R.hostingBundle, name: "hero-119永远的十七岁")
    /// Image `hero-119波与粒的境界`.
    static let hero119波与粒的境界 = ImageResource(bundle: _R.hostingBundle, name: "hero-119波与粒的境界")
    /// Image `hero-119飞光虫之巢`.
    static let hero119飞光虫之巢 = ImageResource(bundle: _R.hostingBundle, name: "hero-119飞光虫之巢")
    /// Image `hero-11威吓怒吼`.
    static let hero11威吓怒吼 = ImageResource(bundle: _R.hostingBundle, name: "hero-11威吓怒吼")
    /// Image `hero-11惊天一击`.
    static let hero11惊天一击 = ImageResource(bundle: _R.hostingBundle, name: "hero-11惊天一击")
    /// Image `hero-11扫荡乾坤·破`.
    static let hero11扫荡乾坤破 = ImageResource(bundle: _R.hostingBundle, name: "hero-11扫荡乾坤·破")
    /// Image `hero-11石猴之力`.
    static let hero11石猴之力 = ImageResource(bundle: _R.hostingBundle, name: "hero-11石猴之力")
    /// Image `hero-11美猴王`.
    static let hero11美猴王 = ImageResource(bundle: _R.hostingBundle, name: "hero-11美猴王")
    /// Image `hero-11越战越勇`.
    static let hero11越战越勇 = ImageResource(bundle: _R.hostingBundle, name: "hero-11越战越勇")
    /// Image `hero-120两仪式`.
    static let hero120两仪式 = ImageResource(bundle: _R.hostingBundle, name: "hero-120两仪式")
    /// Image `hero-120双钟楼or阴阳螺旋`.
    static let hero120双钟楼or阴阳螺旋 = ImageResource(bundle: _R.hostingBundle, name: "hero-120双钟楼or阴阳螺旋")
    /// Image `hero-120无我识·心空妙有`.
    static let hero120无我识心空妙有 = ImageResource(bundle: _R.hostingBundle, name: "hero-120无我识·心空妙有")
    /// Image `hero-120猫返`.
    static let hero120猫返 = ImageResource(bundle: _R.hostingBundle, name: "hero-120猫返")
    /// Image `hero-120直死之魔眼`.
    static let hero120直死之魔眼 = ImageResource(bundle: _R.hostingBundle, name: "hero-120直死之魔眼")
    /// Image `hero-120虎落笛or无明之月`.
    static let hero120虎落笛or无明之月 = ImageResource(bundle: _R.hostingBundle, name: "hero-120虎落笛or无明之月")
    /// Image `hero-121佐仓杏子`.
    static let hero121佐仓杏子 = ImageResource(bundle: _R.hostingBundle, name: "hero-121佐仓杏子")
    /// Image `hero-121告解的壁障`.
    static let hero121告解的壁障 = ImageResource(bundle: _R.hostingBundle, name: "hero-121告解的壁障")
    /// Image `hero-121命运的果实`.
    static let hero121命运的果实 = ImageResource(bundle: _R.hostingBundle, name: "hero-121命运的果实")
    /// Image `hero-121复燃的微光`.
    static let hero121复燃的微光 = ImageResource(bundle: _R.hostingBundle, name: "hero-121复燃的微光")
    /// Image `hero-121少女的救赎`.
    static let hero121少女的救赎 = ImageResource(bundle: _R.hostingBundle, name: "hero-121少女的救赎")
    /// Image `hero-121魂火的余烬`.
    static let hero121魂火的余烬 = ImageResource(bundle: _R.hostingBundle, name: "hero-121魂火的余烬")
    /// Image `hero-122伤鸣的节拍`.
    static let hero122伤鸣的节拍 = ImageResource(bundle: _R.hostingBundle, name: "hero-122伤鸣的节拍")
    /// Image `hero-122少女的谢幕`.
    static let hero122少女的谢幕 = ImageResource(bundle: _R.hostingBundle, name: "hero-122少女的谢幕")
    /// Image `hero-122痛觉的止符`.
    static let hero122痛觉的止符 = ImageResource(bundle: _R.hostingBundle, name: "hero-122痛觉的止符")
    /// Image `hero-122美树沙耶加`.
    static let hero122美树沙耶加 = ImageResource(bundle: _R.hostingBundle, name: "hero-122美树沙耶加")
    /// Image `hero-122追想的变奏`.
    static let hero122追想的变奏 = ImageResource(bundle: _R.hostingBundle, name: "hero-122追想的变奏")
    /// Image `hero-122青刃的哀歌`.
    static let hero122青刃的哀歌 = ImageResource(bundle: _R.hostingBundle, name: "hero-122青刃的哀歌")
    /// Image `hero-123五河琴里`.
    static let hero123五河琴里 = ImageResource(bundle: _R.hostingBundle, name: "hero-123五河琴里")
    /// Image `hero-123光燃`.
    static let hero123光燃 = ImageResource(bundle: _R.hostingBundle, name: "hero-123光燃")
    /// Image `hero-123灼幕`.
    static let hero123灼幕 = ImageResource(bundle: _R.hostingBundle, name: "hero-123灼幕")
    /// Image `hero-123灼烂歼鬼·炮`.
    static let hero123灼烂歼鬼炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-123灼烂歼鬼·炮")
    /// Image `hero-123焰潮`.
    static let hero123焰潮 = ImageResource(bundle: _R.hostingBundle, name: "hero-123焰潮")
    /// Image `hero-123神威灵装·五番`.
    static let hero123神威灵装五番 = ImageResource(bundle: _R.hostingBundle, name: "hero-123神威灵装·五番")
    /// Image `hero-124奇犽`.
    static let hero124奇犽 = ImageResource(bundle: _R.hostingBundle, name: "hero-124奇犽")
    /// Image `hero-124暗步`.
    static let hero124暗步 = ImageResource(bundle: _R.hostingBundle, name: "hero-124暗步")
    /// Image `hero-124电光石火`.
    static let hero124电光石火 = ImageResource(bundle: _R.hostingBundle, name: "hero-124电光石火")
    /// Image `hero-124疾风迅雷`.
    static let hero124疾风迅雷 = ImageResource(bundle: _R.hostingBundle, name: "hero-124疾风迅雷")
    /// Image `hero-124落雷`.
    static let hero124落雷 = ImageResource(bundle: _R.hostingBundle, name: "hero-124落雷")
    /// Image `hero-124雷掌`.
    static let hero124雷掌 = ImageResource(bundle: _R.hostingBundle, name: "hero-124雷掌")
    /// Image `hero-125半赫者`.
    static let hero125半赫者 = ImageResource(bundle: _R.hostingBundle, name: "hero-125半赫者")
    /// Image `hero-125喰种猎杀`.
    static let hero125喰种猎杀 = ImageResource(bundle: _R.hostingBundle, name: "hero-125喰种猎杀")
    /// Image `hero-125独眼喰种`.
    static let hero125独眼喰种 = ImageResource(bundle: _R.hostingBundle, name: "hero-125独眼喰种")
    /// Image `hero-125金木研`.
    static let hero125金木研 = ImageResource(bundle: _R.hostingBundle, name: "hero-125金木研")
    /// Image `hero-125饥渴本能`.
    static let hero125饥渴本能 = ImageResource(bundle: _R.hostingBundle, name: "hero-125饥渴本能")
    /// Image `hero-125鳞赫·利世`.
    static let hero125鳞赫利世 = ImageResource(bundle: _R.hostingBundle, name: "hero-125鳞赫·利世")
    /// Image `hero-126曳光弹or穿甲弹`.
    static let hero126曳光弹or穿甲弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-126曳光弹or穿甲弹")
    /// Image `hero-126朝田诗乃`.
    static let hero126朝田诗乃 = ImageResource(bundle: _R.hostingBundle, name: "hero-126朝田诗乃")
    /// Image `hero-126格洛克18or黑卡蒂`.
    static let hero126格洛克18or黑卡蒂 = ImageResource(bundle: _R.hostingBundle, name: "hero-126格洛克18or黑卡蒂")
    /// Image `hero-126鹰眼`.
    static let hero126鹰眼 = ImageResource(bundle: _R.hostingBundle, name: "hero-126鹰眼")
    /// Image `hero-126麻痹弹or眩晕弹`.
    static let hero126麻痹弹or眩晕弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-126麻痹弹or眩晕弹")
    /// Image `hero-126黑卡蒂or格洛克18`.
    static let hero126黑卡蒂or格洛克18 = ImageResource(bundle: _R.hostingBundle, name: "hero-126黑卡蒂or格洛克18")
    /// Image `hero-127光玉·八极`.
    static let hero127光玉八极 = ImageResource(bundle: _R.hostingBundle, name: "hero-127光玉·八极")
    /// Image `hero-127周廻·晶石`.
    static let hero127周廻晶石 = ImageResource(bundle: _R.hostingBundle, name: "hero-127周廻·晶石")
    /// Image `hero-127焰剑·冬河`.
    static let hero127焰剑冬河 = ImageResource(bundle: _R.hostingBundle, name: "hero-127焰剑·冬河")
    /// Image `hero-127第二法模拟`.
    static let hero127第二法模拟 = ImageResource(bundle: _R.hostingBundle, name: "hero-127第二法模拟")
    /// Image `hero-127远坂凛`.
    static let hero127远坂凛 = ImageResource(bundle: _R.hostingBundle, name: "hero-127远坂凛")
    /// Image `hero-127远坂家计`.
    static let hero127远坂家计 = ImageResource(bundle: _R.hostingBundle, name: "hero-127远坂家计")
    /// Image `hero-128伊莉雅`.
    static let hero128伊莉雅 = ImageResource(bundle: _R.hostingBundle, name: "hero-128伊莉雅")
    /// Image `hero-128多元重奏饱和炮击`.
    static let hero128多元重奏饱和炮击 = ImageResource(bundle: _R.hostingBundle, name: "hero-128多元重奏饱和炮击")
    /// Image `hero-128红宝石之星`.
    static let hero128红宝石之星 = ImageResource(bundle: _R.hostingBundle, name: "hero-128红宝石之星")
    /// Image `hero-128限定展开·刺穿死棘`.
    static let hero128限定展开刺穿死棘 = ImageResource(bundle: _R.hostingBundle, name: "hero-128限定展开·刺穿死棘")
    /// Image `hero-128限定展开·妄想幻像`.
    static let hero128限定展开妄想幻像 = ImageResource(bundle: _R.hostingBundle, name: "hero-128限定展开·妄想幻像")
    /// Image `hero-128限定展开·破尽万法`.
    static let hero128限定展开破尽万法 = ImageResource(bundle: _R.hostingBundle, name: "hero-128限定展开·破尽万法")
    /// Image `hero-129剑戟的喝彩`.
    static let hero129剑戟的喝彩 = ImageResource(bundle: _R.hostingBundle, name: "hero-129剑戟的喝彩")
    /// Image `hero-129尼禄`.
    static let hero129尼禄 = ImageResource(bundle: _R.hostingBundle, name: "hero-129尼禄")
    /// Image `hero-129招荡的黄金剧场`.
    static let hero129招荡的黄金剧场 = ImageResource(bundle: _R.hostingBundle, name: "hero-129招荡的黄金剧场")
    /// Image `hero-129燃烧的圣泉`.
    static let hero129燃烧的圣泉 = ImageResource(bundle: _R.hostingBundle, name: "hero-129燃烧的圣泉")
    /// Image `hero-129皇帝的特权`.
    static let hero129皇帝的特权 = ImageResource(bundle: _R.hostingBundle, name: "hero-129皇帝的特权")
    /// Image `hero-129花散的天幕`.
    static let hero129花散的天幕 = ImageResource(bundle: _R.hostingBundle, name: "hero-129花散的天幕")
    /// Image `hero-12世界第一公主殿下`.
    static let hero12世界第一公主殿下 = ImageResource(bundle: _R.hostingBundle, name: "hero-12世界第一公主殿下")
    /// Image `hero-12初音未来`.
    static let hero12初音未来 = ImageResource(bundle: _R.hostingBundle, name: "hero-12初音未来")
    /// Image `hero-12初音激唱`.
    static let hero12初音激唱 = ImageResource(bundle: _R.hostingBundle, name: "hero-12初音激唱")
    /// Image `hero-12初音领域`.
    static let hero12初音领域 = ImageResource(bundle: _R.hostingBundle, name: "hero-12初音领域")
    /// Image `hero-12御魔音界`.
    static let hero12御魔音界 = ImageResource(bundle: _R.hostingBundle, name: "hero-12御魔音界")
    /// Image `hero-12甩葱歌`.
    static let hero12甩葱歌 = ImageResource(bundle: _R.hostingBundle, name: "hero-12甩葱歌")
    /// Image `hero-130神威灵装一番`.
    static let hero130神威灵装一番 = ImageResource(bundle: _R.hostingBundle, name: "hero-130神威灵装一番")
    /// Image `hero-130绝灭天使-光剑`.
    static let hero130绝灭天使光剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-130绝灭天使-光剑")
    /// Image `hero-130绝灭天使-展翼`.
    static let hero130绝灭天使展翼 = ImageResource(bundle: _R.hostingBundle, name: "hero-130绝灭天使-展翼")
    /// Image `hero-130绝灭天使-日轮`.
    static let hero130绝灭天使日轮 = ImageResource(bundle: _R.hostingBundle, name: "hero-130绝灭天使-日轮")
    /// Image `hero-130绝灭天使-炮冠`.
    static let hero130绝灭天使炮冠 = ImageResource(bundle: _R.hostingBundle, name: "hero-130绝灭天使-炮冠")
    /// Image `hero-130鸢一折纸`.
    static let hero130鸢一折纸 = ImageResource(bundle: _R.hostingBundle, name: "hero-130鸢一折纸")
    /// Image `hero-131冰霜操控`.
    static let hero131冰霜操控 = ImageResource(bundle: _R.hostingBundle, name: "hero-131冰霜操控")
    /// Image `hero-131冻结傀儡`.
    static let hero131冻结傀儡 = ImageResource(bundle: _R.hostingBundle, name: "hero-131冻结傀儡")
    /// Image `hero-131四糸乃`.
    static let hero131四糸乃 = ImageResource(bundle: _R.hostingBundle, name: "hero-131四糸乃")
    /// Image `hero-131极寒冰墙`.
    static let hero131极寒冰墙 = ImageResource(bundle: _R.hostingBundle, name: "hero-131极寒冰墙")
    /// Image `hero-131神威灵装四番`.
    static let hero131神威灵装四番 = ImageResource(bundle: _R.hostingBundle, name: "hero-131神威灵装四番")
    /// Image `hero-131防御结界`.
    static let hero131防御结界 = ImageResource(bundle: _R.hostingBundle, name: "hero-131防御结界")
    /// Image `hero-133天神烈破`.
    static let hero133天神烈破 = ImageResource(bundle: _R.hostingBundle, name: "hero-133天神烈破")
    /// Image `hero-133天神照射`.
    static let hero133天神照射 = ImageResource(bundle: _R.hostingBundle, name: "hero-133天神照射")
    /// Image `hero-133旭日之心`.
    static let hero133旭日之心 = ImageResource(bundle: _R.hostingBundle, name: "hero-133旭日之心")
    /// Image `hero-133星光爆裂`.
    static let hero133星光爆裂 = ImageResource(bundle: _R.hostingBundle, name: "hero-133星光爆裂")
    /// Image `hero-133禁锢枷锁`.
    static let hero133禁锢枷锁 = ImageResource(bundle: _R.hostingBundle, name: "hero-133禁锢枷锁")
    /// Image `hero-133高町奈叶`.
    static let hero133高町奈叶 = ImageResource(bundle: _R.hostingBundle, name: "hero-133高町奈叶")
    /// Image `hero-134死亡弹幕`.
    static let hero134死亡弹幕 = ImageResource(bundle: _R.hostingBundle, name: "hero-134死亡弹幕")
    /// Image `hero-134死亡拥抱`.
    static let hero134死亡拥抱 = ImageResource(bundle: _R.hostingBundle, name: "hero-134死亡拥抱")
    /// Image `hero-134死亡穿刺`.
    static let hero134死亡穿刺 = ImageResource(bundle: _R.hostingBundle, name: "hero-134死亡穿刺")
    /// Image `hero-134终结之剑`.
    static let hero134终结之剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-134终结之剑")
    /// Image `hero-134超频驱动`.
    static let hero134超频驱动 = ImageResource(bundle: _R.hostingBundle, name: "hero-134超频驱动")
    /// Image `hero-134黑雪姬`.
    static let hero134黑雪姬 = ImageResource(bundle: _R.hostingBundle, name: "hero-134黑雪姬")
    /// Image `hero-135二天一流`.
    static let hero135二天一流 = ImageResource(bundle: _R.hostingBundle, name: "hero-135二天一流")
    /// Image `hero-135人鬼“未来永劫斩”`.
    static let hero135人鬼未来永劫斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-135人鬼“未来永劫斩”")
    /// Image `hero-135六道剑“一念无量劫”`.
    static let hero135六道剑一念无量劫 = ImageResource(bundle: _R.hostingBundle, name: "hero-135六道剑“一念无量劫”")
    /// Image `hero-135剑技“樱花闪闪”`.
    static let hero135剑技樱花闪闪 = ImageResource(bundle: _R.hostingBundle, name: "hero-135剑技“樱花闪闪”")
    /// Image `hero-135空观剑“六根清净斩”`.
    static let hero135空观剑六根清净斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-135空观剑“六根清净斩”")
    /// Image `hero-135魂魄妖梦`.
    static let hero135魂魄妖梦 = ImageResource(bundle: _R.hostingBundle, name: "hero-135魂魄妖梦")
    /// Image `hero-136圣刃形态【雷霆圣剑】`.
    static let hero136圣刃形态雷霆圣剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-136圣刃形态【雷霆圣剑】")
    /// Image `hero-136巨镰形态【巨镰斩击】`.
    static let hero136巨镰形态巨镰斩击 = ImageResource(bundle: _R.hostingBundle, name: "hero-136巨镰形态【巨镰斩击】")
    /// Image `hero-136强袭形态【雷光枷锁】`.
    static let hero136强袭形态雷光枷锁 = ImageResource(bundle: _R.hostingBundle, name: "hero-136强袭形态【雷光枷锁】")
    /// Image `hero-136菲特`.
    static let hero136菲特 = ImageResource(bundle: _R.hostingBundle, name: "hero-136菲特")
    /// Image `hero-136雷光战斧`.
    static let hero136雷光战斧 = ImageResource(bundle: _R.hostingBundle, name: "hero-136雷光战斧")
    /// Image `hero-136雷光战斧·天翔`.
    static let hero136雷光战斧天翔 = ImageResource(bundle: _R.hostingBundle, name: "hero-136雷光战斧·天翔")
    /// Image `hero-137少女的终曲`.
    static let hero137少女的终曲 = ImageResource(bundle: _R.hostingBundle, name: "hero-137少女的终曲")
    /// Image `hero-137巴麻美`.
    static let hero137巴麻美 = ImageResource(bundle: _R.hostingBundle, name: "hero-137巴麻美")
    /// Image `hero-137无忧的茶会`.
    static let hero137无忧的茶会 = ImageResource(bundle: _R.hostingBundle, name: "hero-137无忧的茶会")
    /// Image `hero-137燧火的回声`.
    static let hero137燧火的回声 = ImageResource(bundle: _R.hostingBundle, name: "hero-137燧火的回声")
    /// Image `hero-137织叠的羁绊`.
    static let hero137织叠的羁绊 = ImageResource(bundle: _R.hostingBundle, name: "hero-137织叠的羁绊")
    /// Image `hero-137魔弹的舞踏`.
    static let hero137魔弹的舞踏 = ImageResource(bundle: _R.hostingBundle, name: "hero-137魔弹的舞踏")
    /// Image `hero-138交换灼热机制`.
    static let hero138交换灼热机制 = ImageResource(bundle: _R.hostingBundle, name: "hero-138交换灼热机制")
    /// Image `hero-138克图格亚的活火焰`.
    static let hero138克图格亚的活火焰 = ImageResource(bundle: _R.hostingBundle, name: "hero-138克图格亚的活火焰")
    /// Image `hero-138克子`.
    static let hero138克子 = ImageResource(bundle: _R.hostingBundle, name: "hero-138克子")
    /// Image `hero-138宇宙CQC百式·炎之精灵`.
    static let hero138宇宙CQC百式炎之精灵 = ImageResource(bundle: _R.hostingBundle, name: "hero-138宇宙CQC百式·炎之精灵")
    /// Image `hero-138宇宙CQC百式·零一牺牲`.
    static let hero138宇宙CQC百式零一牺牲 = ImageResource(bundle: _R.hostingBundle, name: "hero-138宇宙CQC百式·零一牺牲")
    /// Image `hero-138难以名状之棒状物体火焰邪神原版`.
    static let hero138难以名状之棒状物体火焰邪神原版 = ImageResource(bundle: _R.hostingBundle, name: "hero-138难以名状之棒状物体火焰邪神原版")
    /// Image `hero-139七色乱舞刃`.
    static let hero139七色乱舞刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-139七色乱舞刃")
    /// Image `hero-139信仰之力`.
    static let hero139信仰之力 = ImageResource(bundle: _R.hostingBundle, name: "hero-139信仰之力")
    /// Image `hero-139暴风之剑or无限剑斩`.
    static let hero139暴风之剑or无限剑斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-139暴风之剑or无限剑斩")
    /// Image `hero-139火山俯冲`.
    static let hero139火山俯冲 = ImageResource(bundle: _R.hostingBundle, name: "hero-139火山俯冲")
    /// Image `hero-139蕾丝狂舞`.
    static let hero139蕾丝狂舞 = ImageResource(bundle: _R.hostingBundle, name: "hero-139蕾丝狂舞")
    /// Image `hero-139诺瓦露`.
    static let hero139诺瓦露 = ImageResource(bundle: _R.hostingBundle, name: "hero-139诺瓦露")
    /// Image `hero-13假寐之术`.
    static let hero13假寐之术 = ImageResource(bundle: _R.hostingBundle, name: "hero-13假寐之术")
    /// Image `hero-13我受罗`.
    static let hero13我受罗 = ImageResource(bundle: _R.hostingBundle, name: "hero-13我受罗")
    /// Image `hero-13沙之守护`.
    static let hero13沙之守护 = ImageResource(bundle: _R.hostingBundle, name: "hero-13沙之守护")
    /// Image `hero-13沙之雨`.
    static let hero13沙之雨 = ImageResource(bundle: _R.hostingBundle, name: "hero-13沙之雨")
    /// Image `hero-13沙缚柩`.
    static let hero13沙缚柩 = ImageResource(bundle: _R.hostingBundle, name: "hero-13沙缚柩")
    /// Image `hero-13绝对防御`.
    static let hero13绝对防御 = ImageResource(bundle: _R.hostingBundle, name: "hero-13绝对防御")
    /// Image `hero-140亚里亚`.
    static let hero140亚里亚 = ImageResource(bundle: _R.hostingBundle, name: "hero-140亚里亚")
    /// Image `hero-140双剑姿态or双枪姿态`.
    static let hero140双剑姿态or双枪姿态 = ImageResource(bundle: _R.hostingBundle, name: "hero-140双剑姿态or双枪姿态")
    /// Image `hero-140壳金七星`.
    static let hero140壳金七星 = ImageResource(bundle: _R.hostingBundle, name: "hero-140壳金七星")
    /// Image `hero-140接近枪斗术or双剑回旋刃`.
    static let hero140接近枪斗术or双剑回旋刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-140接近枪斗术or双剑回旋刃")
    /// Image `hero-140武侦强袭`.
    static let hero140武侦强袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-140武侦强袭")
    /// Image `hero-140绯绯神`.
    static let hero140绯绯神 = ImageResource(bundle: _R.hostingBundle, name: "hero-140绯绯神")
    /// Image `hero-141三式对空弹`.
    static let hero141三式对空弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-141三式对空弹")
    /// Image `hero-141主炮齐发`.
    static let hero141主炮齐发 = ImageResource(bundle: _R.hostingBundle, name: "hero-141主炮齐发")
    /// Image `hero-141九一式彻甲弹`.
    static let hero141九一式彻甲弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-141九一式彻甲弹")
    /// Image `hero-141大傻`.
    static let hero141大傻 = ImageResource(bundle: _R.hostingBundle, name: "hero-141大傻")
    /// Image `hero-141战列舰`.
    static let hero141战列舰 = ImageResource(bundle: _R.hostingBundle, name: "hero-141战列舰")
    /// Image `hero-141水面侦察机`.
    static let hero141水面侦察机 = ImageResource(bundle: _R.hostingBundle, name: "hero-141水面侦察机")
    /// Image `hero-142勇气之盾`.
    static let hero142勇气之盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-142勇气之盾")
    /// Image `hero-142勇气徽章`.
    static let hero142勇气徽章 = ImageResource(bundle: _R.hostingBundle, name: "hero-142勇气徽章")
    /// Image `hero-142恐龙克星`.
    static let hero142恐龙克星 = ImageResource(bundle: _R.hostingBundle, name: "hero-142恐龙克星")
    /// Image `hero-142战斗暴龙兽`.
    static let hero142战斗暴龙兽 = ImageResource(bundle: _R.hostingBundle, name: "hero-142战斗暴龙兽")
    /// Image `hero-142战斗龙卷风`.
    static let hero142战斗龙卷风 = ImageResource(bundle: _R.hostingBundle, name: "hero-142战斗龙卷风")
    /// Image `hero-142盖亚能量炮`.
    static let hero142盖亚能量炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-142盖亚能量炮")
    /// Image `hero-143数据删除`.
    static let hero143数据删除 = ImageResource(bundle: _R.hostingBundle, name: "hero-143数据删除")
    /// Image `hero-143数据备份`.
    static let hero143数据备份 = ImageResource(bundle: _R.hostingBundle, name: "hero-143数据备份")
    /// Image `hero-143数据复制`.
    static let hero143数据复制 = ImageResource(bundle: _R.hostingBundle, name: "hero-143数据复制")
    /// Image `hero-143数据投影`.
    static let hero143数据投影 = ImageResource(bundle: _R.hostingBundle, name: "hero-143数据投影")
    /// Image `hero-143数据转换`.
    static let hero143数据转换 = ImageResource(bundle: _R.hostingBundle, name: "hero-143数据转换")
    /// Image `hero-143蒂塔`.
    static let hero143蒂塔 = ImageResource(bundle: _R.hostingBundle, name: "hero-143蒂塔")
    /// Image `hero-144独奏曲`.
    static let hero144独奏曲 = ImageResource(bundle: _R.hostingBundle, name: "hero-144独奏曲")
    /// Image `hero-144破军歌姬`.
    static let hero144破军歌姬 = ImageResource(bundle: _R.hostingBundle, name: "hero-144破军歌姬")
    /// Image `hero-144 管风回音`.
    static let hero144管风回音 = ImageResource(bundle: _R.hostingBundle, name: "hero-144 管风回音")
    /// Image `hero-144诱宵美九`.
    static let hero144诱宵美九 = ImageResource(bundle: _R.hostingBundle, name: "hero-144诱宵美九")
    /// Image `hero-144轮舞曲`.
    static let hero144轮舞曲 = ImageResource(bundle: _R.hostingBundle, name: "hero-144轮舞曲")
    /// Image `hero-144镇魂曲`.
    static let hero144镇魂曲 = ImageResource(bundle: _R.hostingBundle, name: "hero-144镇魂曲")
    /// Image `hero-145一方通行`.
    static let hero145一方通行 = ImageResource(bundle: _R.hostingBundle, name: "hero-145一方通行")
    /// Image `hero-145御坂网络`.
    static let hero145御坂网络 = ImageResource(bundle: _R.hostingBundle, name: "hero-145御坂网络")
    /// Image `hero-145等离子聚合体`.
    static let hero145等离子聚合体 = ImageResource(bundle: _R.hostingBundle, name: "hero-145等离子聚合体")
    /// Image `hero-145绝对屏障`.
    static let hero145绝对屏障 = ImageResource(bundle: _R.hostingBundle, name: "hero-145绝对屏障")
    /// Image `hero-145践踏`.
    static let hero145践踏 = ImageResource(bundle: _R.hostingBundle, name: "hero-145践踏")
    /// Image `hero-145黑色之翼`.
    static let hero145黑色之翼 = ImageResource(bundle: _R.hostingBundle, name: "hero-145黑色之翼")
    /// Image `hero-146 不可逆のネクローシス`.
    static let hero146不可逆のネクローシス = ImageResource(bundle: _R.hostingBundle, name: "hero-146 不可逆のネクローシス")
    /// Image `hero-146世界线跳跃`.
    static let hero146世界线跳跃 = ImageResource(bundle: _R.hostingBundle, name: "hero-146世界线跳跃")
    /// Image `hero-146怨嗟断愁のアポトーシス`.
    static let hero146怨嗟断愁のアポトーシス = ImageResource(bundle: _R.hostingBundle, name: "hero-146怨嗟断愁のアポトーシス")
    /// Image `hero-146无限连锁のアポトーシ`.
    static let hero146无限连锁のアポトーシ = ImageResource(bundle: _R.hostingBundle, name: "hero-146无限连锁のアポトーシ")
    /// Image `hero-146时间跳跃のパラノイア`.
    static let hero146时间跳跃のパラノイア = ImageResource(bundle: _R.hostingBundle, name: "hero-146时间跳跃のパラノイア")
    /// Image `hero-146牧濑红莉栖`.
    static let hero146牧濑红莉栖 = ImageResource(bundle: _R.hostingBundle, name: "hero-146牧濑红莉栖")
    /// Image `hero-147栗山未来`.
    static let hero147栗山未来 = ImageResource(bundle: _R.hostingBundle, name: "hero-147栗山未来")
    /// Image `hero-147血之护盾`.
    static let hero147血之护盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-147血之护盾")
    /// Image `hero-147血液爆发`.
    static let hero147血液爆发 = ImageResource(bundle: _R.hostingBundle, name: "hero-147血液爆发")
    /// Image `hero-147血脉牵引`.
    static let hero147血脉牵引 = ImageResource(bundle: _R.hostingBundle, name: "hero-147血脉牵引")
    /// Image `hero-147诅咒之血`.
    static let hero147诅咒之血 = ImageResource(bundle: _R.hostingBundle, name: "hero-147诅咒之血")
    /// Image `hero-147鲜血莲花`.
    static let hero147鲜血莲花 = ImageResource(bundle: _R.hostingBundle, name: "hero-147鲜血莲花")
    /// Image `hero-148不灭之意`.
    static let hero148不灭之意 = ImageResource(bundle: _R.hostingBundle, name: "hero-148不灭之意")
    /// Image `hero-148伊莎`.
    static let hero148伊莎 = ImageResource(bundle: _R.hostingBundle, name: "hero-148伊莎")
    /// Image `hero-148奥义之源`.
    static let hero148奥义之源 = ImageResource(bundle: _R.hostingBundle, name: "hero-148奥义之源")
    /// Image `hero-148审判之刃`.
    static let hero148审判之刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-148审判之刃")
    /// Image `hero-148永恒破碎`.
    static let hero148永恒破碎 = ImageResource(bundle: _R.hostingBundle, name: "hero-148永恒破碎")
    /// Image `hero-148瞬息万变`.
    static let hero148瞬息万变 = ImageResource(bundle: _R.hostingBundle, name: "hero-148瞬息万变")
    /// Image `hero-149X BURNER`.
    static let hero149XBURNER = ImageResource(bundle: _R.hostingBundle, name: "hero-149X BURNER")
    /// Image `hero-149XX BURNER`.
    static let hero149XXBURNER = ImageResource(bundle: _R.hostingBundle, name: "hero-149XX BURNER")
    /// Image `hero-149沢田纲吉`.
    static let hero149沢田纲吉 = ImageResource(bundle: _R.hostingBundle, name: "hero-149沢田纲吉")
    /// Image `hero-149超直感`.
    static let hero149超直感 = ImageResource(bundle: _R.hostingBundle, name: "hero-149超直感")
    /// Image `hero-149超速滑翔`.
    static let hero149超速滑翔 = ImageResource(bundle: _R.hostingBundle, name: "hero-149超速滑翔")
    /// Image `hero-149零地点突破·改or零地点突破·绝对零度`.
    static let hero149零地点突破改or零地点突破绝对零度 = ImageResource(bundle: _R.hostingBundle, name: "hero-149零地点突破·改or零地点突破·绝对零度")
    /// Image `hero-14惩戒之炎`.
    static let hero14惩戒之炎 = ImageResource(bundle: _R.hostingBundle, name: "hero-14惩戒之炎")
    /// Image `hero-14火龙的咆哮`.
    static let hero14火龙的咆哮 = ImageResource(bundle: _R.hostingBundle, name: "hero-14火龙的咆哮")
    /// Image `hero-14火龙的煌炎`.
    static let hero14火龙的煌炎 = ImageResource(bundle: _R.hostingBundle, name: "hero-14火龙的煌炎")
    /// Image `hero-14红莲爆炎刃`.
    static let hero14红莲爆炎刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-14红莲爆炎刃")
    /// Image `hero-14纳兹`.
    static let hero14纳兹 = ImageResource(bundle: _R.hostingBundle, name: "hero-14纳兹")
    /// Image `hero-14雷炎龙形态`.
    static let hero14雷炎龙形态 = ImageResource(bundle: _R.hostingBundle, name: "hero-14雷炎龙形态")
    /// Image `hero-15库洛牌`.
    static let hero15库洛牌 = ImageResource(bundle: _R.hostingBundle, name: "hero-15库洛牌")
    /// Image `hero-15斩炎`.
    static let hero15斩炎 = ImageResource(bundle: _R.hostingBundle, name: "hero-15斩炎")
    /// Image `hero-15李小狼`.
    static let hero15李小狼 = ImageResource(bundle: _R.hostingBundle, name: "hero-15李小狼")
    /// Image `hero-15炎狼`.
    static let hero15炎狼 = ImageResource(bundle: _R.hostingBundle, name: "hero-15炎狼")
    /// Image `hero-15炎狼意志`.
    static let hero15炎狼意志 = ImageResource(bundle: _R.hostingBundle, name: "hero-15炎狼意志")
    /// Image `hero-15绯炎斩`.
    static let hero15绯炎斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-15绯炎斩")
    /// Image `hero-17九头龙闪`.
    static let hero17九头龙闪 = ImageResource(bundle: _R.hostingBundle, name: "hero-17九头龙闪")
    /// Image `hero-17双龙闪`.
    static let hero17双龙闪 = ImageResource(bundle: _R.hostingBundle, name: "hero-17双龙闪")
    /// Image `hero-17土龙闪`.
    static let hero17土龙闪 = ImageResource(bundle: _R.hostingBundle, name: "hero-17土龙闪")
    /// Image `hero-17拔刀斋`.
    static let hero17拔刀斋 = ImageResource(bundle: _R.hostingBundle, name: "hero-17拔刀斋")
    /// Image `hero-17绯村剑心`.
    static let hero17绯村剑心 = ImageResource(bundle: _R.hostingBundle, name: "hero-17绯村剑心")
    /// Image `hero-17龙槌闪`.
    static let hero17龙槌闪 = ImageResource(bundle: _R.hostingBundle, name: "hero-17龙槌闪")
    /// Image `hero-18冰之棺`.
    static let hero18冰之棺 = ImageResource(bundle: _R.hostingBundle, name: "hero-18冰之棺")
    /// Image `hero-18古娜`.
    static let hero18古娜 = ImageResource(bundle: _R.hostingBundle, name: "hero-18古娜")
    /// Image `hero-18末日冰河`.
    static let hero18末日冰河 = ImageResource(bundle: _R.hostingBundle, name: "hero-18末日冰河")
    /// Image `hero-18绝对冻结`.
    static let hero18绝对冻结 = ImageResource(bundle: _R.hostingBundle, name: "hero-18绝对冻结")
    /// Image `hero-18钻石冰刃`.
    static let hero18钻石冰刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-18钻石冰刃")
    /// Image `hero-18钻石气息`.
    static let hero18钻石气息 = ImageResource(bundle: _R.hostingBundle, name: "hero-18钻石气息")
    /// Image `hero-19乔帮主`.
    static let hero19乔帮主 = ImageResource(bundle: _R.hostingBundle, name: "hero-19乔帮主")
    /// Image `hero-19脑力强化`.
    static let hero19脑力强化 = ImageResource(bundle: _R.hostingBundle, name: "hero-19脑力强化")
    /// Image `hero-19脚力强化`.
    static let hero19脚力强化 = ImageResource(bundle: _R.hostingBundle, name: "hero-19脚力强化")
    /// Image `hero-19船医`.
    static let hero19船医 = ImageResource(bundle: _R.hostingBundle, name: "hero-19船医")
    /// Image `hero-19蓝波丸`.
    static let hero19蓝波丸 = ImageResource(bundle: _R.hostingBundle, name: "hero-19蓝波丸")
    /// Image `hero-19通缉令`.
    static let hero19通缉令 = ImageResource(bundle: _R.hostingBundle, name: "hero-19通缉令")
    /// Image `hero-20冥道残月斩`.
    static let hero20冥道残月斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-20冥道残月斩")
    /// Image `hero-20天生牙`.
    static let hero20天生牙 = ImageResource(bundle: _R.hostingBundle, name: "hero-20天生牙")
    /// Image `hero-20杀生丸`.
    static let hero20杀生丸 = ImageResource(bundle: _R.hostingBundle, name: "hero-20杀生丸")
    /// Image `hero-20爆碎牙瞬杀`.
    static let hero20爆碎牙瞬杀 = ImageResource(bundle: _R.hostingBundle, name: "hero-20爆碎牙瞬杀")
    /// Image `hero-20苍龙破`.
    static let hero20苍龙破 = ImageResource(bundle: _R.hostingBundle, name: "hero-20苍龙破")
    /// Image `hero-20风之伤`.
    static let hero20风之伤 = ImageResource(bundle: _R.hostingBundle, name: "hero-20风之伤")
    /// Image `hero-21匹诺曹`.
    static let hero21匹诺曹 = ImageResource(bundle: _R.hostingBundle, name: "hero-21匹诺曹")
    /// Image `hero-21必杀大爆炸星`.
    static let hero21必杀大爆炸星 = ImageResource(bundle: _R.hostingBundle, name: "hero-21必杀大爆炸星")
    /// Image `hero-21必杀大铁锤`.
    static let hero21必杀大铁锤 = ImageResource(bundle: _R.hostingBundle, name: "hero-21必杀大铁锤")
    /// Image `hero-21必杀火药星`.
    static let hero21必杀火药星 = ImageResource(bundle: _R.hostingBundle, name: "hero-21必杀火药星")
    /// Image `hero-21必杀火鸟星`.
    static let hero21必杀火鸟星 = ImageResource(bundle: _R.hostingBundle, name: "hero-21必杀火鸟星")
    /// Image `hero-21狙击王驾到`.
    static let hero21狙击王驾到 = ImageResource(bundle: _R.hostingBundle, name: "hero-21狙击王驾到")
    /// Image `hero-22弱点击破`.
    static let hero22弱点击破 = ImageResource(bundle: _R.hostingBundle, name: "hero-22弱点击破")
    /// Image `hero-22神目黑刀`.
    static let hero22神目黑刀 = ImageResource(bundle: _R.hostingBundle, name: "hero-22神目黑刀")
    /// Image `hero-22鹰隼凝光`.
    static let hero22鹰隼凝光 = ImageResource(bundle: _R.hostingBundle, name: "hero-22鹰隼凝光")
    /// Image `hero-22黑刀一闪`.
    static let hero22黑刀一闪 = ImageResource(bundle: _R.hostingBundle, name: "hero-22黑刀一闪")
    /// Image `hero-22黑刀逆刃`.
    static let hero22黑刀逆刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-22黑刀逆刃")
    /// Image `hero-22黑刀长夜`.
    static let hero22黑刀长夜 = ImageResource(bundle: _R.hostingBundle, name: "hero-22黑刀长夜")
    /// Image `hero-23佐罗`.
    static let hero23佐罗 = ImageResource(bundle: _R.hostingBundle, name: "hero-23佐罗")
    /// Image `hero-23八百烦恼风`.
    static let hero23八百烦恼风 = ImageResource(bundle: _R.hostingBundle, name: "hero-23八百烦恼风")
    /// Image `hero-23居合斩`.
    static let hero23居合斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-23居合斩")
    /// Image `hero-23海贼猎人`.
    static let hero23海贼猎人 = ImageResource(bundle: _R.hostingBundle, name: "hero-23海贼猎人")
    /// Image `hero-23登楼`.
    static let hero23登楼 = ImageResource(bundle: _R.hostingBundle, name: "hero-23登楼")
    /// Image `hero-23空手白刃`.
    static let hero23空手白刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-23空手白刃")
    /// Image `hero-24JET统`.
    static let hero24JET统 = ImageResource(bundle: _R.hostingBundle, name: "hero-24JET统")
    /// Image `hero-24万里阳光号`.
    static let hero24万里阳光号 = ImageResource(bundle: _R.hostingBundle, name: "hero-24万里阳光号")
    /// Image `hero-24二档`.
    static let hero24二档 = ImageResource(bundle: _R.hostingBundle, name: "hero-24二档")
    /// Image `hero-24橡皮火箭`.
    static let hero24橡皮火箭 = ImageResource(bundle: _R.hostingBundle, name: "hero-24橡皮火箭")
    /// Image `hero-24橡胶果实`.
    static let hero24橡胶果实 = ImageResource(bundle: _R.hostingBundle, name: "hero-24橡胶果实")
    /// Image `hero-24草帽小子`.
    static let hero24草帽小子 = ImageResource(bundle: _R.hostingBundle, name: "hero-24草帽小子")
    /// Image `hero-25心眼`.
    static let hero25心眼 = ImageResource(bundle: _R.hostingBundle, name: "hero-25心眼")
    /// Image `hero-25散播毁灭`.
    static let hero25散播毁灭 = ImageResource(bundle: _R.hostingBundle, name: "hero-25散播毁灭")
    /// Image `hero-25暴风使者`.
    static let hero25暴风使者 = ImageResource(bundle: _R.hostingBundle, name: "hero-25暴风使者")
    /// Image `hero-25荆棘之箭`.
    static let hero25荆棘之箭 = ImageResource(bundle: _R.hostingBundle, name: "hero-25荆棘之箭")
    /// Image `hero-25雾影射手`.
    static let hero25雾影射手 = ImageResource(bundle: _R.hostingBundle, name: "hero-25雾影射手")
    /// Image `hero-25鸣镝`.
    static let hero25鸣镝 = ImageResource(bundle: _R.hostingBundle, name: "hero-25鸣镝")
    /// Image `hero-26兽王之心`.
    static let hero26兽王之心 = ImageResource(bundle: _R.hostingBundle, name: "hero-26兽王之心")
    /// Image `hero-26冰霜陷阱`.
    static let hero26冰霜陷阱 = ImageResource(bundle: _R.hostingBundle, name: "hero-26冰霜陷阱")
    /// Image `hero-26猎人印记`.
    static let hero26猎人印记 = ImageResource(bundle: _R.hostingBundle, name: "hero-26猎人印记")
    /// Image `hero-26猎人娃`.
    static let hero26猎人娃 = ImageResource(bundle: _R.hostingBundle, name: "hero-26猎人娃")
    /// Image `hero-26瞄准射击`.
    static let hero26瞄准射击 = ImageResource(bundle: _R.hostingBundle, name: "hero-26瞄准射击")
    /// Image `hero-26雄鹰守护`.
    static let hero26雄鹰守护 = ImageResource(bundle: _R.hostingBundle, name: "hero-26雄鹰守护")
    /// Image `hero-27击碎`.
    static let hero27击碎 = ImageResource(bundle: _R.hostingBundle, name: "hero-27击碎")
    /// Image `hero-27幻刺·L·莉莉`.
    static let hero27幻刺L莉莉 = ImageResource(bundle: _R.hostingBundle, name: "hero-27幻刺·L·莉莉")
    /// Image `hero-27恩赐解脱`.
    static let hero27恩赐解脱 = ImageResource(bundle: _R.hostingBundle, name: "hero-27恩赐解脱")
    /// Image `hero-27暗影突袭`.
    static let hero27暗影突袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-27暗影突袭")
    /// Image `hero-27窒息之刃`.
    static let hero27窒息之刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-27窒息之刃")
    /// Image `hero-27符文护体`.
    static let hero27符文护体 = ImageResource(bundle: _R.hostingBundle, name: "hero-27符文护体")
    /// Image `hero-28击碎`.
    static let hero28击碎 = ImageResource(bundle: _R.hostingBundle, name: "hero-28击碎")
    /// Image `hero-28幻刺·D·露西`.
    static let hero28幻刺D露西 = ImageResource(bundle: _R.hostingBundle, name: "hero-28幻刺·D·露西")
    /// Image `hero-28恩赐解脱`.
    static let hero28恩赐解脱 = ImageResource(bundle: _R.hostingBundle, name: "hero-28恩赐解脱")
    /// Image `hero-28暗影突袭`.
    static let hero28暗影突袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-28暗影突袭")
    /// Image `hero-28窒息之刃`.
    static let hero28窒息之刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-28窒息之刃")
    /// Image `hero-28符文护体`.
    static let hero28符文护体 = ImageResource(bundle: _R.hostingBundle, name: "hero-28符文护体")
    /// Image `hero-29吕布`.
    static let hero29吕布 = ImageResource(bundle: _R.hostingBundle, name: "hero-29吕布")
    /// Image `hero-29方天画戟`.
    static let hero29方天画戟 = ImageResource(bundle: _R.hostingBundle, name: "hero-29方天画戟")
    /// Image `hero-29无双`.
    static let hero29无双 = ImageResource(bundle: _R.hostingBundle, name: "hero-29无双")
    /// Image `hero-29暴风疾走`.
    static let hero29暴风疾走 = ImageResource(bundle: _R.hostingBundle, name: "hero-29暴风疾走")
    /// Image `hero-29致死斩杀`.
    static let hero29致死斩杀 = ImageResource(bundle: _R.hostingBundle, name: "hero-29致死斩杀")
    /// Image `hero-29魔神降临`.
    static let hero29魔神降临 = ImageResource(bundle: _R.hostingBundle, name: "hero-29魔神降临")
    /// Image `hero-2八方鬼缚阵`.
    static let hero2八方鬼缚阵 = ImageResource(bundle: _R.hostingBundle, name: "hero-2八方鬼缚阵")
    /// Image `hero-2博丽大结界`.
    static let hero2博丽大结界 = ImageResource(bundle: _R.hostingBundle, name: "hero-2博丽大结界")
    /// Image `hero-2博丽灵梦`.
    static let hero2博丽灵梦 = ImageResource(bundle: _R.hostingBundle, name: "hero-2博丽灵梦")
    /// Image `hero-2妖怪Buster`.
    static let hero2妖怪Buster = ImageResource(bundle: _R.hostingBundle, name: "hero-2妖怪Buster")
    /// Image `hero-2梦想封印`.
    static let hero2梦想封印 = ImageResource(bundle: _R.hostingBundle, name: "hero-2梦想封印")
    /// Image `hero-2阴阳鬼神玉`.
    static let hero2阴阳鬼神玉 = ImageResource(bundle: _R.hostingBundle, name: "hero-2阴阳鬼神玉")
    /// Image `hero-30丛林剧毒`.
    static let hero30丛林剧毒 = ImageResource(bundle: _R.hostingBundle, name: "hero-30丛林剧毒")
    /// Image `hero-30偷袭`.
    static let hero30偷袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-30偷袭")
    /// Image `hero-30化形战士`.
    static let hero30化形战士 = ImageResource(bundle: _R.hostingBundle, name: "hero-30化形战士")
    /// Image `hero-30多重化身`.
    static let hero30多重化身 = ImageResource(bundle: _R.hostingBundle, name: "hero-30多重化身")
    /// Image `hero-30幽毒之痕`.
    static let hero30幽毒之痕 = ImageResource(bundle: _R.hostingBundle, name: "hero-30幽毒之痕")
    /// Image `hero-30潜行突袭`.
    static let hero30潜行突袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-30潜行突袭")
    /// Image `hero-31属性附加`.
    static let hero31属性附加 = ImageResource(bundle: _R.hostingBundle, name: "hero-31属性附加")
    /// Image `hero-31敌法师`.
    static let hero31敌法师 = ImageResource(bundle: _R.hostingBundle, name: "hero-31敌法师")
    /// Image `hero-31法力护盾`.
    static let hero31法力护盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-31法力护盾")
    /// Image `hero-31法力毁损`.
    static let hero31法力毁损 = ImageResource(bundle: _R.hostingBundle, name: "hero-31法力毁损")
    /// Image `hero-31法力虚空`.
    static let hero31法力虚空 = ImageResource(bundle: _R.hostingBundle, name: "hero-31法力虚空")
    /// Image `hero-31闪烁`.
    static let hero31闪烁 = ImageResource(bundle: _R.hostingBundle, name: "hero-31闪烁")
    /// Image `hero-32关羽`.
    static let hero32关羽 = ImageResource(bundle: _R.hostingBundle, name: "hero-32关羽")
    /// Image `hero-32复仇`.
    static let hero32复仇 = ImageResource(bundle: _R.hostingBundle, name: "hero-32复仇")
    /// Image `hero-32拖刀技`.
    static let hero32拖刀技 = ImageResource(bundle: _R.hostingBundle, name: "hero-32拖刀技")
    /// Image `hero-32武圣义`.
    static let hero32武圣义 = ImageResource(bundle: _R.hostingBundle, name: "hero-32武圣义")
    /// Image `hero-32武圣势`.
    static let hero32武圣势 = ImageResource(bundle: _R.hostingBundle, name: "hero-32武圣势")
    /// Image `hero-32追斩`.
    static let hero32追斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-32追斩")
    /// Image `hero-33健步如飞`.
    static let hero33健步如飞 = ImageResource(bundle: _R.hostingBundle, name: "hero-33健步如飞")
    /// Image `hero-33弹射手里剑`.
    static let hero33弹射手里剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-33弹射手里剑")
    /// Image `hero-33忍术遁法`.
    static let hero33忍术遁法 = ImageResource(bundle: _R.hostingBundle, name: "hero-33忍术遁法")
    /// Image `hero-33旋风手里剑`.
    static let hero33旋风手里剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-33旋风手里剑")
    /// Image `hero-33疾风之忍`.
    static let hero33疾风之忍 = ImageResource(bundle: _R.hostingBundle, name: "hero-33疾风之忍")
    /// Image `hero-33疾风行军`.
    static let hero33疾风行军 = ImageResource(bundle: _R.hostingBundle, name: "hero-33疾风行军")
    /// Image `hero-34万花筒写轮眼`.
    static let hero34万花筒写轮眼 = ImageResource(bundle: _R.hostingBundle, name: "hero-34万花筒写轮眼")
    /// Image `hero-34万蛇or鹰`.
    static let hero34万蛇or鹰 = ImageResource(bundle: _R.hostingBundle, name: "hero-34万蛇or鹰")
    /// Image `hero-34千鸟流`.
    static let hero34千鸟流 = ImageResource(bundle: _R.hostingBundle, name: "hero-34千鸟流")
    /// Image `hero-34天照`.
    static let hero34天照 = ImageResource(bundle: _R.hostingBundle, name: "hero-34天照")
    /// Image `hero-34左二少`.
    static let hero34左二少 = ImageResource(bundle: _R.hostingBundle, name: "hero-34左二少")
    /// Image `hero-34须佐能乎`.
    static let hero34须佐能乎 = ImageResource(bundle: _R.hostingBundle, name: "hero-34须佐能乎")
    /// Image `hero-35吉尔加美什`.
    static let hero35吉尔加美什 = ImageResource(bundle: _R.hostingBundle, name: "hero-35吉尔加美什")
    /// Image `hero-35天之锁`.
    static let hero35天之锁 = ImageResource(bundle: _R.hostingBundle, name: "hero-35天之锁")
    /// Image `hero-35天地乖离-开辟之星`.
    static let hero35天地乖离开辟之星 = ImageResource(bundle: _R.hostingBundle, name: "hero-35天地乖离-开辟之星")
    /// Image `hero-35王的宝库`.
    static let hero35王的宝库 = ImageResource(bundle: _R.hostingBundle, name: "hero-35王的宝库")
    /// Image `hero-35空间转移`.
    static let hero35空间转移 = ImageResource(bundle: _R.hostingBundle, name: "hero-35空间转移")
    /// Image `hero-35黄金律`.
    static let hero35黄金律 = ImageResource(bundle: _R.hostingBundle, name: "hero-35黄金律")
    /// Image `hero-36沙僧`.
    static let hero36沙僧 = ImageResource(bundle: _R.hostingBundle, name: "hero-36沙僧")
    /// Image `hero-36流沙猛击`.
    static let hero36流沙猛击 = ImageResource(bundle: _R.hostingBundle, name: "hero-36流沙猛击")
    /// Image `hero-36玄冰护甲`.
    static let hero36玄冰护甲 = ImageResource(bundle: _R.hostingBundle, name: "hero-36玄冰护甲")
    /// Image `hero-36致命碾压`.
    static let hero36致命碾压 = ImageResource(bundle: _R.hostingBundle, name: "hero-36致命碾压")
    /// Image `hero-36若水天牢`.
    static let hero36若水天牢 = ImageResource(bundle: _R.hostingBundle, name: "hero-36若水天牢")
    /// Image `hero-36通天禅杖`.
    static let hero36通天禅杖 = ImageResource(bundle: _R.hostingBundle, name: "hero-36通天禅杖")
    /// Image `hero-37三笠`.
    static let hero37三笠 = ImageResource(bundle: _R.hostingBundle, name: "hero-37三笠")
    /// Image `hero-37决死之心`.
    static let hero37决死之心 = ImageResource(bundle: _R.hostingBundle, name: "hero-37决死之心")
    /// Image `hero-37合金刀刃`.
    static let hero37合金刀刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-37合金刀刃")
    /// Image `hero-37弱点打击`.
    static let hero37弱点打击 = ImageResource(bundle: _R.hostingBundle, name: "hero-37弱点打击")
    /// Image `hero-37弹射钩爪`.
    static let hero37弹射钩爪 = ImageResource(bundle: _R.hostingBundle, name: "hero-37弹射钩爪")
    /// Image `hero-37旋转斩击`.
    static let hero37旋转斩击 = ImageResource(bundle: _R.hostingBundle, name: "hero-37旋转斩击")
    /// Image `hero-38亡灵女王`.
    static let hero38亡灵女王 = ImageResource(bundle: _R.hostingBundle, name: "hero-38亡灵女王")
    /// Image `hero-38亡灵时刻`.
    static let hero38亡灵时刻 = ImageResource(bundle: _R.hostingBundle, name: "hero-38亡灵时刻")
    /// Image `hero-38俯冲射击`.
    static let hero38俯冲射击 = ImageResource(bundle: _R.hostingBundle, name: "hero-38俯冲射击")
    /// Image `hero-38凝神射击`.
    static let hero38凝神射击 = ImageResource(bundle: _R.hostingBundle, name: "hero-38凝神射击")
    /// Image `hero-38暗夜本能`.
    static let hero38暗夜本能 = ImageResource(bundle: _R.hostingBundle, name: "hero-38暗夜本能")
    /// Image `hero-38腐蚀之箭`.
    static let hero38腐蚀之箭 = ImageResource(bundle: _R.hostingBundle, name: "hero-38腐蚀之箭")
    /// Image `hero-39出血`.
    static let hero39出血 = ImageResource(bundle: _R.hostingBundle, name: "hero-39出血")
    /// Image `hero-39剔骨`.
    static let hero39剔骨 = ImageResource(bundle: _R.hostingBundle, name: "hero-39剔骨")
    /// Image `hero-39消失`.
    static let hero39消失 = ImageResource(bundle: _R.hostingBundle, name: "hero-39消失")
    /// Image `hero-39潜行`.
    static let hero39潜行 = ImageResource(bundle: _R.hostingBundle, name: "hero-39潜行")
    /// Image `hero-39盗贼娃`.
    static let hero39盗贼娃 = ImageResource(bundle: _R.hostingBundle, name: "hero-39盗贼娃")
    /// Image `hero-39肾击`.
    static let hero39肾击 = ImageResource(bundle: _R.hostingBundle, name: "hero-39肾击")
    /// Image `hero-3Saber`.
    static let hero3Saber = ImageResource(bundle: _R.hostingBundle, name: "hero-3Saber")
    /// Image `hero-3殒星斩`.
    static let hero3殒星斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-3殒星斩")
    /// Image `hero-3理想乡`.
    static let hero3理想乡 = ImageResource(bundle: _R.hostingBundle, name: "hero-3理想乡")
    /// Image `hero-3誓约胜利之剑`.
    static let hero3誓约胜利之剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-3誓约胜利之剑")
    /// Image `hero-3风王结界`.
    static let hero3风王结界 = ImageResource(bundle: _R.hostingBundle, name: "hero-3风王结界")
    /// Image `hero-3风王铁槌`.
    static let hero3风王铁槌 = ImageResource(bundle: _R.hostingBundle, name: "hero-3风王铁槌")
    /// Image `hero-40反击螺旋`.
    static let hero40反击螺旋 = ImageResource(bundle: _R.hostingBundle, name: "hero-40反击螺旋")
    /// Image `hero-40属性附加`.
    static let hero40属性附加 = ImageResource(bundle: _R.hostingBundle, name: "hero-40属性附加")
    /// Image `hero-40战斗饥渴`.
    static let hero40战斗饥渴 = ImageResource(bundle: _R.hostingBundle, name: "hero-40战斗饥渴")
    /// Image `hero-40斧王`.
    static let hero40斧王 = ImageResource(bundle: _R.hostingBundle, name: "hero-40斧王")
    /// Image `hero-40淘汰之刃`.
    static let hero40淘汰之刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-40淘汰之刃")
    /// Image `hero-40狂战士怒吼`.
    static let hero40狂战士怒吼 = ImageResource(bundle: _R.hostingBundle, name: "hero-40狂战士怒吼")
    /// Image `hero-41地狱烈光`.
    static let hero41地狱烈光 = ImageResource(bundle: _R.hostingBundle, name: "hero-41地狱烈光")
    /// Image `hero-41望远镜`.
    static let hero41望远镜 = ImageResource(bundle: _R.hostingBundle, name: "hero-41望远镜")
    /// Image `hero-41照明弹`.
    static let hero41照明弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-41照明弹")
    /// Image `hero-41疾风冲刺`.
    static let hero41疾风冲刺 = ImageResource(bundle: _R.hostingBundle, name: "hero-41疾风冲刺")
    /// Image `hero-41穿甲弹`.
    static let hero41穿甲弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-41穿甲弹")
    /// Image `hero-41霍比侦查兵`.
    static let hero41霍比侦查兵 = ImageResource(bundle: _R.hostingBundle, name: "hero-41霍比侦查兵")
    /// Image `hero-42不知火舞`.
    static let hero42不知火舞 = ImageResource(bundle: _R.hostingBundle, name: "hero-42不知火舞")
    /// Image `hero-42冲刺`.
    static let hero42冲刺 = ImageResource(bundle: _R.hostingBundle, name: "hero-42冲刺")
    /// Image `hero-42忍蜂`.
    static let hero42忍蜂 = ImageResource(bundle: _R.hostingBundle, name: "hero-42忍蜂")
    /// Image `hero-42怒气`.
    static let hero42怒气 = ImageResource(bundle: _R.hostingBundle, name: "hero-42怒气")
    /// Image `hero-42花蝶扇`.
    static let hero42花蝶扇 = ImageResource(bundle: _R.hostingBundle, name: "hero-42花蝶扇")
    /// Image `hero-42龙翔之舞`.
    static let hero42龙翔之舞 = ImageResource(bundle: _R.hostingBundle, name: "hero-42龙翔之舞")
    /// Image `hero-43卖雷`.
    static let hero43卖雷 = ImageResource(bundle: _R.hostingBundle, name: "hero-43卖雷")
    /// Image `hero-43打分`.
    static let hero43打分 = ImageResource(bundle: _R.hostingBundle, name: "hero-43打分")
    /// Image `hero-43盐汽水`.
    static let hero43盐汽水 = ImageResource(bundle: _R.hostingBundle, name: "hero-43盐汽水")
    /// Image `hero-43计数`.
    static let hero43计数 = ImageResource(bundle: _R.hostingBundle, name: "hero-43计数")
    /// Image `hero-43超杀盐汽水`.
    static let hero43超杀盐汽水 = ImageResource(bundle: _R.hostingBundle, name: "hero-43超杀盐汽水")
    /// Image `hero-43陈美嘉`.
    static let hero43陈美嘉 = ImageResource(bundle: _R.hostingBundle, name: "hero-43陈美嘉")
    /// Image `hero-44Alef`.
    static let hero44Alef = ImageResource(bundle: _R.hostingBundle, name: "hero-44Alef")
    /// Image `hero-44BetorZayinorYod`.
    static let hero44BetorZayinorYod = ImageResource(bundle: _R.hostingBundle, name: "hero-44BetorZayinorYod")
    /// Image `hero-44DaletorChet`.
    static let hero44DaletorChet = ImageResource(bundle: _R.hostingBundle, name: "hero-44DaletorChet")
    /// Image `hero-44Zafkiel`.
    static let hero44Zafkiel = ImageResource(bundle: _R.hostingBundle, name: "hero-44Zafkiel")
    /// Image `hero-44时崎狂三`.
    static let hero44时崎狂三 = ImageResource(bundle: _R.hostingBundle, name: "hero-44时崎狂三")
    /// Image `hero-44食时之城`.
    static let hero44食时之城 = ImageResource(bundle: _R.hostingBundle, name: "hero-44食时之城")
    /// Image `hero-45冰环`.
    static let hero45冰环 = ImageResource(bundle: _R.hostingBundle, name: "hero-45冰环")
    /// Image `hero-45冰霜精通`.
    static let hero45冰霜精通 = ImageResource(bundle: _R.hostingBundle, name: "hero-45冰霜精通")
    /// Image `hero-45寒冰箭`.
    static let hero45寒冰箭 = ImageResource(bundle: _R.hostingBundle, name: "hero-45寒冰箭")
    /// Image `hero-45寒冰闪现`.
    static let hero45寒冰闪现 = ImageResource(bundle: _R.hostingBundle, name: "hero-45寒冰闪现")
    /// Image `hero-45法师娃`.
    static let hero45法师娃 = ImageResource(bundle: _R.hostingBundle, name: "hero-45法师娃")
    /// Image `hero-45深结`.
    static let hero45深结 = ImageResource(bundle: _R.hostingBundle, name: "hero-45深结")
    /// Image `hero-46北斗七星续命步`.
    static let hero46北斗七星续命步 = ImageResource(bundle: _R.hostingBundle, name: "hero-46北斗七星续命步")
    /// Image `hero-46洞察or料敌先机`.
    static let hero46洞察or料敌先机 = ImageResource(bundle: _R.hostingBundle, name: "hero-46洞察or料敌先机")
    /// Image `hero-46火攻`.
    static let hero46火攻 = ImageResource(bundle: _R.hostingBundle, name: "hero-46火攻")
    /// Image `hero-46狂风`.
    static let hero46狂风 = ImageResource(bundle: _R.hostingBundle, name: "hero-46狂风")
    /// Image `hero-46空城计`.
    static let hero46空城计 = ImageResource(bundle: _R.hostingBundle, name: "hero-46空城计")
    /// Image `hero-46诸葛亮`.
    static let hero46诸葛亮 = ImageResource(bundle: _R.hostingBundle, name: "hero-46诸葛亮")
    /// Image `hero-47双蛇相博`.
    static let hero47双蛇相博 = ImageResource(bundle: _R.hostingBundle, name: "hero-47双蛇相博")
    /// Image `hero-47杀意之刃`.
    static let hero47杀意之刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-47杀意之刃")
    /// Image `hero-47森罗蛇阵`.
    static let hero47森罗蛇阵 = ImageResource(bundle: _R.hostingBundle, name: "hero-47森罗蛇阵")
    /// Image `hero-47潜影蛇手`.
    static let hero47潜影蛇手 = ImageResource(bundle: _R.hostingBundle, name: "hero-47潜影蛇手")
    /// Image `hero-47白蛇脱壳`.
    static let hero47白蛇脱壳 = ImageResource(bundle: _R.hostingBundle, name: "hero-47白蛇脱壳")
    /// Image `hero-47蛇叔`.
    static let hero47蛇叔 = ImageResource(bundle: _R.hostingBundle, name: "hero-47蛇叔")
    /// Image `hero-48大炎戒·炎帝`.
    static let hero48大炎戒炎帝 = ImageResource(bundle: _R.hostingBundle, name: "hero-48大炎戒·炎帝")
    /// Image `hero-48火拳`.
    static let hero48火拳 = ImageResource(bundle: _R.hostingBundle, name: "hero-48火拳")
    /// Image `hero-48火拳·S`.
    static let hero48火拳S = ImageResource(bundle: _R.hostingBundle, name: "hero-48火拳·S")
    /// Image `hero-48炎戒·火柱`.
    static let hero48炎戒火柱 = ImageResource(bundle: _R.hostingBundle, name: "hero-48炎戒·火柱")
    /// Image `hero-48烧烧果实`.
    static let hero48烧烧果实 = ImageResource(bundle: _R.hostingBundle, name: "hero-48烧烧果实")
    /// Image `hero-48神火鸡·无名火`.
    static let hero48神火鸡无名火 = ImageResource(bundle: _R.hostingBundle, name: "hero-48神火鸡·无名火")
    /// Image `hero-49卡殿下`.
    static let hero49卡殿下 = ImageResource(bundle: _R.hostingBundle, name: "hero-49卡殿下")
    /// Image `hero-49忍术`.
    static let hero49忍术 = ImageResource(bundle: _R.hostingBundle, name: "hero-49忍术")
    /// Image `hero-49水鲛弹`.
    static let hero49水鲛弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-49水鲛弹")
    /// Image `hero-49神威`.
    static let hero49神威 = ImageResource(bundle: _R.hostingBundle, name: "hero-49神威")
    /// Image `hero-49追牙`.
    static let hero49追牙 = ImageResource(bundle: _R.hostingBundle, name: "hero-49追牙")
    /// Image `hero-49雷切`.
    static let hero49雷切 = ImageResource(bundle: _R.hostingBundle, name: "hero-49雷切")
    /// Image `hero-4影踪`.
    static let hero4影踪 = ImageResource(bundle: _R.hostingBundle, name: "hero-4影踪")
    /// Image `hero-4电击`.
    static let hero4电击 = ImageResource(bundle: _R.hostingBundle, name: "hero-4电击")
    /// Image `hero-4白`.
    static let hero4白 = ImageResource(bundle: _R.hostingBundle, name: "hero-4白")
    /// Image `hero-4银`.
    static let hero4银 = ImageResource(bundle: _R.hostingBundle, name: "hero-4银")
    /// Image `hero-4黑`.
    static let hero4黑 = ImageResource(bundle: _R.hostingBundle, name: "hero-4黑")
    /// Image `hero-4黑skill`.
    static let hero4黑skill = ImageResource(bundle: _R.hostingBundle, name: "hero-4黑skill")
    /// Image `hero-50火势蔓延`.
    static let hero50火势蔓延 = ImageResource(bundle: _R.hostingBundle, name: "hero-50火势蔓延")
    /// Image `hero-50点燃`.
    static let hero50点燃 = ImageResource(bundle: _R.hostingBundle, name: "hero-50点燃")
    /// Image `hero-50烈火之罚`.
    static let hero50烈火之罚 = ImageResource(bundle: _R.hostingBundle, name: "hero-50烈火之罚")
    /// Image `hero-50焦热地狱`.
    static let hero50焦热地狱 = ImageResource(bundle: _R.hostingBundle, name: "hero-50焦热地狱")
    /// Image `hero-50纵火狂`.
    static let hero50纵火狂 = ImageResource(bundle: _R.hostingBundle, name: "hero-50纵火狂")
    /// Image `hero-50魔导少女`.
    static let hero50魔导少女 = ImageResource(bundle: _R.hostingBundle, name: "hero-50魔导少女")
    /// Image `hero-51哉佩利敖光线`.
    static let hero51哉佩利敖光线 = ImageResource(bundle: _R.hostingBundle, name: "hero-51哉佩利敖光线")
    /// Image `hero-51奥特曼`.
    static let hero51奥特曼 = ImageResource(bundle: _R.hostingBundle, name: "hero-51奥特曼")
    /// Image `hero-51斯派修姆光线`.
    static let hero51斯派修姆光线 = ImageResource(bundle: _R.hostingBundle, name: "hero-51斯派修姆光线")
    /// Image `hero-51神光棒`.
    static let hero51神光棒 = ImageResource(bundle: _R.hostingBundle, name: "hero-51神光棒")
    /// Image `hero-51蓝帕尔特光弹`.
    static let hero51蓝帕尔特光弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-51蓝帕尔特光弹")
    /// Image `hero-51迪拉休姆光流`.
    static let hero51迪拉休姆光流 = ImageResource(bundle: _R.hostingBundle, name: "hero-51迪拉休姆光流")
    /// Image `hero-52三世因果咒`.
    static let hero52三世因果咒 = ImageResource(bundle: _R.hostingBundle, name: "hero-52三世因果咒")
    /// Image `hero-52唐僧`.
    static let hero52唐僧 = ImageResource(bundle: _R.hostingBundle, name: "hero-52唐僧")
    /// Image `hero-52大悲咒`.
    static let hero52大悲咒 = ImageResource(bundle: _R.hostingBundle, name: "hero-52大悲咒")
    /// Image `hero-52慧根`.
    static let hero52慧根 = ImageResource(bundle: _R.hostingBundle, name: "hero-52慧根")
    /// Image `hero-52救世真言`.
    static let hero52救世真言 = ImageResource(bundle: _R.hostingBundle, name: "hero-52救世真言")
    /// Image `hero-52补缺真言`.
    static let hero52补缺真言 = ImageResource(bundle: _R.hostingBundle, name: "hero-52补缺真言")
    /// Image `hero-53光明审判`.
    static let hero53光明审判 = ImageResource(bundle: _R.hostingBundle, name: "hero-53光明审判")
    /// Image `hero-53天谕秘术`.
    static let hero53天谕秘术 = ImageResource(bundle: _R.hostingBundle, name: "hero-53天谕秘术")
    /// Image `hero-53庇护之翼`.
    static let hero53庇护之翼 = ImageResource(bundle: _R.hostingBundle, name: "hero-53庇护之翼")
    /// Image `hero-53神圣守护`.
    static let hero53神圣守护 = ImageResource(bundle: _R.hostingBundle, name: "hero-53神圣守护")
    /// Image `hero-53裁决之杖`.
    static let hero53裁决之杖 = ImageResource(bundle: _R.hostingBundle, name: "hero-53裁决之杖")
    /// Image `hero-53雅典娜`.
    static let hero53雅典娜 = ImageResource(bundle: _R.hostingBundle, name: "hero-53雅典娜")
    /// Image `hero-54暗影形态or神圣形态`.
    static let hero54暗影形态or神圣形态 = ImageResource(bundle: _R.hostingBundle, name: "hero-54暗影形态or神圣形态")
    /// Image `hero-54瀑流or暗言术痛`.
    static let hero54瀑流or暗言术痛 = ImageResource(bundle: _R.hostingBundle, name: "hero-54瀑流or暗言术痛")
    /// Image `hero-54牧师娃`.
    static let hero54牧师娃 = ImageResource(bundle: _R.hostingBundle, name: "hero-54牧师娃")
    /// Image `hero-54真言术盾or暗言术灭`.
    static let hero54真言术盾or暗言术灭 = ImageResource(bundle: _R.hostingBundle, name: "hero-54真言术盾or暗言术灭")
    /// Image `hero-54真言术韧`.
    static let hero54真言术韧 = ImageResource(bundle: _R.hostingBundle, name: "hero-54真言术韧")
    /// Image `hero-54虔诚之跃or心灵尖啸`.
    static let hero54虔诚之跃or心灵尖啸 = ImageResource(bundle: _R.hostingBundle, name: "hero-54虔诚之跃or心灵尖啸")
    /// Image `hero-55截击鸡`.
    static let hero55截击鸡 = ImageResource(bundle: _R.hostingBundle, name: "hero-55截击鸡")
    /// Image `hero-55拯救失足的小鸡`.
    static let hero55拯救失足的小鸡 = ImageResource(bundle: _R.hostingBundle, name: "hero-55拯救失足的小鸡")
    /// Image `hero-55攻击鸡`.
    static let hero55攻击鸡 = ImageResource(bundle: _R.hostingBundle, name: "hero-55攻击鸡")
    /// Image `hero-55突击鸡`.
    static let hero55突击鸡 = ImageResource(bundle: _R.hostingBundle, name: "hero-55突击鸡")
    /// Image `hero-55轰炸鸡`.
    static let hero55轰炸鸡 = ImageResource(bundle: _R.hostingBundle, name: "hero-55轰炸鸡")
    /// Image `hero-55齐天小剩`.
    static let hero55齐天小剩 = ImageResource(bundle: _R.hostingBundle, name: "hero-55齐天小剩")
    /// Image `hero-56冰电之刃`.
    static let hero56冰电之刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-56冰电之刃")
    /// Image `hero-56天海之罚`.
    static let hero56天海之罚 = ImageResource(bundle: _R.hostingBundle, name: "hero-56天海之罚")
    /// Image `hero-56洪流风暴`.
    static let hero56洪流风暴 = ImageResource(bundle: _R.hostingBundle, name: "hero-56洪流风暴")
    /// Image `hero-56腐蚀浸泡`.
    static let hero56腐蚀浸泡 = ImageResource(bundle: _R.hostingBundle, name: "hero-56腐蚀浸泡")
    /// Image `hero-56舰队统帅`.
    static let hero56舰队统帅 = ImageResource(bundle: _R.hostingBundle, name: "hero-56舰队统帅")
    /// Image `hero-56锚击`.
    static let hero56锚击 = ImageResource(bundle: _R.hostingBundle, name: "hero-56锚击")
    /// Image `hero-57吸血鬼之触`.
    static let hero57吸血鬼之触 = ImageResource(bundle: _R.hostingBundle, name: "hero-57吸血鬼之触")
    /// Image `hero-57嗜血悸动`.
    static let hero57嗜血悸动 = ImageResource(bundle: _R.hostingBundle, name: "hero-57嗜血悸动")
    /// Image `hero-57梦寐附体`.
    static let hero57梦寐附体 = ImageResource(bundle: _R.hostingBundle, name: "hero-57梦寐附体")
    /// Image `hero-57死神`.
    static let hero57死神 = ImageResource(bundle: _R.hostingBundle, name: "hero-57死神")
    /// Image `hero-57灵魂撕裂`.
    static let hero57灵魂撕裂 = ImageResource(bundle: _R.hostingBundle, name: "hero-57灵魂撕裂")
    /// Image `hero-57鬼哭神嚎`.
    static let hero57鬼哭神嚎 = ImageResource(bundle: _R.hostingBundle, name: "hero-57鬼哭神嚎")
    /// Image `hero-58变异魔菇`.
    static let hero58变异魔菇 = ImageResource(bundle: _R.hostingBundle, name: "hero-58变异魔菇")
    /// Image `hero-58坚固伞盖`.
    static let hero58坚固伞盖 = ImageResource(bundle: _R.hostingBundle, name: "hero-58坚固伞盖")
    /// Image `hero-58寄生真菌`.
    static let hero58寄生真菌 = ImageResource(bundle: _R.hostingBundle, name: "hero-58寄生真菌")
    /// Image `hero-58扎根`.
    static let hero58扎根 = ImageResource(bundle: _R.hostingBundle, name: "hero-58扎根")
    /// Image `hero-58毒菌爆发`.
    static let hero58毒菌爆发 = ImageResource(bundle: _R.hostingBundle, name: "hero-58毒菌爆发")
    /// Image `hero-58蘑菇云`.
    static let hero58蘑菇云 = ImageResource(bundle: _R.hostingBundle, name: "hero-58蘑菇云")
    /// Image `hero-59属性附加`.
    static let hero59属性附加 = ImageResource(bundle: _R.hostingBundle, name: "hero-59属性附加")
    /// Image `hero-59暗影突袭`.
    static let hero59暗影突袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-59暗影突袭")
    /// Image `hero-59痛苦女王`.
    static let hero59痛苦女王 = ImageResource(bundle: _R.hostingBundle, name: "hero-59痛苦女王")
    /// Image `hero-59痛苦尖叫`.
    static let hero59痛苦尖叫 = ImageResource(bundle: _R.hostingBundle, name: "hero-59痛苦尖叫")
    /// Image `hero-59超声波冲击`.
    static let hero59超声波冲击 = ImageResource(bundle: _R.hostingBundle, name: "hero-59超声波冲击")
    /// Image `hero-59闪烁`.
    static let hero59闪烁 = ImageResource(bundle: _R.hostingBundle, name: "hero-59闪烁")
    /// Image `hero-5失落圣诞`.
    static let hero5失落圣诞 = ImageResource(bundle: _R.hostingBundle, name: "hero-5失落圣诞")
    /// Image `hero-5挽诗`.
    static let hero5挽诗 = ImageResource(bundle: _R.hostingBundle, name: "hero-5挽诗")
    /// Image `hero-5本我黯甲`.
    static let hero5本我黯甲 = ImageResource(bundle: _R.hostingBundle, name: "hero-5本我黯甲")
    /// Image `hero-5楪祈`.
    static let hero5楪祈 = ImageResource(bundle: _R.hostingBundle, name: "hero-5楪祈")
    /// Image `hero-5歌者闇剑`.
    static let hero5歌者闇剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-5歌者闇剑")
    /// Image `hero-5涯-领袖之枪`.
    static let hero5涯领袖之枪 = ImageResource(bundle: _R.hostingBundle, name: "hero-5涯-领袖之枪")
    /// Image `hero-60属性附加`.
    static let hero60属性附加 = ImageResource(bundle: _R.hostingBundle, name: "hero-60属性附加")
    /// Image `hero-60月之女祭司`.
    static let hero60月之女祭司 = ImageResource(bundle: _R.hostingBundle, name: "hero-60月之女祭司")
    /// Image `hero-60月之暗面`.
    static let hero60月之暗面 = ImageResource(bundle: _R.hostingBundle, name: "hero-60月之暗面")
    /// Image `hero-60月神之箭`.
    static let hero60月神之箭 = ImageResource(bundle: _R.hostingBundle, name: "hero-60月神之箭")
    /// Image `hero-60群星坠落`.
    static let hero60群星坠落 = ImageResource(bundle: _R.hostingBundle, name: "hero-60群星坠落")
    /// Image `hero-60跳跃`.
    static let hero60跳跃 = ImageResource(bundle: _R.hostingBundle, name: "hero-60跳跃")
    /// Image `hero-61倾国`.
    static let hero61倾国 = ImageResource(bundle: _R.hostingBundle, name: "hero-61倾国")
    /// Image `hero-61天魔妙舞or影舞斩`.
    static let hero61天魔妙舞or影舞斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-61天魔妙舞or影舞斩")
    /// Image `hero-61天魔绫`.
    static let hero61天魔绫 = ImageResource(bundle: _R.hostingBundle, name: "hero-61天魔绫")
    /// Image `hero-61缠绵悱恻`.
    static let hero61缠绵悱恻 = ImageResource(bundle: _R.hostingBundle, name: "hero-61缠绵悱恻")
    /// Image `hero-61貂蝉`.
    static let hero61貂蝉 = ImageResource(bundle: _R.hostingBundle, name: "hero-61貂蝉")
    /// Image `hero-61魅影突袭or魅影迷踪`.
    static let hero61魅影突袭or魅影迷踪 = ImageResource(bundle: _R.hostingBundle, name: "hero-61魅影突袭or魅影迷踪")
    /// Image `hero-62御坂美琴`.
    static let hero62御坂美琴 = ImageResource(bundle: _R.hostingBundle, name: "hero-62御坂美琴")
    /// Image `hero-62电磁场`.
    static let hero62电磁场 = ImageResource(bundle: _R.hostingBundle, name: "hero-62电磁场")
    /// Image `hero-62电磁炮`.
    static let hero62电磁炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-62电磁炮")
    /// Image `hero-62真正的落雷`.
    static let hero62真正的落雷 = ImageResource(bundle: _R.hostingBundle, name: "hero-62真正的落雷")
    /// Image `hero-62铁砂风暴`.
    static let hero62铁砂风暴 = ImageResource(bundle: _R.hostingBundle, name: "hero-62铁砂风暴")
    /// Image `hero-62雷击之剑`.
    static let hero62雷击之剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-62雷击之剑")
    /// Image `hero-63夏娜`.
    static let hero63夏娜 = ImageResource(bundle: _R.hostingBundle, name: "hero-63夏娜")
    /// Image `hero-63审判`.
    static let hero63审判 = ImageResource(bundle: _R.hostingBundle, name: "hero-63审判")
    /// Image `hero-63断罪`.
    static let hero63断罪 = ImageResource(bundle: _R.hostingBundle, name: "hero-63断罪")
    /// Image `hero-63真红`.
    static let hero63真红 = ImageResource(bundle: _R.hostingBundle, name: "hero-63真红")
    /// Image `hero-63贽殿遮那`.
    static let hero63贽殿遮那 = ImageResource(bundle: _R.hostingBundle, name: "hero-63贽殿遮那")
    /// Image `hero-63飞焰`.
    static let hero63飞焰 = ImageResource(bundle: _R.hostingBundle, name: "hero-63飞焰")
    /// Image `hero-64俘虏之箭`.
    static let hero64俘虏之箭 = ImageResource(bundle: _R.hostingBundle, name: "hero-64俘虏之箭")
    /// Image `hero-64手枪之吻`.
    static let hero64手枪之吻 = ImageResource(bundle: _R.hostingBundle, name: "hero-64手枪之吻")
    /// Image `hero-64甜甜果实`.
    static let hero64甜甜果实 = ImageResource(bundle: _R.hostingBundle, name: "hero-64甜甜果实")
    /// Image `hero-64芳香腿`.
    static let hero64芳香腿 = ImageResource(bundle: _R.hostingBundle, name: "hero-64芳香腿")
    /// Image `hero-64蛇血舞姬`.
    static let hero64蛇血舞姬 = ImageResource(bundle: _R.hostingBundle, name: "hero-64蛇血舞姬")
    /// Image `hero-64迷恋甘风`.
    static let hero64迷恋甘风 = ImageResource(bundle: _R.hostingBundle, name: "hero-64迷恋甘风")
    /// Image `hero-65九尾妖狐外衣or仙法九尾妖狐外衣`.
    static let hero65九尾妖狐外衣or仙法九尾妖狐外衣 = ImageResource(bundle: _R.hostingBundle, name: "hero-65九尾妖狐外衣or仙法九尾妖狐外衣")
    /// Image `hero-65仙人模式`.
    static let hero65仙人模式 = ImageResource(bundle: _R.hostingBundle, name: "hero-65仙人模式")
    /// Image `hero-65千年杀`.
    static let hero65千年杀 = ImageResource(bundle: _R.hostingBundle, name: "hero-65千年杀")
    /// Image `hero-65螺旋丸or仙法螺旋丸`.
    static let hero65螺旋丸or仙法螺旋丸 = ImageResource(bundle: _R.hostingBundle, name: "hero-65螺旋丸or仙法螺旋丸")
    /// Image `hero-65螺旋手里剑or仙法螺旋手里剑`.
    static let hero65螺旋手里剑or仙法螺旋手里剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-65螺旋手里剑or仙法螺旋手里剑")
    /// Image `hero-65青丘国主`.
    static let hero65青丘国主 = ImageResource(bundle: _R.hostingBundle, name: "hero-65青丘国主")
    /// Image `hero-66垃圾毁灭者`.
    static let hero66垃圾毁灭者 = ImageResource(bundle: _R.hostingBundle, name: "hero-66垃圾毁灭者")
    /// Image `hero-66散射弹幕`.
    static let hero66散射弹幕 = ImageResource(bundle: _R.hostingBundle, name: "hero-66散射弹幕")
    /// Image `hero-66热力学定律`.
    static let hero66热力学定律 = ImageResource(bundle: _R.hostingBundle, name: "hero-66热力学定律")
    /// Image `hero-66硫磺使者`.
    static let hero66硫磺使者 = ImageResource(bundle: _R.hostingBundle, name: "hero-66硫磺使者")
    /// Image `hero-66蒸汽护盾`.
    static let hero66蒸汽护盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-66蒸汽护盾")
    /// Image `hero-66飞射齿轮`.
    static let hero66飞射齿轮 = ImageResource(bundle: _R.hostingBundle, name: "hero-66飞射齿轮")
    /// Image `hero-67暗影之怒`.
    static let hero67暗影之怒 = ImageResource(bundle: _R.hostingBundle, name: "hero-67暗影之怒")
    /// Image `hero-67术士娃`.
    static let hero67术士娃 = ImageResource(bundle: _R.hostingBundle, name: "hero-67术士娃")
    /// Image `hero-67死亡缠绕`.
    static let hero67死亡缠绕 = ImageResource(bundle: _R.hostingBundle, name: "hero-67死亡缠绕")
    /// Image `hero-67混乱箭`.
    static let hero67混乱箭 = ImageResource(bundle: _R.hostingBundle, name: "hero-67混乱箭")
    /// Image `hero-67烧尽`.
    static let hero67烧尽 = ImageResource(bundle: _R.hostingBundle, name: "hero-67烧尽")
    /// Image `hero-67献祭术`.
    static let hero67献祭术 = ImageResource(bundle: _R.hostingBundle, name: "hero-67献祭术")
    /// Image `hero-68定向气旋`.
    static let hero68定向气旋 = ImageResource(bundle: _R.hostingBundle, name: "hero-68定向气旋")
    /// Image `hero-68巽风祝福`.
    static let hero68巽风祝福 = ImageResource(bundle: _R.hostingBundle, name: "hero-68巽风祝福")
    /// Image `hero-68暴风领域`.
    static let hero68暴风领域 = ImageResource(bundle: _R.hostingBundle, name: "hero-68暴风领域")
    /// Image `hero-68闪电屏障`.
    static let hero68闪电屏障 = ImageResource(bundle: _R.hostingBundle, name: "hero-68闪电屏障")
    /// Image `hero-68雷霆之怒`.
    static let hero68雷霆之怒 = ImageResource(bundle: _R.hostingBundle, name: "hero-68雷霆之怒")
    /// Image `hero-68风暴精灵`.
    static let hero68风暴精灵 = ImageResource(bundle: _R.hostingBundle, name: "hero-68风暴精灵")
    /// Image `hero-69坍缩`.
    static let hero69坍缩 = ImageResource(bundle: _R.hostingBundle, name: "hero-69坍缩")
    /// Image `hero-69引力捕捉`.
    static let hero69引力捕捉 = ImageResource(bundle: _R.hostingBundle, name: "hero-69引力捕捉")
    /// Image `hero-69泯灭`.
    static let hero69泯灭 = ImageResource(bundle: _R.hostingBundle, name: "hero-69泯灭")
    /// Image `hero-69深渊之眼`.
    static let hero69深渊之眼 = ImageResource(bundle: _R.hostingBundle, name: "hero-69深渊之眼")
    /// Image `hero-69深渊裂隙`.
    static let hero69深渊裂隙 = ImageResource(bundle: _R.hostingBundle, name: "hero-69深渊裂隙")
    /// Image `hero-69虫洞穿梭`.
    static let hero69虫洞穿梭 = ImageResource(bundle: _R.hostingBundle, name: "hero-69虫洞穿梭")
    /// Image `hero-6巨型光子炮`.
    static let hero6巨型光子炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-6巨型光子炮")
    /// Image `hero-6机枪模式`.
    static let hero6机枪模式 = ImageResource(bundle: _R.hostingBundle, name: "hero-6机枪模式")
    /// Image `hero-6绝对压制`.
    static let hero6绝对压制 = ImageResource(bundle: _R.hostingBundle, name: "hero-6绝对压制")
    /// Image `hero-6羁绊之心`.
    static let hero6羁绊之心 = ImageResource(bundle: _R.hostingBundle, name: "hero-6羁绊之心")
    /// Image `hero-6蓝羽化`.
    static let hero6蓝羽化 = ImageResource(bundle: _R.hostingBundle, name: "hero-6蓝羽化")
    /// Image `hero-6黑岩射手`.
    static let hero6黑岩射手 = ImageResource(bundle: _R.hostingBundle, name: "hero-6黑岩射手")
    /// Image `hero-70刺客本能`.
    static let hero70刺客本能 = ImageResource(bundle: _R.hostingBundle, name: "hero-70刺客本能")
    /// Image `hero-70寻踪苦无`.
    static let hero70寻踪苦无 = ImageResource(bundle: _R.hostingBundle, name: "hero-70寻踪苦无")
    /// Image `hero-70影舞者`.
    static let hero70影舞者 = ImageResource(bundle: _R.hostingBundle, name: "hero-70影舞者")
    /// Image `hero-70暗影之舞`.
    static let hero70暗影之舞 = ImageResource(bundle: _R.hostingBundle, name: "hero-70暗影之舞")
    /// Image `hero-70杀戮之风`.
    static let hero70杀戮之风 = ImageResource(bundle: _R.hostingBundle, name: "hero-70杀戮之风")
    /// Image `hero-70蓄势待发`.
    static let hero70蓄势待发 = ImageResource(bundle: _R.hostingBundle, name: "hero-70蓄势待发")
    /// Image `hero-71投掷鱼叉or波涛`.
    static let hero71投掷鱼叉or波涛 = ImageResource(bundle: _R.hostingBundle, name: "hero-71投掷鱼叉or波涛")
    /// Image `hero-71捕鱼达人`.
    static let hero71捕鱼达人 = ImageResource(bundle: _R.hostingBundle, name: "hero-71捕鱼达人")
    /// Image `hero-71海风之力or鲨齿`.
    static let hero71海风之力or鲨齿 = ImageResource(bundle: _R.hostingBundle, name: "hero-71海风之力or鲨齿")
    /// Image `hero-71潜踪`.
    static let hero71潜踪 = ImageResource(bundle: _R.hostingBundle, name: "hero-71潜踪")
    /// Image `hero-71猎潮者`.
    static let hero71猎潮者 = ImageResource(bundle: _R.hostingBundle, name: "hero-71猎潮者")
    /// Image `hero-71网罟陷阱or冲浪`.
    static let hero71网罟陷阱or冲浪 = ImageResource(bundle: _R.hostingBundle, name: "hero-71网罟陷阱or冲浪")
    /// Image `hero-72Ice Geyser`.
    static let hero72IceGeyser = ImageResource(bundle: _R.hostingBundle, name: "hero-72Ice Geyser")
    /// Image `hero-72Ice Make Floor`.
    static let hero72IceMakeFloor = ImageResource(bundle: _R.hostingBundle, name: "hero-72Ice Make Floor")
    /// Image `hero-72Ice Make Lance`.
    static let hero72IceMakeLance = ImageResource(bundle: _R.hostingBundle, name: "hero-72Ice Make Lance")
    /// Image `hero-72Ice Make Saucer`.
    static let hero72IceMakeSaucer = ImageResource(bundle: _R.hostingBundle, name: "hero-72Ice Make Saucer")
    /// Image `hero-72冰刃七连舞`.
    static let hero72冰刃七连舞 = ImageResource(bundle: _R.hostingBundle, name: "hero-72冰刃七连舞")
    /// Image `hero-72格雷`.
    static let hero72格雷 = ImageResource(bundle: _R.hostingBundle, name: "hero-72格雷")
    /// Image `hero-73岩石巨像`.
    static let hero73岩石巨像 = ImageResource(bundle: _R.hostingBundle, name: "hero-73岩石巨像")
    /// Image `hero-73巨像冲撞`.
    static let hero73巨像冲撞 = ImageResource(bundle: _R.hostingBundle, name: "hero-73巨像冲撞")
    /// Image `hero-73巨像践踏`.
    static let hero73巨像践踏 = ImageResource(bundle: _R.hostingBundle, name: "hero-73巨像践踏")
    /// Image `hero-73巨石弹幕`.
    static let hero73巨石弹幕 = ImageResource(bundle: _R.hostingBundle, name: "hero-73巨石弹幕")
    /// Image `hero-73泰坦之心`.
    static let hero73泰坦之心 = ImageResource(bundle: _R.hostingBundle, name: "hero-73泰坦之心")
    /// Image `hero-73盖亚诅咒`.
    static let hero73盖亚诅咒 = ImageResource(bundle: _R.hostingBundle, name: "hero-73盖亚诅咒")
    /// Image `hero-74刺耳战呼`.
    static let hero74刺耳战呼 = ImageResource(bundle: _R.hostingBundle, name: "hero-74刺耳战呼")
    /// Image `hero-74斗志高昂`.
    static let hero74斗志高昂 = ImageResource(bundle: _R.hostingBundle, name: "hero-74斗志高昂")
    /// Image `hero-74旋风斩`.
    static let hero74旋风斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-74旋风斩")
    /// Image `hero-74暴风狂斧`.
    static let hero74暴风狂斧 = ImageResource(bundle: _R.hostingBundle, name: "hero-74暴风狂斧")
    /// Image `hero-74狂战士之血`.
    static let hero74狂战士之血 = ImageResource(bundle: _R.hostingBundle, name: "hero-74狂战士之血")
    /// Image `hero-74百战不殆`.
    static let hero74百战不殆 = ImageResource(bundle: _R.hostingBundle, name: "hero-74百战不殆")
    /// Image `hero-75夺魄凝视`.
    static let hero75夺魄凝视 = ImageResource(bundle: _R.hostingBundle, name: "hero-75夺魄凝视")
    /// Image `hero-75姬丝秀忒`.
    static let hero75姬丝秀忒 = ImageResource(bundle: _R.hostingBundle, name: "hero-75姬丝秀忒")
    /// Image `hero-75怪异杀手`.
    static let hero75怪异杀手 = ImageResource(bundle: _R.hostingBundle, name: "hero-75怪异杀手")
    /// Image `hero-75血腥风暴`.
    static let hero75血腥风暴 = ImageResource(bundle: _R.hostingBundle, name: "hero-75血腥风暴")
    /// Image `hero-75进食`.
    static let hero75进食 = ImageResource(bundle: _R.hostingBundle, name: "hero-75进食")
    /// Image `hero-75鲜血之吻`.
    static let hero75鲜血之吻 = ImageResource(bundle: _R.hostingBundle, name: "hero-75鲜血之吻")
    /// Image `hero-76五行遁术`.
    static let hero76五行遁术 = ImageResource(bundle: _R.hostingBundle, name: "hero-76五行遁术")
    /// Image `hero-76五雷天心正法`.
    static let hero76五雷天心正法 = ImageResource(bundle: _R.hostingBundle, name: "hero-76五雷天心正法")
    /// Image `hero-76天魔解体大法`.
    static let hero76天魔解体大法 = ImageResource(bundle: _R.hostingBundle, name: "hero-76天魔解体大法")
    /// Image `hero-76平天大圣`.
    static let hero76平天大圣 = ImageResource(bundle: _R.hostingBundle, name: "hero-76平天大圣")
    /// Image `hero-76平天手衡心法`.
    static let hero76平天手衡心法 = ImageResource(bundle: _R.hostingBundle, name: "hero-76平天手衡心法")
    /// Image `hero-76灭天三式`.
    static let hero76灭天三式 = ImageResource(bundle: _R.hostingBundle, name: "hero-76灭天三式")
    /// Image `hero-77制裁之锤`.
    static let hero77制裁之锤 = ImageResource(bundle: _R.hostingBundle, name: "hero-77制裁之锤")
    /// Image `hero-77圣盾术`.
    static let hero77圣盾术 = ImageResource(bundle: _R.hostingBundle, name: "hero-77圣盾术")
    /// Image `hero-77审判`.
    static let hero77审判 = ImageResource(bundle: _R.hostingBundle, name: "hero-77审判")
    /// Image `hero-77清算`.
    static let hero77清算 = ImageResource(bundle: _R.hostingBundle, name: "hero-77清算")
    /// Image `hero-77虔诚光环`.
    static let hero77虔诚光环 = ImageResource(bundle: _R.hostingBundle, name: "hero-77虔诚光环")
    /// Image `hero-77骑士娃`.
    static let hero77骑士娃 = ImageResource(bundle: _R.hostingBundle, name: "hero-77骑士娃")
    /// Image `hero-78七星光芒剑`.
    static let hero78七星光芒剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-78七星光芒剑")
    /// Image `hero-78嗜血修罗`.
    static let hero78嗜血修罗 = ImageResource(bundle: _R.hostingBundle, name: "hero-78嗜血修罗")
    /// Image `hero-78夏洛特`.
    static let hero78夏洛特 = ImageResource(bundle: _R.hostingBundle, name: "hero-78夏洛特")
    /// Image `hero-78破空剑`.
    static let hero78破空剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-78破空剑")
    /// Image `hero-78致命三角剑`.
    static let hero78致命三角剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-78致命三角剑")
    /// Image `hero-78迅光三角剑`.
    static let hero78迅光三角剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-78迅光三角剑")
    /// Image `hero-79加速齿轮`.
    static let hero79加速齿轮 = ImageResource(bundle: _R.hostingBundle, name: "hero-79加速齿轮")
    /// Image `hero-79化学烟雾`.
    static let hero79化学烟雾 = ImageResource(bundle: _R.hostingBundle, name: "hero-79化学烟雾")
    /// Image `hero-79危险实验`.
    static let hero79危险实验 = ImageResource(bundle: _R.hostingBundle, name: "hero-79危险实验")
    /// Image `hero-79奇迹导弹`.
    static let hero79奇迹导弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-79奇迹导弹")
    /// Image `hero-79机械链爪`.
    static let hero79机械链爪 = ImageResource(bundle: _R.hostingBundle, name: "hero-79机械链爪")
    /// Image `hero-79记忆金属`.
    static let hero79记忆金属 = ImageResource(bundle: _R.hostingBundle, name: "hero-79记忆金属")
    /// Image `hero-7Flag设定`.
    static let hero7Flag设定 = ImageResource(bundle: _R.hostingBundle, name: "hero-7Flag设定")
    /// Image `hero-7同调`.
    static let hero7同调 = ImageResource(bundle: _R.hostingBundle, name: "hero-7同调")
    /// Image `hero-7好感度逆转`.
    static let hero7好感度逆转 = ImageResource(bundle: _R.hostingBundle, name: "hero-7好感度逆转")
    /// Image `hero-7攻略之神`.
    static let hero7攻略之神 = ImageResource(bundle: _R.hostingBundle, name: "hero-7攻略之神")
    /// Image `hero-7桂木桂马`.
    static let hero7桂木桂马 = ImageResource(bundle: _R.hostingBundle, name: "hero-7桂木桂马")
    /// Image `hero-7神之模式`.
    static let hero7神之模式 = ImageResource(bundle: _R.hostingBundle, name: "hero-7神之模式")
    /// Image `hero-80乾坤一掷`.
    static let hero80乾坤一掷 = ImageResource(bundle: _R.hostingBundle, name: "hero-80乾坤一掷")
    /// Image `hero-80切糕糖浆`.
    static let hero80切糕糖浆 = ImageResource(bundle: _R.hostingBundle, name: "hero-80切糕糖浆")
    /// Image `hero-80巴依老爷`.
    static let hero80巴依老爷 = ImageResource(bundle: _R.hostingBundle, name: "hero-80巴依老爷")
    /// Image `hero-80斑马王子`.
    static let hero80斑马王子 = ImageResource(bundle: _R.hostingBundle, name: "hero-80斑马王子")
    /// Image `hero-80生命杠杆`.
    static let hero80生命杠杆 = ImageResource(bundle: _R.hostingBundle, name: "hero-80生命杠杆")
    /// Image `hero-80魔鬼契约`.
    static let hero80魔鬼契约 = ImageResource(bundle: _R.hostingBundle, name: "hero-80魔鬼契约")
    /// Image `hero-81冰弹`.
    static let hero81冰弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-81冰弹")
    /// Image `hero-81库奇`.
    static let hero81库奇 = ImageResource(bundle: _R.hostingBundle, name: "hero-81库奇")
    /// Image `hero-81报偿打击`.
    static let hero81报偿打击 = ImageResource(bundle: _R.hostingBundle, name: "hero-81报偿打击")
    /// Image `hero-81机械护盾`.
    static let hero81机械护盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-81机械护盾")
    /// Image `hero-81火弹`.
    static let hero81火弹 = ImageResource(bundle: _R.hostingBundle, name: "hero-81火弹")
    /// Image `hero-81能量泄露`.
    static let hero81能量泄露 = ImageResource(bundle: _R.hostingBundle, name: "hero-81能量泄露")
    /// Image `hero-82回光返照`.
    static let hero82回光返照 = ImageResource(bundle: _R.hostingBundle, name: "hero-82回光返照")
    /// Image `hero-82无光盾`.
    static let hero82无光盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-82无光盾")
    /// Image `hero-82无敌`.
    static let hero82无敌 = ImageResource(bundle: _R.hostingBundle, name: "hero-82无敌")
    /// Image `hero-82死亡之握`.
    static let hero82死亡之握 = ImageResource(bundle: _R.hostingBundle, name: "hero-82死亡之握")
    /// Image `hero-82死亡骑士`.
    static let hero82死亡骑士 = ImageResource(bundle: _R.hostingBundle, name: "hero-82死亡骑士")
    /// Image `hero-82霜之哀伤`.
    static let hero82霜之哀伤 = ImageResource(bundle: _R.hostingBundle, name: "hero-82霜之哀伤")
    /// Image `hero-83万人敌`.
    static let hero83万人敌 = ImageResource(bundle: _R.hostingBundle, name: "hero-83万人敌")
    /// Image `hero-83丈八蛇矛`.
    static let hero83丈八蛇矛 = ImageResource(bundle: _R.hostingBundle, name: "hero-83丈八蛇矛")
    /// Image `hero-83张飞`.
    static let hero83张飞 = ImageResource(bundle: _R.hostingBundle, name: "hero-83张飞")
    /// Image `hero-83愈战愈勇`.
    static let hero83愈战愈勇 = ImageResource(bundle: _R.hostingBundle, name: "hero-83愈战愈勇")
    /// Image `hero-83猛张飞`.
    static let hero83猛张飞 = ImageResource(bundle: _R.hostingBundle, name: "hero-83猛张飞")
    /// Image `hero-83破胆怒吼`.
    static let hero83破胆怒吼 = ImageResource(bundle: _R.hostingBundle, name: "hero-83破胆怒吼")
    /// Image `hero-84冲锋陷阵`.
    static let hero84冲锋陷阵 = ImageResource(bundle: _R.hostingBundle, name: "hero-84冲锋陷阵")
    /// Image `hero-84勇士底力`.
    static let hero84勇士底力 = ImageResource(bundle: _R.hostingBundle, name: "hero-84勇士底力")
    /// Image `hero-84蛮锤之怒`.
    static let hero84蛮锤之怒 = ImageResource(bundle: _R.hostingBundle, name: "hero-84蛮锤之怒")
    /// Image `hero-84蛮锤勇士`.
    static let hero84蛮锤勇士 = ImageResource(bundle: _R.hostingBundle, name: "hero-84蛮锤勇士")
    /// Image `hero-84重击`.
    static let hero84重击 = ImageResource(bundle: _R.hostingBundle, name: "hero-84重击")
    /// Image `hero-84风暴锤击`.
    static let hero84风暴锤击 = ImageResource(bundle: _R.hostingBundle, name: "hero-84风暴锤击")
    /// Image `hero-85乌摇`.
    static let hero85乌摇 = ImageResource(bundle: _R.hostingBundle, name: "hero-85乌摇")
    /// Image `hero-85兜割`.
    static let hero85兜割 = ImageResource(bundle: _R.hostingBundle, name: "hero-85兜割")
    /// Image `hero-85空间崩裂`.
    static let hero85空间崩裂 = ImageResource(bundle: _R.hostingBundle, name: "hero-85空间崩裂")
    /// Image `hero-85胡子船长`.
    static let hero85胡子船长 = ImageResource(bundle: _R.hostingBundle, name: "hero-85胡子船长")
    /// Image `hero-85震空`.
    static let hero85震空 = ImageResource(bundle: _R.hostingBundle, name: "hero-85震空")
    /// Image `hero-85震震果实`.
    static let hero85震震果实 = ImageResource(bundle: _R.hostingBundle, name: "hero-85震震果实")
    /// Image `hero-86倒打一耙`.
    static let hero86倒打一耙 = ImageResource(bundle: _R.hostingBundle, name: "hero-86倒打一耙")
    /// Image `hero-86崩裂大地`.
    static let hero86崩裂大地 = ImageResource(bundle: _R.hostingBundle, name: "hero-86崩裂大地")
    /// Image `hero-86无坚不摧`.
    static let hero86无坚不摧 = ImageResource(bundle: _R.hostingBundle, name: "hero-86无坚不摧")
    /// Image `hero-86猪八戒`.
    static let hero86猪八戒 = ImageResource(bundle: _R.hostingBundle, name: "hero-86猪八戒")
    /// Image `hero-86群山崩塌`.
    static let hero86群山崩塌 = ImageResource(bundle: _R.hostingBundle, name: "hero-86群山崩塌")
    /// Image `hero-86脂肪护盾`.
    static let hero86脂肪护盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-86脂肪护盾")
    /// Image `hero-87旋风火腿`.
    static let hero87旋风火腿 = ImageResource(bundle: _R.hostingBundle, name: "hero-87旋风火腿")
    /// Image `hero-87生吞`.
    static let hero87生吞 = ImageResource(bundle: _R.hostingBundle, name: "hero-87生吞")
    /// Image `hero-87脂肪爆炸`.
    static let hero87脂肪爆炸 = ImageResource(bundle: _R.hostingBundle, name: "hero-87脂肪爆炸")
    /// Image `hero-87食之忍者`.
    static let hero87食之忍者 = ImageResource(bundle: _R.hostingBundle, name: "hero-87食之忍者")
    /// Image `hero-87食欲振奋`.
    static let hero87食欲振奋 = ImageResource(bundle: _R.hostingBundle, name: "hero-87食欲振奋")
    /// Image `hero-87饱腹感`.
    static let hero87饱腹感 = ImageResource(bundle: _R.hostingBundle, name: "hero-87饱腹感")
    /// Image `hero-88以牙还牙`.
    static let hero88以牙还牙 = ImageResource(bundle: _R.hostingBundle, name: "hero-88以牙还牙")
    /// Image `hero-88厚颜无耻`.
    static let hero88厚颜无耻 = ImageResource(bundle: _R.hostingBundle, name: "hero-88厚颜无耻")
    /// Image `hero-88吕子乔`.
    static let hero88吕子乔 = ImageResource(bundle: _R.hostingBundle, name: "hero-88吕子乔")
    /// Image `hero-88损人利己`.
    static let hero88损人利己 = ImageResource(bundle: _R.hostingBundle, name: "hero-88损人利己")
    /// Image `hero-88斗转星移`.
    static let hero88斗转星移 = ImageResource(bundle: _R.hostingBundle, name: "hero-88斗转星移")
    /// Image `hero-88舍身取利`.
    static let hero88舍身取利 = ImageResource(bundle: _R.hostingBundle, name: "hero-88舍身取利")
    /// Image `hero-89口蜜腹剑`.
    static let hero89口蜜腹剑 = ImageResource(bundle: _R.hostingBundle, name: "hero-89口蜜腹剑")
    /// Image `hero-89好男人`.
    static let hero89好男人 = ImageResource(bundle: _R.hostingBundle, name: "hero-89好男人")
    /// Image `hero-89忽悠`.
    static let hero89忽悠 = ImageResource(bundle: _R.hostingBundle, name: "hero-89忽悠")
    /// Image `hero-89曾小贤`.
    static let hero89曾小贤 = ImageResource(bundle: _R.hostingBundle, name: "hero-89曾小贤")
    /// Image `hero-89调戏`.
    static let hero89调戏 = ImageResource(bundle: _R.hostingBundle, name: "hero-89调戏")
    /// Image `hero-89银剑风暴`.
    static let hero89银剑风暴 = ImageResource(bundle: _R.hostingBundle, name: "hero-89银剑风暴")
    /// Image `hero-8五星撕裂`.
    static let hero8五星撕裂 = ImageResource(bundle: _R.hostingBundle, name: "hero-8五星撕裂")
    /// Image `hero-8四倍痛击`.
    static let hero8四倍痛击 = ImageResource(bundle: _R.hostingBundle, name: "hero-8四倍痛击")
    /// Image `hero-8圣母圣咏`.
    static let hero8圣母圣咏 = ImageResource(bundle: _R.hostingBundle, name: "hero-8圣母圣咏")
    /// Image `hero-8妖精之舞`.
    static let hero8妖精之舞 = ImageResource(bundle: _R.hostingBundle, name: "hero-8妖精之舞")
    /// Image `hero-8狂暴补师`.
    static let hero8狂暴补师 = ImageResource(bundle: _R.hostingBundle, name: "hero-8狂暴补师")
    /// Image `hero-8结城明日奈`.
    static let hero8结城明日奈 = ImageResource(bundle: _R.hostingBundle, name: "hero-8结城明日奈")
    /// Image `hero-90FULL BURST MODE`.
    static let hero90FULLBURSTMODE = ImageResource(bundle: _R.hostingBundle, name: "hero-90FULL BURST MODE")
    /// Image `hero-90GUNDAM`.
    static let hero90GUNDAM = ImageResource(bundle: _R.hostingBundle, name: "hero-90GUNDAM")
    /// Image `hero-90复列相位高速炮`.
    static let hero90复列相位高速炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-90复列相位高速炮")
    /// Image `hero-90强袭自由`.
    static let hero90强袭自由 = ImageResource(bundle: _R.hostingBundle, name: "hero-90强袭自由")
    /// Image `hero-90超级龙骑兵系统`.
    static let hero90超级龙骑兵系统 = ImageResource(bundle: _R.hostingBundle, name: "hero-90超级龙骑兵系统")
    /// Image `hero-90高能量高速步枪`.
    static let hero90高能量高速步枪 = ImageResource(bundle: _R.hostingBundle, name: "hero-90高能量高速步枪")
    /// Image `hero-91十六夜咲夜`.
    static let hero91十六夜咲夜 = ImageResource(bundle: _R.hostingBundle, name: "hero-91十六夜咲夜")
    /// Image `hero-91女仆助您下楼梯`.
    static let hero91女仆助您下楼梯 = ImageResource(bundle: _R.hostingBundle, name: "hero-91女仆助您下楼梯")
    /// Image `hero-91完美潇洒的世界`.
    static let hero91完美潇洒的世界 = ImageResource(bundle: _R.hostingBundle, name: "hero-91完美潇洒的世界")
    /// Image `hero-91完美潇洒的女仆`.
    static let hero91完美潇洒的女仆 = ImageResource(bundle: _R.hostingBundle, name: "hero-91完美潇洒的女仆")
    /// Image `hero-91完美潇洒的时计`.
    static let hero91完美潇洒的时计 = ImageResource(bundle: _R.hostingBundle, name: "hero-91完美潇洒的时计")
    /// Image `hero-91完美潇洒的飞刀`.
    static let hero91完美潇洒的飞刀 = ImageResource(bundle: _R.hostingBundle, name: "hero-91完美潇洒的飞刀")
    /// Image `hero-92夜夜`.
    static let hero92夜夜 = ImageResource(bundle: _R.hostingBundle, name: "hero-92夜夜")
    /// Image `hero-92旋转吧！雪月花or月影红莲`.
    static let hero92旋转吧雪月花or月影红莲 = ImageResource(bundle: _R.hostingBundle, name: "hero-92旋转吧！雪月花or月影红莲")
    /// Image `hero-92楸木太刀影`.
    static let hero92楸木太刀影 = ImageResource(bundle: _R.hostingBundle, name: "hero-92楸木太刀影")
    /// Image `hero-92破却水月`.
    static let hero92破却水月 = ImageResource(bundle: _R.hostingBundle, name: "hero-92破却水月")
    /// Image `hero-92红色有角三倍速`.
    static let hero92红色有角三倍速 = ImageResource(bundle: _R.hostingBundle, name: "hero-92红色有角三倍速")
    /// Image `hero-92金刚力`.
    static let hero92金刚力 = ImageResource(bundle: _R.hostingBundle, name: "hero-92金刚力")
    /// Image `hero-93坂田银时`.
    static let hero93坂田银时 = ImageResource(bundle: _R.hostingBundle, name: "hero-93坂田银时")
    /// Image `hero-93扰tu乱cao`.
    static let hero93扰tu乱cao = ImageResource(bundle: _R.hostingBundle, name: "hero-93扰tu乱cao")
    /// Image `hero-93牙dou突s`.
    static let hero93牙dou突s = ImageResource(bundle: _R.hostingBundle, name: "hero-93牙dou突s")
    /// Image `hero-93白tang夜niao叉bing`.
    static let hero93白tang夜niao叉bing = ImageResource(bundle: _R.hostingBundle, name: "hero-93白tang夜niao叉bing")
    /// Image `hero-93阿姆施特朗炮`.
    static let hero93阿姆施特朗炮 = ImageResource(bundle: _R.hostingBundle, name: "hero-93阿姆施特朗炮")
    /// Image `hero-93飞bi剑shi`.
    static let hero93飞bi剑shi = ImageResource(bundle: _R.hostingBundle, name: "hero-93飞bi剑shi")
    /// Image `hero-94冲锋`.
    static let hero94冲锋 = ImageResource(bundle: _R.hostingBundle, name: "hero-94冲锋")
    /// Image `hero-94战士娃`.
    static let hero94战士娃 = ImageResource(bundle: _R.hostingBundle, name: "hero-94战士娃")
    /// Image `hero-94旋风利刃`.
    static let hero94旋风利刃 = ImageResource(bundle: _R.hostingBundle, name: "hero-94旋风利刃")
    /// Image `hero-94残暴`.
    static let hero94残暴 = ImageResource(bundle: _R.hostingBundle, name: "hero-94残暴")
    /// Image `hero-94致死打击`.
    static let hero94致死打击 = ImageResource(bundle: _R.hostingBundle, name: "hero-94致死打击")
    /// Image `hero-94雷霆震击`.
    static let hero94雷霆震击 = ImageResource(bundle: _R.hostingBundle, name: "hero-94雷霆震击")
    /// Image `hero-95召唤筋斗云`.
    static let hero95召唤筋斗云 = ImageResource(bundle: _R.hostingBundle, name: "hero-95召唤筋斗云")
    /// Image `hero-95小悟空`.
    static let hero95小悟空 = ImageResource(bundle: _R.hostingBundle, name: "hero-95小悟空")
    /// Image `hero-95残像拳`.
    static let hero95残像拳 = ImageResource(bundle: _R.hostingBundle, name: "hero-95残像拳")
    /// Image `hero-95狂暴`.
    static let hero95狂暴 = ImageResource(bundle: _R.hostingBundle, name: "hero-95狂暴")
    /// Image `hero-95金箍棒`.
    static let hero95金箍棒 = ImageResource(bundle: _R.hostingBundle, name: "hero-95金箍棒")
    /// Image `hero-95龟派气功`.
    static let hero95龟派气功 = ImageResource(bundle: _R.hostingBundle, name: "hero-95龟派气功")
    /// Image `hero-96Aegis`.
    static let hero96Aegis = ImageResource(bundle: _R.hostingBundle, name: "hero-96Aegis")
    /// Image `hero-96Apollon`.
    static let hero96Apollon = ImageResource(bundle: _R.hostingBundle, name: "hero-96Apollon")
    /// Image `hero-96Artemis`.
    static let hero96Artemis = ImageResource(bundle: _R.hostingBundle, name: "hero-96Artemis")
    /// Image `hero-96lcarus`.
    static let hero96lcarus = ImageResource(bundle: _R.hostingBundle, name: "hero-96lcarus")
    /// Image `hero-96伊卡洛斯`.
    static let hero96伊卡洛斯 = ImageResource(bundle: _R.hostingBundle, name: "hero-96伊卡洛斯")
    /// Image `hero-96可变式羽翼系统`.
    static let hero96可变式羽翼系统 = ImageResource(bundle: _R.hostingBundle, name: "hero-96可变式羽翼系统")
    /// Image `hero-98小鸟游六花`.
    static let hero98小鸟游六花 = ImageResource(bundle: _R.hostingBundle, name: "hero-98小鸟游六花")
    /// Image `hero-98显卡切换`.
    static let hero98显卡切换 = ImageResource(bundle: _R.hostingBundle, name: "hero-98显卡切换")
    /// Image `hero-98永恒之枪`.
    static let hero98永恒之枪 = ImageResource(bundle: _R.hostingBundle, name: "hero-98永恒之枪")
    /// Image `hero-98漆黑之盾`.
    static let hero98漆黑之盾 = ImageResource(bundle: _R.hostingBundle, name: "hero-98漆黑之盾")
    /// Image `hero-98邪王真眼使`.
    static let hero98邪王真眼使 = ImageResource(bundle: _R.hostingBundle, name: "hero-98邪王真眼使")
    /// Image `hero-98阿瓦隆粉碎`.
    static let hero98阿瓦隆粉碎 = ImageResource(bundle: _R.hostingBundle, name: "hero-98阿瓦隆粉碎")
    /// Image `hero-9四方斩`.
    static let hero9四方斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-9四方斩")
    /// Image `hero-9封弊者`.
    static let hero9封弊者 = ImageResource(bundle: _R.hostingBundle, name: "hero-9封弊者")
    /// Image `hero-9星爆气流斩`.
    static let hero9星爆气流斩 = ImageResource(bundle: _R.hostingBundle, name: "hero-9星爆气流斩")
    /// Image `hero-9桐人`.
    static let hero9桐人 = ImageResource(bundle: _R.hostingBundle, name: "hero-9桐人")
    /// Image `hero-9音速冲击`.
    static let hero9音速冲击 = ImageResource(bundle: _R.hostingBundle, name: "hero-9音速冲击")
    /// Image `hero-9魔剑侵袭`.
    static let hero9魔剑侵袭 = ImageResource(bundle: _R.hostingBundle, name: "hero-9魔剑侵袭")
    /// Image `kill`.
    static let kill = ImageResource(bundle: _R.hostingBundle, name: "kill")
    /// Image `killHelp`.
    static let killHelp = ImageResource(bundle: _R.hostingBundle, name: "killHelp")
    /// Image `LaunchScreen`.
    static let launchScreen = ImageResource(bundle: _R.hostingBundle, name: "LaunchScreen")
    /// Image `lose`.
    static let lose = ImageResource(bundle: _R.hostingBundle, name: "lose")
    /// Image `magical_scroll`.
    static let magical_scroll = ImageResource(bundle: _R.hostingBundle, name: "magical_scroll")
    /// Image `magical_scroll_filled`.
    static let magical_scroll_filled = ImageResource(bundle: _R.hostingBundle, name: "magical_scroll_filled")
    /// Image `rook`.
    static let rook = ImageResource(bundle: _R.hostingBundle, name: "rook")
    /// Image `sword`.
    static let sword = ImageResource(bundle: _R.hostingBundle, name: "sword")
    /// Image `sword_filled`.
    static let sword_filled = ImageResource(bundle: _R.hostingBundle, name: "sword_filled")
    /// Image `Tag`.
    static let tag = ImageResource(bundle: _R.hostingBundle, name: "Tag")
    /// Image `TwoSwords`.
    static let twoSwords = ImageResource(bundle: _R.hostingBundle, name: "TwoSwords")
    /// Image `user_male_circle`.
    static let user_male_circle = ImageResource(bundle: _R.hostingBundle, name: "user_male_circle")
    /// Image `user_male_circle_filled`.
    static let user_male_circle_filled = ImageResource(bundle: _R.hostingBundle, name: "user_male_circle_filled")
    /// Image `win`.
    static let win = ImageResource(bundle: _R.hostingBundle, name: "win")
    
    /// `UIImage(named: "armored_boot", bundle: ..., traitCollection: ...)`
    static func armored_boot(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.armored_boot, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "armored_boot_filled", bundle: ..., traitCollection: ...)`
    static func armored_boot_filled(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.armored_boot_filled, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "armored_helmet", bundle: ..., traitCollection: ...)`
    static func armored_helmet(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.armored_helmet, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "armored_helmet_filled", bundle: ..., traitCollection: ...)`
    static func armored_helmet_filled(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.armored_helmet_filled, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "buBing", bundle: ..., traitCollection: ...)`
    static func buBing(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.buBing, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "coins", bundle: ..., traitCollection: ...)`
    static func coins(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.coins, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "death", bundle: ..., traitCollection: ...)`
    static func death(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.death, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "death-old", bundle: ..., traitCollection: ...)`
    static func deathOld(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.deathOld, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "feedback_add_image", bundle: ..., traitCollection: ...)`
    static func feedback_add_image(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feedback_add_image, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "feedback_back", bundle: ..., traitCollection: ...)`
    static func feedback_back(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feedback_back, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "feedback_bg_1", bundle: ..., traitCollection: ...)`
    static func feedback_bg_1(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feedback_bg_1, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "feedback_bg_2", bundle: ..., traitCollection: ...)`
    static func feedback_bg_2(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feedback_bg_2, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "feedback_btn", bundle: ..., traitCollection: ...)`
    static func feedback_btn(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feedback_btn, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "feedback_btn_new", bundle: ..., traitCollection: ...)`
    static func feedback_btn_new(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feedback_btn_new, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "feedback_warning", bundle: ..., traitCollection: ...)`
    static func feedback_warning(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.feedback_warning, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-102夜刀神十香", bundle: ..., traitCollection: ...)`
    static func hero102夜刀神十香(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero102夜刀神十香, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-102最后之剑", bundle: ..., traitCollection: ...)`
    static func hero102最后之剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero102最后之剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-102王座", bundle: ..., traitCollection: ...)`
    static func hero102王座(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero102王座, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-102神威灵装·十番", bundle: ..., traitCollection: ...)`
    static func hero102神威灵装十番(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero102神威灵装十番, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-102空间震", bundle: ..., traitCollection: ...)`
    static func hero102空间震(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero102空间震, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-102鏖杀公", bundle: ..., traitCollection: ...)`
    static func hero102鏖杀公(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero102鏖杀公, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-103扭曲力场", bundle: ..., traitCollection: ...)`
    static func hero103扭曲力场(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero103扭曲力场, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-103波形延迟", bundle: ..., traitCollection: ...)`
    static func hero103波形延迟(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero103波形延迟, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-103立华奏", bundle: ..., traitCollection: ...)`
    static func hero103立华奏(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero103立华奏, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-103视频过载", bundle: ..., traitCollection: ...)`
    static func hero103视频过载(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero103视频过载, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-103音速手刃", bundle: ..., traitCollection: ...)`
    static func hero103音速手刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero103音速手刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-103高频咆哮", bundle: ..., traitCollection: ...)`
    static func hero103高频咆哮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero103高频咆哮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-104奇迹的背袭", bundle: ..., traitCollection: ...)`
    static func hero104奇迹的背袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero104奇迹的背袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-104少女的决意", bundle: ..., traitCollection: ...)`
    static func hero104少女的决意(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero104少女的决意, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-104战场的轮回", bundle: ..., traitCollection: ...)`
    static func hero104战场的轮回(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero104战场的轮回, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-104晓美焰", bundle: ..., traitCollection: ...)`
    static func hero104晓美焰(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero104晓美焰, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-104溯时的祈愿", bundle: ..., traitCollection: ...)`
    static func hero104溯时的祈愿(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero104溯时的祈愿, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-104锁缚的破却", bundle: ..., traitCollection: ...)`
    static func hero104锁缚的破却(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero104锁缚的破却, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-105战维丧失", bundle: ..., traitCollection: ...)`
    static func hero105战维丧失(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero105战维丧失, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-105疾风", bundle: ..., traitCollection: ...)`
    static func hero105疾风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero105疾风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-105神衣鲜血", bundle: ..., traitCollection: ...)`
    static func hero105神衣鲜血(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero105神衣鲜血, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-105纏流子", bundle: ..., traitCollection: ...)`
    static func hero105纏流子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero105纏流子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-105闪刃", bundle: ..., traitCollection: ...)`
    static func hero105闪刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero105闪刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-105鲜血无拍子", bundle: ..., traitCollection: ...)`
    static func hero105鲜血无拍子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero105鲜血无拍子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-106变形：刃", bundle: ..., traitCollection: ...)`
    static func hero106变形刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero106变形刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-106变形：拳", bundle: ..., traitCollection: ...)`
    static func hero106变形拳(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero106变形拳, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-106变形：翼", bundle: ..., traitCollection: ...)`
    static func hero106变形翼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero106变形翼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-106变形：门", bundle: ..., traitCollection: ...)`
    static func hero106变形门(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero106变形门, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-106破甲系统", bundle: ..., traitCollection: ...)`
    static func hero106破甲系统(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero106破甲系统, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-106金色之暗", bundle: ..., traitCollection: ...)`
    static func hero106金色之暗(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero106金色之暗, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-10732式X剑", bundle: ..., traitCollection: ...)`
    static func hero10732式X剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero10732式X剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-107主人公补正", bundle: ..., traitCollection: ...)`
    static func hero107主人公补正(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero107主人公补正, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-107涅普顿", bundle: ..., traitCollection: ...)`
    static func hero107涅普顿(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero107涅普顿, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-107炎流崩裂", bundle: ..., traitCollection: ...)`
    static func hero107炎流崩裂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero107炎流崩裂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-107穿刺联袭", bundle: ..., traitCollection: ...)`
    static func hero107穿刺联袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero107穿刺联袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-107胜利冲锋", bundle: ..., traitCollection: ...)`
    static func hero107胜利冲锋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero107胜利冲锋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-108凶手就在我们中间", bundle: ..., traitCollection: ...)`
    static func hero108凶手就在我们中间(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero108凶手就在我们中间, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-108太阳能滑板or足球腰带", bundle: ..., traitCollection: ...)`
    static func hero108太阳能滑板or足球腰带(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero108太阳能滑板or足球腰带, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-108手表麻醉枪", bundle: ..., traitCollection: ...)`
    static func hero108手表麻醉枪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero108手表麻醉枪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-108死神小学生", bundle: ..., traitCollection: ...)`
    static func hero108死神小学生(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero108死神小学生, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-108江户川柯南", bundle: ..., traitCollection: ...)`
    static func hero108江户川柯南(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero108江户川柯南, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-108领结型变声器", bundle: ..., traitCollection: ...)`
    static func hero108领结型变声器(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero108领结型变声器, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-109国王的心", bundle: ..., traitCollection: ...)`
    static func hero109国王的心(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero109国王的心, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-109恋人的绷带", bundle: ..., traitCollection: ...)`
    static func hero109恋人的绷带(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero109恋人的绷带, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-109樱满集", bundle: ..., traitCollection: ...)`
    static func hero109樱满集(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero109樱满集, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-109歌手的剑", bundle: ..., traitCollection: ...)`
    static func hero109歌手的剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero109歌手的剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-109王的能力", bundle: ..., traitCollection: ...)`
    static func hero109王的能力(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero109王的能力, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-109舞者的鞋", bundle: ..., traitCollection: ...)`
    static func hero109舞者的鞋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero109舞者的鞋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-10伤害流离", bundle: ..., traitCollection: ...)`
    static func hero10伤害流离(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero10伤害流离, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-10斩击", bundle: ..., traitCollection: ...)`
    static func hero10斩击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero10斩击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-10无心天使", bundle: ..., traitCollection: ...)`
    static func hero10无心天使(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero10无心天使, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-10暗黑融合术", bundle: ..., traitCollection: ...)`
    static func hero10暗黑融合术(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero10暗黑融合术, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-10萨菲罗斯", bundle: ..., traitCollection: ...)`
    static func hero10萨菲罗斯(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero10萨菲罗斯, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-10闪光", bundle: ..., traitCollection: ...)`
    static func hero10闪光(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero10闪光, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-110人类的感情", bundle: ..., traitCollection: ...)`
    static func hero110人类的感情(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero110人类的感情, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-110因果的层积", bundle: ..., traitCollection: ...)`
    static func hero110因果的层积(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero110因果的层积, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-110奇迹的现世", bundle: ..., traitCollection: ...)`
    static func hero110奇迹的现世(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero110奇迹的现世, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-110少女的末路", bundle: ..., traitCollection: ...)`
    static func hero110少女的末路(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero110少女的末路, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-110救济的祈愿", bundle: ..., traitCollection: ...)`
    static func hero110救济的祈愿(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero110救济的祈愿, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-110鹿目圆香", bundle: ..., traitCollection: ...)`
    static func hero110鹿目圆香(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero110鹿目圆香, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-111Archer", bundle: ..., traitCollection: ...)`
    static func hero111Archer(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero111Archer, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-112加农花", bundle: ..., traitCollection: ...)`
    static func hero112加农花(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero112加农花, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-112尾巴炮", bundle: ..., traitCollection: ...)`
    static func hero112尾巴炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero112尾巴炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-112敏感", bundle: ..., traitCollection: ...)`
    static func hero112敏感(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero112敏感, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-112梦梦", bundle: ..., traitCollection: ...)`
    static func hero112梦梦(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero112梦梦, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-112藤蔓", bundle: ..., traitCollection: ...)`
    static func hero112藤蔓(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero112藤蔓, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-112食人花", bundle: ..., traitCollection: ...)`
    static func hero112食人花(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero112食人花, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-113白井黑子", bundle: ..., traitCollection: ...)`
    static func hero113白井黑子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero113白井黑子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-113空间折叠", bundle: ..., traitCollection: ...)`
    static func hero113空间折叠(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero113空间折叠, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-113空间能力者", bundle: ..., traitCollection: ...)`
    static func hero113空间能力者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero113空间能力者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-113箭阵", bundle: ..., traitCollection: ...)`
    static func hero113箭阵(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero113箭阵, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-113跳转or迁移", bundle: ..., traitCollection: ...)`
    static func hero113跳转or迁移(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero113跳转or迁移, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-113金属箭矢", bundle: ..., traitCollection: ...)`
    static func hero113金属箭矢(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero113金属箭矢, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-114五更琉璃", bundle: ..., traitCollection: ...)`
    static func hero114五更琉璃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero114五更琉璃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-114傲娇", bundle: ..., traitCollection: ...)`
    static func hero114傲娇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero114傲娇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-114新约·命运预言书", bundle: ..., traitCollection: ...)`
    static func hero114新约命运预言书(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero114新约命运预言书, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-114毒舌", bundle: ..., traitCollection: ...)`
    static func hero114毒舌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero114毒舌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-114诅咒or生涯最大诅咒", bundle: ..., traitCollection: ...)`
    static func hero114诅咒or生涯最大诅咒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero114诅咒or生涯最大诅咒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-114运动白痴&设定厨", bundle: ..., traitCollection: ...)`
    static func hero114运动白痴设定厨(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero114运动白痴设定厨, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-115冥恸柩缚", bundle: ..., traitCollection: ...)`
    static func hero115冥恸柩缚(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero115冥恸柩缚, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-115悼亡圣裁", bundle: ..., traitCollection: ...)`
    static func hero115悼亡圣裁(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero115悼亡圣裁, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-115无懈白斩", bundle: ..., traitCollection: ...)`
    static func hero115无懈白斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero115无懈白斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-115现世创造", bundle: ..., traitCollection: ...)`
    static func hero115现世创造(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero115现世创造, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-115白岩射手", bundle: ..., traitCollection: ...)`
    static func hero115白岩射手(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero115白岩射手, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-115鲜血结末", bundle: ..., traitCollection: ...)`
    static func hero115鲜血结末(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero115鲜血结末, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-116伏行的混沌", bundle: ..., traitCollection: ...)`
    static func hero116伏行的混沌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero116伏行的混沌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-116奈亚子", bundle: ..., traitCollection: ...)`
    static func hero116奈亚子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero116奈亚子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-116宇宙CQC九七式·亵渎之手榴弹", bundle: ..., traitCollection: ...)`
    static func hero116宇宙CQC九七式亵渎之手榴弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero116宇宙CQC九七式亵渎之手榴弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-116宇宙CQC二式·不可名状的棒状物体", bundle: ..., traitCollection: ...)`
    static func hero116宇宙CQC二式不可名状的棒状物体(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero116宇宙CQC二式不可名状的棒状物体, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-116宇宙CQC百式之零·Dagon之神力", bundle: ..., traitCollection: ...)`
    static func hero116宇宙CQC百式之零Dagon之神力(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero116宇宙CQC百式之零Dagon之神力, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-116宇宙CQC里百八式·八酒杯", bundle: ..., traitCollection: ...)`
    static func hero116宇宙CQC里百八式八酒杯(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero116宇宙CQC里百八式八酒杯, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-117九四式爆雷", bundle: ..., traitCollection: ...)`
    static func hero117九四式爆雷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero117九四式爆雷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-117夜战模式", bundle: ..., traitCollection: ...)`
    static func hero117夜战模式(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero117夜战模式, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-117威力巨大之九三式酸素鱼雷", bundle: ..., traitCollection: ...)`
    static func hero117威力巨大之九三式酸素鱼雷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero117威力巨大之九三式酸素鱼雷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-117岛风", bundle: ..., traitCollection: ...)`
    static func hero117岛风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero117岛风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-117疾如岛风", bundle: ..., traitCollection: ...)`
    static func hero117疾如岛风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero117疾如岛风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-117连装炮", bundle: ..., traitCollection: ...)`
    static func hero117连装炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero117连装炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-118时之暗面", bundle: ..., traitCollection: ...)`
    static func hero118时之暗面(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero118时之暗面, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-118替身使者", bundle: ..., traitCollection: ...)`
    static func hero118替身使者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero118替身使者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-118欧啦欧啦欧啦欧啦欧啦欧啦", bundle: ..., traitCollection: ...)`
    static func hero118欧啦欧啦欧啦欧啦欧啦欧啦(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero118欧啦欧啦欧啦欧啦欧啦欧啦, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-118流星指刺", bundle: ..., traitCollection: ...)`
    static func hero118流星指刺(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero118流星指刺, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-118白金之星·世界", bundle: ..., traitCollection: ...)`
    static func hero118白金之星世界(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero118白金之星世界, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-118空条承太郎", bundle: ..., traitCollection: ...)`
    static func hero118空条承太郎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero118空条承太郎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-119八云紫", bundle: ..., traitCollection: ...)`
    static func hero119八云紫(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero119八云紫, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-119废弃车站下车之旅", bundle: ..., traitCollection: ...)`
    static func hero119废弃车站下车之旅(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero119废弃车站下车之旅, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-119正物质与反物质的宇宙", bundle: ..., traitCollection: ...)`
    static func hero119正物质与反物质的宇宙(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero119正物质与反物质的宇宙, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-119永远的十七岁", bundle: ..., traitCollection: ...)`
    static func hero119永远的十七岁(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero119永远的十七岁, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-119波与粒的境界", bundle: ..., traitCollection: ...)`
    static func hero119波与粒的境界(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero119波与粒的境界, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-119飞光虫之巢", bundle: ..., traitCollection: ...)`
    static func hero119飞光虫之巢(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero119飞光虫之巢, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-11威吓怒吼", bundle: ..., traitCollection: ...)`
    static func hero11威吓怒吼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero11威吓怒吼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-11惊天一击", bundle: ..., traitCollection: ...)`
    static func hero11惊天一击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero11惊天一击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-11扫荡乾坤·破", bundle: ..., traitCollection: ...)`
    static func hero11扫荡乾坤破(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero11扫荡乾坤破, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-11石猴之力", bundle: ..., traitCollection: ...)`
    static func hero11石猴之力(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero11石猴之力, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-11美猴王", bundle: ..., traitCollection: ...)`
    static func hero11美猴王(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero11美猴王, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-11越战越勇", bundle: ..., traitCollection: ...)`
    static func hero11越战越勇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero11越战越勇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-120两仪式", bundle: ..., traitCollection: ...)`
    static func hero120两仪式(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero120两仪式, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-120双钟楼or阴阳螺旋", bundle: ..., traitCollection: ...)`
    static func hero120双钟楼or阴阳螺旋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero120双钟楼or阴阳螺旋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-120无我识·心空妙有", bundle: ..., traitCollection: ...)`
    static func hero120无我识心空妙有(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero120无我识心空妙有, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-120猫返", bundle: ..., traitCollection: ...)`
    static func hero120猫返(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero120猫返, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-120直死之魔眼", bundle: ..., traitCollection: ...)`
    static func hero120直死之魔眼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero120直死之魔眼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-120虎落笛or无明之月", bundle: ..., traitCollection: ...)`
    static func hero120虎落笛or无明之月(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero120虎落笛or无明之月, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-121佐仓杏子", bundle: ..., traitCollection: ...)`
    static func hero121佐仓杏子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero121佐仓杏子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-121告解的壁障", bundle: ..., traitCollection: ...)`
    static func hero121告解的壁障(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero121告解的壁障, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-121命运的果实", bundle: ..., traitCollection: ...)`
    static func hero121命运的果实(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero121命运的果实, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-121复燃的微光", bundle: ..., traitCollection: ...)`
    static func hero121复燃的微光(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero121复燃的微光, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-121少女的救赎", bundle: ..., traitCollection: ...)`
    static func hero121少女的救赎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero121少女的救赎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-121魂火的余烬", bundle: ..., traitCollection: ...)`
    static func hero121魂火的余烬(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero121魂火的余烬, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-122伤鸣的节拍", bundle: ..., traitCollection: ...)`
    static func hero122伤鸣的节拍(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero122伤鸣的节拍, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-122少女的谢幕", bundle: ..., traitCollection: ...)`
    static func hero122少女的谢幕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero122少女的谢幕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-122痛觉的止符", bundle: ..., traitCollection: ...)`
    static func hero122痛觉的止符(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero122痛觉的止符, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-122美树沙耶加", bundle: ..., traitCollection: ...)`
    static func hero122美树沙耶加(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero122美树沙耶加, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-122追想的变奏", bundle: ..., traitCollection: ...)`
    static func hero122追想的变奏(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero122追想的变奏, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-122青刃的哀歌", bundle: ..., traitCollection: ...)`
    static func hero122青刃的哀歌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero122青刃的哀歌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-123五河琴里", bundle: ..., traitCollection: ...)`
    static func hero123五河琴里(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero123五河琴里, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-123光燃", bundle: ..., traitCollection: ...)`
    static func hero123光燃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero123光燃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-123灼幕", bundle: ..., traitCollection: ...)`
    static func hero123灼幕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero123灼幕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-123灼烂歼鬼·炮", bundle: ..., traitCollection: ...)`
    static func hero123灼烂歼鬼炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero123灼烂歼鬼炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-123焰潮", bundle: ..., traitCollection: ...)`
    static func hero123焰潮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero123焰潮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-123神威灵装·五番", bundle: ..., traitCollection: ...)`
    static func hero123神威灵装五番(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero123神威灵装五番, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-124奇犽", bundle: ..., traitCollection: ...)`
    static func hero124奇犽(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero124奇犽, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-124暗步", bundle: ..., traitCollection: ...)`
    static func hero124暗步(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero124暗步, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-124电光石火", bundle: ..., traitCollection: ...)`
    static func hero124电光石火(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero124电光石火, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-124疾风迅雷", bundle: ..., traitCollection: ...)`
    static func hero124疾风迅雷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero124疾风迅雷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-124落雷", bundle: ..., traitCollection: ...)`
    static func hero124落雷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero124落雷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-124雷掌", bundle: ..., traitCollection: ...)`
    static func hero124雷掌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero124雷掌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-125半赫者", bundle: ..., traitCollection: ...)`
    static func hero125半赫者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero125半赫者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-125喰种猎杀", bundle: ..., traitCollection: ...)`
    static func hero125喰种猎杀(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero125喰种猎杀, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-125独眼喰种", bundle: ..., traitCollection: ...)`
    static func hero125独眼喰种(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero125独眼喰种, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-125金木研", bundle: ..., traitCollection: ...)`
    static func hero125金木研(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero125金木研, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-125饥渴本能", bundle: ..., traitCollection: ...)`
    static func hero125饥渴本能(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero125饥渴本能, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-125鳞赫·利世", bundle: ..., traitCollection: ...)`
    static func hero125鳞赫利世(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero125鳞赫利世, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-126曳光弹or穿甲弹", bundle: ..., traitCollection: ...)`
    static func hero126曳光弹or穿甲弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero126曳光弹or穿甲弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-126朝田诗乃", bundle: ..., traitCollection: ...)`
    static func hero126朝田诗乃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero126朝田诗乃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-126格洛克18or黑卡蒂", bundle: ..., traitCollection: ...)`
    static func hero126格洛克18or黑卡蒂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero126格洛克18or黑卡蒂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-126鹰眼", bundle: ..., traitCollection: ...)`
    static func hero126鹰眼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero126鹰眼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-126麻痹弹or眩晕弹", bundle: ..., traitCollection: ...)`
    static func hero126麻痹弹or眩晕弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero126麻痹弹or眩晕弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-126黑卡蒂or格洛克18", bundle: ..., traitCollection: ...)`
    static func hero126黑卡蒂or格洛克18(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero126黑卡蒂or格洛克18, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-127光玉·八极", bundle: ..., traitCollection: ...)`
    static func hero127光玉八极(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero127光玉八极, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-127周廻·晶石", bundle: ..., traitCollection: ...)`
    static func hero127周廻晶石(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero127周廻晶石, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-127焰剑·冬河", bundle: ..., traitCollection: ...)`
    static func hero127焰剑冬河(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero127焰剑冬河, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-127第二法模拟", bundle: ..., traitCollection: ...)`
    static func hero127第二法模拟(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero127第二法模拟, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-127远坂凛", bundle: ..., traitCollection: ...)`
    static func hero127远坂凛(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero127远坂凛, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-127远坂家计", bundle: ..., traitCollection: ...)`
    static func hero127远坂家计(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero127远坂家计, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-128伊莉雅", bundle: ..., traitCollection: ...)`
    static func hero128伊莉雅(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero128伊莉雅, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-128多元重奏饱和炮击", bundle: ..., traitCollection: ...)`
    static func hero128多元重奏饱和炮击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero128多元重奏饱和炮击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-128红宝石之星", bundle: ..., traitCollection: ...)`
    static func hero128红宝石之星(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero128红宝石之星, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-128限定展开·刺穿死棘", bundle: ..., traitCollection: ...)`
    static func hero128限定展开刺穿死棘(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero128限定展开刺穿死棘, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-128限定展开·妄想幻像", bundle: ..., traitCollection: ...)`
    static func hero128限定展开妄想幻像(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero128限定展开妄想幻像, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-128限定展开·破尽万法", bundle: ..., traitCollection: ...)`
    static func hero128限定展开破尽万法(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero128限定展开破尽万法, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-129剑戟的喝彩", bundle: ..., traitCollection: ...)`
    static func hero129剑戟的喝彩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero129剑戟的喝彩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-129尼禄", bundle: ..., traitCollection: ...)`
    static func hero129尼禄(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero129尼禄, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-129招荡的黄金剧场", bundle: ..., traitCollection: ...)`
    static func hero129招荡的黄金剧场(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero129招荡的黄金剧场, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-129燃烧的圣泉", bundle: ..., traitCollection: ...)`
    static func hero129燃烧的圣泉(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero129燃烧的圣泉, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-129皇帝的特权", bundle: ..., traitCollection: ...)`
    static func hero129皇帝的特权(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero129皇帝的特权, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-129花散的天幕", bundle: ..., traitCollection: ...)`
    static func hero129花散的天幕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero129花散的天幕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-12世界第一公主殿下", bundle: ..., traitCollection: ...)`
    static func hero12世界第一公主殿下(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero12世界第一公主殿下, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-12初音未来", bundle: ..., traitCollection: ...)`
    static func hero12初音未来(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero12初音未来, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-12初音激唱", bundle: ..., traitCollection: ...)`
    static func hero12初音激唱(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero12初音激唱, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-12初音领域", bundle: ..., traitCollection: ...)`
    static func hero12初音领域(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero12初音领域, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-12御魔音界", bundle: ..., traitCollection: ...)`
    static func hero12御魔音界(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero12御魔音界, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-12甩葱歌", bundle: ..., traitCollection: ...)`
    static func hero12甩葱歌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero12甩葱歌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-130神威灵装一番", bundle: ..., traitCollection: ...)`
    static func hero130神威灵装一番(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero130神威灵装一番, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-130绝灭天使-光剑", bundle: ..., traitCollection: ...)`
    static func hero130绝灭天使光剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero130绝灭天使光剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-130绝灭天使-展翼", bundle: ..., traitCollection: ...)`
    static func hero130绝灭天使展翼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero130绝灭天使展翼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-130绝灭天使-日轮", bundle: ..., traitCollection: ...)`
    static func hero130绝灭天使日轮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero130绝灭天使日轮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-130绝灭天使-炮冠", bundle: ..., traitCollection: ...)`
    static func hero130绝灭天使炮冠(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero130绝灭天使炮冠, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-130鸢一折纸", bundle: ..., traitCollection: ...)`
    static func hero130鸢一折纸(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero130鸢一折纸, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-131冰霜操控", bundle: ..., traitCollection: ...)`
    static func hero131冰霜操控(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero131冰霜操控, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-131冻结傀儡", bundle: ..., traitCollection: ...)`
    static func hero131冻结傀儡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero131冻结傀儡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-131四糸乃", bundle: ..., traitCollection: ...)`
    static func hero131四糸乃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero131四糸乃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-131极寒冰墙", bundle: ..., traitCollection: ...)`
    static func hero131极寒冰墙(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero131极寒冰墙, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-131神威灵装四番", bundle: ..., traitCollection: ...)`
    static func hero131神威灵装四番(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero131神威灵装四番, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-131防御结界", bundle: ..., traitCollection: ...)`
    static func hero131防御结界(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero131防御结界, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-133天神烈破", bundle: ..., traitCollection: ...)`
    static func hero133天神烈破(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero133天神烈破, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-133天神照射", bundle: ..., traitCollection: ...)`
    static func hero133天神照射(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero133天神照射, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-133旭日之心", bundle: ..., traitCollection: ...)`
    static func hero133旭日之心(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero133旭日之心, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-133星光爆裂", bundle: ..., traitCollection: ...)`
    static func hero133星光爆裂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero133星光爆裂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-133禁锢枷锁", bundle: ..., traitCollection: ...)`
    static func hero133禁锢枷锁(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero133禁锢枷锁, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-133高町奈叶", bundle: ..., traitCollection: ...)`
    static func hero133高町奈叶(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero133高町奈叶, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-134死亡弹幕", bundle: ..., traitCollection: ...)`
    static func hero134死亡弹幕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero134死亡弹幕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-134死亡拥抱", bundle: ..., traitCollection: ...)`
    static func hero134死亡拥抱(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero134死亡拥抱, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-134死亡穿刺", bundle: ..., traitCollection: ...)`
    static func hero134死亡穿刺(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero134死亡穿刺, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-134终结之剑", bundle: ..., traitCollection: ...)`
    static func hero134终结之剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero134终结之剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-134超频驱动", bundle: ..., traitCollection: ...)`
    static func hero134超频驱动(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero134超频驱动, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-134黑雪姬", bundle: ..., traitCollection: ...)`
    static func hero134黑雪姬(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero134黑雪姬, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-135二天一流", bundle: ..., traitCollection: ...)`
    static func hero135二天一流(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero135二天一流, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-135人鬼“未来永劫斩”", bundle: ..., traitCollection: ...)`
    static func hero135人鬼未来永劫斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero135人鬼未来永劫斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-135六道剑“一念无量劫”", bundle: ..., traitCollection: ...)`
    static func hero135六道剑一念无量劫(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero135六道剑一念无量劫, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-135剑技“樱花闪闪”", bundle: ..., traitCollection: ...)`
    static func hero135剑技樱花闪闪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero135剑技樱花闪闪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-135空观剑“六根清净斩”", bundle: ..., traitCollection: ...)`
    static func hero135空观剑六根清净斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero135空观剑六根清净斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-135魂魄妖梦", bundle: ..., traitCollection: ...)`
    static func hero135魂魄妖梦(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero135魂魄妖梦, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-136圣刃形态【雷霆圣剑】", bundle: ..., traitCollection: ...)`
    static func hero136圣刃形态雷霆圣剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero136圣刃形态雷霆圣剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-136巨镰形态【巨镰斩击】", bundle: ..., traitCollection: ...)`
    static func hero136巨镰形态巨镰斩击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero136巨镰形态巨镰斩击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-136强袭形态【雷光枷锁】", bundle: ..., traitCollection: ...)`
    static func hero136强袭形态雷光枷锁(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero136强袭形态雷光枷锁, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-136菲特", bundle: ..., traitCollection: ...)`
    static func hero136菲特(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero136菲特, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-136雷光战斧", bundle: ..., traitCollection: ...)`
    static func hero136雷光战斧(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero136雷光战斧, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-136雷光战斧·天翔", bundle: ..., traitCollection: ...)`
    static func hero136雷光战斧天翔(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero136雷光战斧天翔, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-137少女的终曲", bundle: ..., traitCollection: ...)`
    static func hero137少女的终曲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero137少女的终曲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-137巴麻美", bundle: ..., traitCollection: ...)`
    static func hero137巴麻美(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero137巴麻美, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-137无忧的茶会", bundle: ..., traitCollection: ...)`
    static func hero137无忧的茶会(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero137无忧的茶会, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-137燧火的回声", bundle: ..., traitCollection: ...)`
    static func hero137燧火的回声(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero137燧火的回声, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-137织叠的羁绊", bundle: ..., traitCollection: ...)`
    static func hero137织叠的羁绊(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero137织叠的羁绊, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-137魔弹的舞踏", bundle: ..., traitCollection: ...)`
    static func hero137魔弹的舞踏(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero137魔弹的舞踏, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-138交换灼热机制", bundle: ..., traitCollection: ...)`
    static func hero138交换灼热机制(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero138交换灼热机制, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-138克图格亚的活火焰", bundle: ..., traitCollection: ...)`
    static func hero138克图格亚的活火焰(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero138克图格亚的活火焰, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-138克子", bundle: ..., traitCollection: ...)`
    static func hero138克子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero138克子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-138宇宙CQC百式·炎之精灵", bundle: ..., traitCollection: ...)`
    static func hero138宇宙CQC百式炎之精灵(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero138宇宙CQC百式炎之精灵, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-138宇宙CQC百式·零一牺牲", bundle: ..., traitCollection: ...)`
    static func hero138宇宙CQC百式零一牺牲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero138宇宙CQC百式零一牺牲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-138难以名状之棒状物体火焰邪神原版", bundle: ..., traitCollection: ...)`
    static func hero138难以名状之棒状物体火焰邪神原版(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero138难以名状之棒状物体火焰邪神原版, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-139七色乱舞刃", bundle: ..., traitCollection: ...)`
    static func hero139七色乱舞刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero139七色乱舞刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-139信仰之力", bundle: ..., traitCollection: ...)`
    static func hero139信仰之力(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero139信仰之力, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-139暴风之剑or无限剑斩", bundle: ..., traitCollection: ...)`
    static func hero139暴风之剑or无限剑斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero139暴风之剑or无限剑斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-139火山俯冲", bundle: ..., traitCollection: ...)`
    static func hero139火山俯冲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero139火山俯冲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-139蕾丝狂舞", bundle: ..., traitCollection: ...)`
    static func hero139蕾丝狂舞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero139蕾丝狂舞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-139诺瓦露", bundle: ..., traitCollection: ...)`
    static func hero139诺瓦露(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero139诺瓦露, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-13假寐之术", bundle: ..., traitCollection: ...)`
    static func hero13假寐之术(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero13假寐之术, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-13我受罗", bundle: ..., traitCollection: ...)`
    static func hero13我受罗(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero13我受罗, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-13沙之守护", bundle: ..., traitCollection: ...)`
    static func hero13沙之守护(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero13沙之守护, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-13沙之雨", bundle: ..., traitCollection: ...)`
    static func hero13沙之雨(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero13沙之雨, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-13沙缚柩", bundle: ..., traitCollection: ...)`
    static func hero13沙缚柩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero13沙缚柩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-13绝对防御", bundle: ..., traitCollection: ...)`
    static func hero13绝对防御(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero13绝对防御, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-140亚里亚", bundle: ..., traitCollection: ...)`
    static func hero140亚里亚(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero140亚里亚, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-140双剑姿态or双枪姿态", bundle: ..., traitCollection: ...)`
    static func hero140双剑姿态or双枪姿态(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero140双剑姿态or双枪姿态, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-140壳金七星", bundle: ..., traitCollection: ...)`
    static func hero140壳金七星(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero140壳金七星, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-140接近枪斗术or双剑回旋刃", bundle: ..., traitCollection: ...)`
    static func hero140接近枪斗术or双剑回旋刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero140接近枪斗术or双剑回旋刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-140武侦强袭", bundle: ..., traitCollection: ...)`
    static func hero140武侦强袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero140武侦强袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-140绯绯神", bundle: ..., traitCollection: ...)`
    static func hero140绯绯神(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero140绯绯神, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-141三式对空弹", bundle: ..., traitCollection: ...)`
    static func hero141三式对空弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero141三式对空弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-141主炮齐发", bundle: ..., traitCollection: ...)`
    static func hero141主炮齐发(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero141主炮齐发, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-141九一式彻甲弹", bundle: ..., traitCollection: ...)`
    static func hero141九一式彻甲弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero141九一式彻甲弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-141大傻", bundle: ..., traitCollection: ...)`
    static func hero141大傻(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero141大傻, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-141战列舰", bundle: ..., traitCollection: ...)`
    static func hero141战列舰(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero141战列舰, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-141水面侦察机", bundle: ..., traitCollection: ...)`
    static func hero141水面侦察机(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero141水面侦察机, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-142勇气之盾", bundle: ..., traitCollection: ...)`
    static func hero142勇气之盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero142勇气之盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-142勇气徽章", bundle: ..., traitCollection: ...)`
    static func hero142勇气徽章(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero142勇气徽章, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-142恐龙克星", bundle: ..., traitCollection: ...)`
    static func hero142恐龙克星(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero142恐龙克星, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-142战斗暴龙兽", bundle: ..., traitCollection: ...)`
    static func hero142战斗暴龙兽(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero142战斗暴龙兽, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-142战斗龙卷风", bundle: ..., traitCollection: ...)`
    static func hero142战斗龙卷风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero142战斗龙卷风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-142盖亚能量炮", bundle: ..., traitCollection: ...)`
    static func hero142盖亚能量炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero142盖亚能量炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-143数据删除", bundle: ..., traitCollection: ...)`
    static func hero143数据删除(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero143数据删除, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-143数据备份", bundle: ..., traitCollection: ...)`
    static func hero143数据备份(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero143数据备份, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-143数据复制", bundle: ..., traitCollection: ...)`
    static func hero143数据复制(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero143数据复制, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-143数据投影", bundle: ..., traitCollection: ...)`
    static func hero143数据投影(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero143数据投影, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-143数据转换", bundle: ..., traitCollection: ...)`
    static func hero143数据转换(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero143数据转换, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-143蒂塔", bundle: ..., traitCollection: ...)`
    static func hero143蒂塔(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero143蒂塔, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-144独奏曲", bundle: ..., traitCollection: ...)`
    static func hero144独奏曲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero144独奏曲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-144破军歌姬", bundle: ..., traitCollection: ...)`
    static func hero144破军歌姬(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero144破军歌姬, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-144 管风回音", bundle: ..., traitCollection: ...)`
    static func hero144管风回音(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero144管风回音, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-144诱宵美九", bundle: ..., traitCollection: ...)`
    static func hero144诱宵美九(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero144诱宵美九, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-144轮舞曲", bundle: ..., traitCollection: ...)`
    static func hero144轮舞曲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero144轮舞曲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-144镇魂曲", bundle: ..., traitCollection: ...)`
    static func hero144镇魂曲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero144镇魂曲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-145一方通行", bundle: ..., traitCollection: ...)`
    static func hero145一方通行(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero145一方通行, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-145御坂网络", bundle: ..., traitCollection: ...)`
    static func hero145御坂网络(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero145御坂网络, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-145等离子聚合体", bundle: ..., traitCollection: ...)`
    static func hero145等离子聚合体(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero145等离子聚合体, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-145绝对屏障", bundle: ..., traitCollection: ...)`
    static func hero145绝对屏障(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero145绝对屏障, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-145践踏", bundle: ..., traitCollection: ...)`
    static func hero145践踏(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero145践踏, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-145黑色之翼", bundle: ..., traitCollection: ...)`
    static func hero145黑色之翼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero145黑色之翼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-146 不可逆のネクローシス", bundle: ..., traitCollection: ...)`
    static func hero146不可逆のネクローシス(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero146不可逆のネクローシス, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-146世界线跳跃", bundle: ..., traitCollection: ...)`
    static func hero146世界线跳跃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero146世界线跳跃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-146怨嗟断愁のアポトーシス", bundle: ..., traitCollection: ...)`
    static func hero146怨嗟断愁のアポトーシス(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero146怨嗟断愁のアポトーシス, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-146无限连锁のアポトーシ", bundle: ..., traitCollection: ...)`
    static func hero146无限连锁のアポトーシ(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero146无限连锁のアポトーシ, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-146时间跳跃のパラノイア", bundle: ..., traitCollection: ...)`
    static func hero146时间跳跃のパラノイア(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero146时间跳跃のパラノイア, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-146牧濑红莉栖", bundle: ..., traitCollection: ...)`
    static func hero146牧濑红莉栖(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero146牧濑红莉栖, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-147栗山未来", bundle: ..., traitCollection: ...)`
    static func hero147栗山未来(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero147栗山未来, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-147血之护盾", bundle: ..., traitCollection: ...)`
    static func hero147血之护盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero147血之护盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-147血液爆发", bundle: ..., traitCollection: ...)`
    static func hero147血液爆发(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero147血液爆发, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-147血脉牵引", bundle: ..., traitCollection: ...)`
    static func hero147血脉牵引(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero147血脉牵引, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-147诅咒之血", bundle: ..., traitCollection: ...)`
    static func hero147诅咒之血(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero147诅咒之血, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-147鲜血莲花", bundle: ..., traitCollection: ...)`
    static func hero147鲜血莲花(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero147鲜血莲花, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-148不灭之意", bundle: ..., traitCollection: ...)`
    static func hero148不灭之意(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero148不灭之意, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-148伊莎", bundle: ..., traitCollection: ...)`
    static func hero148伊莎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero148伊莎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-148奥义之源", bundle: ..., traitCollection: ...)`
    static func hero148奥义之源(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero148奥义之源, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-148审判之刃", bundle: ..., traitCollection: ...)`
    static func hero148审判之刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero148审判之刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-148永恒破碎", bundle: ..., traitCollection: ...)`
    static func hero148永恒破碎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero148永恒破碎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-148瞬息万变", bundle: ..., traitCollection: ...)`
    static func hero148瞬息万变(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero148瞬息万变, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-149X BURNER", bundle: ..., traitCollection: ...)`
    static func hero149XBURNER(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero149XBURNER, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-149XX BURNER", bundle: ..., traitCollection: ...)`
    static func hero149XXBURNER(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero149XXBURNER, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-149沢田纲吉", bundle: ..., traitCollection: ...)`
    static func hero149沢田纲吉(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero149沢田纲吉, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-149超直感", bundle: ..., traitCollection: ...)`
    static func hero149超直感(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero149超直感, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-149超速滑翔", bundle: ..., traitCollection: ...)`
    static func hero149超速滑翔(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero149超速滑翔, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-149零地点突破·改or零地点突破·绝对零度", bundle: ..., traitCollection: ...)`
    static func hero149零地点突破改or零地点突破绝对零度(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero149零地点突破改or零地点突破绝对零度, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-14惩戒之炎", bundle: ..., traitCollection: ...)`
    static func hero14惩戒之炎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero14惩戒之炎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-14火龙的咆哮", bundle: ..., traitCollection: ...)`
    static func hero14火龙的咆哮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero14火龙的咆哮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-14火龙的煌炎", bundle: ..., traitCollection: ...)`
    static func hero14火龙的煌炎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero14火龙的煌炎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-14红莲爆炎刃", bundle: ..., traitCollection: ...)`
    static func hero14红莲爆炎刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero14红莲爆炎刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-14纳兹", bundle: ..., traitCollection: ...)`
    static func hero14纳兹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero14纳兹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-14雷炎龙形态", bundle: ..., traitCollection: ...)`
    static func hero14雷炎龙形态(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero14雷炎龙形态, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-15库洛牌", bundle: ..., traitCollection: ...)`
    static func hero15库洛牌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero15库洛牌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-15斩炎", bundle: ..., traitCollection: ...)`
    static func hero15斩炎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero15斩炎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-15李小狼", bundle: ..., traitCollection: ...)`
    static func hero15李小狼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero15李小狼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-15炎狼", bundle: ..., traitCollection: ...)`
    static func hero15炎狼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero15炎狼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-15炎狼意志", bundle: ..., traitCollection: ...)`
    static func hero15炎狼意志(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero15炎狼意志, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-15绯炎斩", bundle: ..., traitCollection: ...)`
    static func hero15绯炎斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero15绯炎斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-17九头龙闪", bundle: ..., traitCollection: ...)`
    static func hero17九头龙闪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero17九头龙闪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-17双龙闪", bundle: ..., traitCollection: ...)`
    static func hero17双龙闪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero17双龙闪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-17土龙闪", bundle: ..., traitCollection: ...)`
    static func hero17土龙闪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero17土龙闪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-17拔刀斋", bundle: ..., traitCollection: ...)`
    static func hero17拔刀斋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero17拔刀斋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-17绯村剑心", bundle: ..., traitCollection: ...)`
    static func hero17绯村剑心(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero17绯村剑心, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-17龙槌闪", bundle: ..., traitCollection: ...)`
    static func hero17龙槌闪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero17龙槌闪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-18冰之棺", bundle: ..., traitCollection: ...)`
    static func hero18冰之棺(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero18冰之棺, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-18古娜", bundle: ..., traitCollection: ...)`
    static func hero18古娜(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero18古娜, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-18末日冰河", bundle: ..., traitCollection: ...)`
    static func hero18末日冰河(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero18末日冰河, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-18绝对冻结", bundle: ..., traitCollection: ...)`
    static func hero18绝对冻结(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero18绝对冻结, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-18钻石冰刃", bundle: ..., traitCollection: ...)`
    static func hero18钻石冰刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero18钻石冰刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-18钻石气息", bundle: ..., traitCollection: ...)`
    static func hero18钻石气息(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero18钻石气息, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-19乔帮主", bundle: ..., traitCollection: ...)`
    static func hero19乔帮主(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero19乔帮主, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-19脑力强化", bundle: ..., traitCollection: ...)`
    static func hero19脑力强化(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero19脑力强化, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-19脚力强化", bundle: ..., traitCollection: ...)`
    static func hero19脚力强化(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero19脚力强化, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-19船医", bundle: ..., traitCollection: ...)`
    static func hero19船医(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero19船医, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-19蓝波丸", bundle: ..., traitCollection: ...)`
    static func hero19蓝波丸(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero19蓝波丸, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-19通缉令", bundle: ..., traitCollection: ...)`
    static func hero19通缉令(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero19通缉令, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-20冥道残月斩", bundle: ..., traitCollection: ...)`
    static func hero20冥道残月斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero20冥道残月斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-20天生牙", bundle: ..., traitCollection: ...)`
    static func hero20天生牙(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero20天生牙, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-20杀生丸", bundle: ..., traitCollection: ...)`
    static func hero20杀生丸(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero20杀生丸, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-20爆碎牙瞬杀", bundle: ..., traitCollection: ...)`
    static func hero20爆碎牙瞬杀(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero20爆碎牙瞬杀, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-20苍龙破", bundle: ..., traitCollection: ...)`
    static func hero20苍龙破(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero20苍龙破, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-20风之伤", bundle: ..., traitCollection: ...)`
    static func hero20风之伤(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero20风之伤, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-21匹诺曹", bundle: ..., traitCollection: ...)`
    static func hero21匹诺曹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero21匹诺曹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-21必杀大爆炸星", bundle: ..., traitCollection: ...)`
    static func hero21必杀大爆炸星(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero21必杀大爆炸星, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-21必杀大铁锤", bundle: ..., traitCollection: ...)`
    static func hero21必杀大铁锤(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero21必杀大铁锤, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-21必杀火药星", bundle: ..., traitCollection: ...)`
    static func hero21必杀火药星(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero21必杀火药星, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-21必杀火鸟星", bundle: ..., traitCollection: ...)`
    static func hero21必杀火鸟星(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero21必杀火鸟星, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-21狙击王驾到", bundle: ..., traitCollection: ...)`
    static func hero21狙击王驾到(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero21狙击王驾到, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-22弱点击破", bundle: ..., traitCollection: ...)`
    static func hero22弱点击破(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero22弱点击破, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-22神目黑刀", bundle: ..., traitCollection: ...)`
    static func hero22神目黑刀(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero22神目黑刀, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-22鹰隼凝光", bundle: ..., traitCollection: ...)`
    static func hero22鹰隼凝光(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero22鹰隼凝光, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-22黑刀一闪", bundle: ..., traitCollection: ...)`
    static func hero22黑刀一闪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero22黑刀一闪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-22黑刀逆刃", bundle: ..., traitCollection: ...)`
    static func hero22黑刀逆刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero22黑刀逆刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-22黑刀长夜", bundle: ..., traitCollection: ...)`
    static func hero22黑刀长夜(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero22黑刀长夜, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-23佐罗", bundle: ..., traitCollection: ...)`
    static func hero23佐罗(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero23佐罗, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-23八百烦恼风", bundle: ..., traitCollection: ...)`
    static func hero23八百烦恼风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero23八百烦恼风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-23居合斩", bundle: ..., traitCollection: ...)`
    static func hero23居合斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero23居合斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-23海贼猎人", bundle: ..., traitCollection: ...)`
    static func hero23海贼猎人(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero23海贼猎人, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-23登楼", bundle: ..., traitCollection: ...)`
    static func hero23登楼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero23登楼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-23空手白刃", bundle: ..., traitCollection: ...)`
    static func hero23空手白刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero23空手白刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-24JET统", bundle: ..., traitCollection: ...)`
    static func hero24JET统(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero24JET统, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-24万里阳光号", bundle: ..., traitCollection: ...)`
    static func hero24万里阳光号(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero24万里阳光号, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-24二档", bundle: ..., traitCollection: ...)`
    static func hero24二档(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero24二档, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-24橡皮火箭", bundle: ..., traitCollection: ...)`
    static func hero24橡皮火箭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero24橡皮火箭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-24橡胶果实", bundle: ..., traitCollection: ...)`
    static func hero24橡胶果实(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero24橡胶果实, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-24草帽小子", bundle: ..., traitCollection: ...)`
    static func hero24草帽小子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero24草帽小子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-25心眼", bundle: ..., traitCollection: ...)`
    static func hero25心眼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero25心眼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-25散播毁灭", bundle: ..., traitCollection: ...)`
    static func hero25散播毁灭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero25散播毁灭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-25暴风使者", bundle: ..., traitCollection: ...)`
    static func hero25暴风使者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero25暴风使者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-25荆棘之箭", bundle: ..., traitCollection: ...)`
    static func hero25荆棘之箭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero25荆棘之箭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-25雾影射手", bundle: ..., traitCollection: ...)`
    static func hero25雾影射手(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero25雾影射手, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-25鸣镝", bundle: ..., traitCollection: ...)`
    static func hero25鸣镝(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero25鸣镝, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-26兽王之心", bundle: ..., traitCollection: ...)`
    static func hero26兽王之心(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero26兽王之心, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-26冰霜陷阱", bundle: ..., traitCollection: ...)`
    static func hero26冰霜陷阱(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero26冰霜陷阱, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-26猎人印记", bundle: ..., traitCollection: ...)`
    static func hero26猎人印记(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero26猎人印记, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-26猎人娃", bundle: ..., traitCollection: ...)`
    static func hero26猎人娃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero26猎人娃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-26瞄准射击", bundle: ..., traitCollection: ...)`
    static func hero26瞄准射击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero26瞄准射击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-26雄鹰守护", bundle: ..., traitCollection: ...)`
    static func hero26雄鹰守护(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero26雄鹰守护, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-27击碎", bundle: ..., traitCollection: ...)`
    static func hero27击碎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero27击碎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-27幻刺·L·莉莉", bundle: ..., traitCollection: ...)`
    static func hero27幻刺L莉莉(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero27幻刺L莉莉, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-27恩赐解脱", bundle: ..., traitCollection: ...)`
    static func hero27恩赐解脱(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero27恩赐解脱, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-27暗影突袭", bundle: ..., traitCollection: ...)`
    static func hero27暗影突袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero27暗影突袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-27窒息之刃", bundle: ..., traitCollection: ...)`
    static func hero27窒息之刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero27窒息之刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-27符文护体", bundle: ..., traitCollection: ...)`
    static func hero27符文护体(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero27符文护体, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-28击碎", bundle: ..., traitCollection: ...)`
    static func hero28击碎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero28击碎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-28幻刺·D·露西", bundle: ..., traitCollection: ...)`
    static func hero28幻刺D露西(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero28幻刺D露西, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-28恩赐解脱", bundle: ..., traitCollection: ...)`
    static func hero28恩赐解脱(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero28恩赐解脱, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-28暗影突袭", bundle: ..., traitCollection: ...)`
    static func hero28暗影突袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero28暗影突袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-28窒息之刃", bundle: ..., traitCollection: ...)`
    static func hero28窒息之刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero28窒息之刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-28符文护体", bundle: ..., traitCollection: ...)`
    static func hero28符文护体(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero28符文护体, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-29吕布", bundle: ..., traitCollection: ...)`
    static func hero29吕布(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero29吕布, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-29方天画戟", bundle: ..., traitCollection: ...)`
    static func hero29方天画戟(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero29方天画戟, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-29无双", bundle: ..., traitCollection: ...)`
    static func hero29无双(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero29无双, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-29暴风疾走", bundle: ..., traitCollection: ...)`
    static func hero29暴风疾走(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero29暴风疾走, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-29致死斩杀", bundle: ..., traitCollection: ...)`
    static func hero29致死斩杀(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero29致死斩杀, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-29魔神降临", bundle: ..., traitCollection: ...)`
    static func hero29魔神降临(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero29魔神降临, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-2八方鬼缚阵", bundle: ..., traitCollection: ...)`
    static func hero2八方鬼缚阵(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero2八方鬼缚阵, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-2博丽大结界", bundle: ..., traitCollection: ...)`
    static func hero2博丽大结界(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero2博丽大结界, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-2博丽灵梦", bundle: ..., traitCollection: ...)`
    static func hero2博丽灵梦(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero2博丽灵梦, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-2妖怪Buster", bundle: ..., traitCollection: ...)`
    static func hero2妖怪Buster(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero2妖怪Buster, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-2梦想封印", bundle: ..., traitCollection: ...)`
    static func hero2梦想封印(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero2梦想封印, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-2阴阳鬼神玉", bundle: ..., traitCollection: ...)`
    static func hero2阴阳鬼神玉(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero2阴阳鬼神玉, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-30丛林剧毒", bundle: ..., traitCollection: ...)`
    static func hero30丛林剧毒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero30丛林剧毒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-30偷袭", bundle: ..., traitCollection: ...)`
    static func hero30偷袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero30偷袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-30化形战士", bundle: ..., traitCollection: ...)`
    static func hero30化形战士(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero30化形战士, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-30多重化身", bundle: ..., traitCollection: ...)`
    static func hero30多重化身(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero30多重化身, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-30幽毒之痕", bundle: ..., traitCollection: ...)`
    static func hero30幽毒之痕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero30幽毒之痕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-30潜行突袭", bundle: ..., traitCollection: ...)`
    static func hero30潜行突袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero30潜行突袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-31属性附加", bundle: ..., traitCollection: ...)`
    static func hero31属性附加(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero31属性附加, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-31敌法师", bundle: ..., traitCollection: ...)`
    static func hero31敌法师(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero31敌法师, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-31法力护盾", bundle: ..., traitCollection: ...)`
    static func hero31法力护盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero31法力护盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-31法力毁损", bundle: ..., traitCollection: ...)`
    static func hero31法力毁损(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero31法力毁损, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-31法力虚空", bundle: ..., traitCollection: ...)`
    static func hero31法力虚空(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero31法力虚空, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-31闪烁", bundle: ..., traitCollection: ...)`
    static func hero31闪烁(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero31闪烁, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-32关羽", bundle: ..., traitCollection: ...)`
    static func hero32关羽(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero32关羽, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-32复仇", bundle: ..., traitCollection: ...)`
    static func hero32复仇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero32复仇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-32拖刀技", bundle: ..., traitCollection: ...)`
    static func hero32拖刀技(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero32拖刀技, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-32武圣义", bundle: ..., traitCollection: ...)`
    static func hero32武圣义(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero32武圣义, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-32武圣势", bundle: ..., traitCollection: ...)`
    static func hero32武圣势(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero32武圣势, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-32追斩", bundle: ..., traitCollection: ...)`
    static func hero32追斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero32追斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-33健步如飞", bundle: ..., traitCollection: ...)`
    static func hero33健步如飞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero33健步如飞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-33弹射手里剑", bundle: ..., traitCollection: ...)`
    static func hero33弹射手里剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero33弹射手里剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-33忍术遁法", bundle: ..., traitCollection: ...)`
    static func hero33忍术遁法(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero33忍术遁法, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-33旋风手里剑", bundle: ..., traitCollection: ...)`
    static func hero33旋风手里剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero33旋风手里剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-33疾风之忍", bundle: ..., traitCollection: ...)`
    static func hero33疾风之忍(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero33疾风之忍, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-33疾风行军", bundle: ..., traitCollection: ...)`
    static func hero33疾风行军(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero33疾风行军, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-34万花筒写轮眼", bundle: ..., traitCollection: ...)`
    static func hero34万花筒写轮眼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero34万花筒写轮眼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-34万蛇or鹰", bundle: ..., traitCollection: ...)`
    static func hero34万蛇or鹰(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero34万蛇or鹰, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-34千鸟流", bundle: ..., traitCollection: ...)`
    static func hero34千鸟流(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero34千鸟流, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-34天照", bundle: ..., traitCollection: ...)`
    static func hero34天照(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero34天照, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-34左二少", bundle: ..., traitCollection: ...)`
    static func hero34左二少(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero34左二少, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-34须佐能乎", bundle: ..., traitCollection: ...)`
    static func hero34须佐能乎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero34须佐能乎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-35吉尔加美什", bundle: ..., traitCollection: ...)`
    static func hero35吉尔加美什(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero35吉尔加美什, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-35天之锁", bundle: ..., traitCollection: ...)`
    static func hero35天之锁(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero35天之锁, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-35天地乖离-开辟之星", bundle: ..., traitCollection: ...)`
    static func hero35天地乖离开辟之星(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero35天地乖离开辟之星, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-35王的宝库", bundle: ..., traitCollection: ...)`
    static func hero35王的宝库(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero35王的宝库, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-35空间转移", bundle: ..., traitCollection: ...)`
    static func hero35空间转移(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero35空间转移, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-35黄金律", bundle: ..., traitCollection: ...)`
    static func hero35黄金律(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero35黄金律, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-36沙僧", bundle: ..., traitCollection: ...)`
    static func hero36沙僧(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero36沙僧, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-36流沙猛击", bundle: ..., traitCollection: ...)`
    static func hero36流沙猛击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero36流沙猛击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-36玄冰护甲", bundle: ..., traitCollection: ...)`
    static func hero36玄冰护甲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero36玄冰护甲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-36致命碾压", bundle: ..., traitCollection: ...)`
    static func hero36致命碾压(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero36致命碾压, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-36若水天牢", bundle: ..., traitCollection: ...)`
    static func hero36若水天牢(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero36若水天牢, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-36通天禅杖", bundle: ..., traitCollection: ...)`
    static func hero36通天禅杖(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero36通天禅杖, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-37三笠", bundle: ..., traitCollection: ...)`
    static func hero37三笠(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero37三笠, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-37决死之心", bundle: ..., traitCollection: ...)`
    static func hero37决死之心(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero37决死之心, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-37合金刀刃", bundle: ..., traitCollection: ...)`
    static func hero37合金刀刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero37合金刀刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-37弱点打击", bundle: ..., traitCollection: ...)`
    static func hero37弱点打击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero37弱点打击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-37弹射钩爪", bundle: ..., traitCollection: ...)`
    static func hero37弹射钩爪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero37弹射钩爪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-37旋转斩击", bundle: ..., traitCollection: ...)`
    static func hero37旋转斩击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero37旋转斩击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-38亡灵女王", bundle: ..., traitCollection: ...)`
    static func hero38亡灵女王(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero38亡灵女王, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-38亡灵时刻", bundle: ..., traitCollection: ...)`
    static func hero38亡灵时刻(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero38亡灵时刻, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-38俯冲射击", bundle: ..., traitCollection: ...)`
    static func hero38俯冲射击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero38俯冲射击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-38凝神射击", bundle: ..., traitCollection: ...)`
    static func hero38凝神射击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero38凝神射击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-38暗夜本能", bundle: ..., traitCollection: ...)`
    static func hero38暗夜本能(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero38暗夜本能, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-38腐蚀之箭", bundle: ..., traitCollection: ...)`
    static func hero38腐蚀之箭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero38腐蚀之箭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-39出血", bundle: ..., traitCollection: ...)`
    static func hero39出血(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero39出血, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-39剔骨", bundle: ..., traitCollection: ...)`
    static func hero39剔骨(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero39剔骨, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-39消失", bundle: ..., traitCollection: ...)`
    static func hero39消失(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero39消失, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-39潜行", bundle: ..., traitCollection: ...)`
    static func hero39潜行(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero39潜行, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-39盗贼娃", bundle: ..., traitCollection: ...)`
    static func hero39盗贼娃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero39盗贼娃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-39肾击", bundle: ..., traitCollection: ...)`
    static func hero39肾击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero39肾击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-3Saber", bundle: ..., traitCollection: ...)`
    static func hero3Saber(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero3Saber, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-3殒星斩", bundle: ..., traitCollection: ...)`
    static func hero3殒星斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero3殒星斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-3理想乡", bundle: ..., traitCollection: ...)`
    static func hero3理想乡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero3理想乡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-3誓约胜利之剑", bundle: ..., traitCollection: ...)`
    static func hero3誓约胜利之剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero3誓约胜利之剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-3风王结界", bundle: ..., traitCollection: ...)`
    static func hero3风王结界(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero3风王结界, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-3风王铁槌", bundle: ..., traitCollection: ...)`
    static func hero3风王铁槌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero3风王铁槌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-40反击螺旋", bundle: ..., traitCollection: ...)`
    static func hero40反击螺旋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero40反击螺旋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-40属性附加", bundle: ..., traitCollection: ...)`
    static func hero40属性附加(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero40属性附加, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-40战斗饥渴", bundle: ..., traitCollection: ...)`
    static func hero40战斗饥渴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero40战斗饥渴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-40斧王", bundle: ..., traitCollection: ...)`
    static func hero40斧王(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero40斧王, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-40淘汰之刃", bundle: ..., traitCollection: ...)`
    static func hero40淘汰之刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero40淘汰之刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-40狂战士怒吼", bundle: ..., traitCollection: ...)`
    static func hero40狂战士怒吼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero40狂战士怒吼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-41地狱烈光", bundle: ..., traitCollection: ...)`
    static func hero41地狱烈光(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero41地狱烈光, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-41望远镜", bundle: ..., traitCollection: ...)`
    static func hero41望远镜(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero41望远镜, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-41照明弹", bundle: ..., traitCollection: ...)`
    static func hero41照明弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero41照明弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-41疾风冲刺", bundle: ..., traitCollection: ...)`
    static func hero41疾风冲刺(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero41疾风冲刺, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-41穿甲弹", bundle: ..., traitCollection: ...)`
    static func hero41穿甲弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero41穿甲弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-41霍比侦查兵", bundle: ..., traitCollection: ...)`
    static func hero41霍比侦查兵(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero41霍比侦查兵, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-42不知火舞", bundle: ..., traitCollection: ...)`
    static func hero42不知火舞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero42不知火舞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-42冲刺", bundle: ..., traitCollection: ...)`
    static func hero42冲刺(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero42冲刺, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-42忍蜂", bundle: ..., traitCollection: ...)`
    static func hero42忍蜂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero42忍蜂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-42怒气", bundle: ..., traitCollection: ...)`
    static func hero42怒气(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero42怒气, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-42花蝶扇", bundle: ..., traitCollection: ...)`
    static func hero42花蝶扇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero42花蝶扇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-42龙翔之舞", bundle: ..., traitCollection: ...)`
    static func hero42龙翔之舞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero42龙翔之舞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-43卖雷", bundle: ..., traitCollection: ...)`
    static func hero43卖雷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero43卖雷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-43打分", bundle: ..., traitCollection: ...)`
    static func hero43打分(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero43打分, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-43盐汽水", bundle: ..., traitCollection: ...)`
    static func hero43盐汽水(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero43盐汽水, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-43计数", bundle: ..., traitCollection: ...)`
    static func hero43计数(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero43计数, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-43超杀盐汽水", bundle: ..., traitCollection: ...)`
    static func hero43超杀盐汽水(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero43超杀盐汽水, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-43陈美嘉", bundle: ..., traitCollection: ...)`
    static func hero43陈美嘉(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero43陈美嘉, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-44Alef", bundle: ..., traitCollection: ...)`
    static func hero44Alef(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero44Alef, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-44BetorZayinorYod", bundle: ..., traitCollection: ...)`
    static func hero44BetorZayinorYod(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero44BetorZayinorYod, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-44DaletorChet", bundle: ..., traitCollection: ...)`
    static func hero44DaletorChet(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero44DaletorChet, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-44Zafkiel", bundle: ..., traitCollection: ...)`
    static func hero44Zafkiel(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero44Zafkiel, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-44时崎狂三", bundle: ..., traitCollection: ...)`
    static func hero44时崎狂三(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero44时崎狂三, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-44食时之城", bundle: ..., traitCollection: ...)`
    static func hero44食时之城(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero44食时之城, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-45冰环", bundle: ..., traitCollection: ...)`
    static func hero45冰环(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero45冰环, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-45冰霜精通", bundle: ..., traitCollection: ...)`
    static func hero45冰霜精通(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero45冰霜精通, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-45寒冰箭", bundle: ..., traitCollection: ...)`
    static func hero45寒冰箭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero45寒冰箭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-45寒冰闪现", bundle: ..., traitCollection: ...)`
    static func hero45寒冰闪现(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero45寒冰闪现, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-45法师娃", bundle: ..., traitCollection: ...)`
    static func hero45法师娃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero45法师娃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-45深结", bundle: ..., traitCollection: ...)`
    static func hero45深结(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero45深结, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-46北斗七星续命步", bundle: ..., traitCollection: ...)`
    static func hero46北斗七星续命步(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero46北斗七星续命步, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-46洞察or料敌先机", bundle: ..., traitCollection: ...)`
    static func hero46洞察or料敌先机(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero46洞察or料敌先机, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-46火攻", bundle: ..., traitCollection: ...)`
    static func hero46火攻(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero46火攻, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-46狂风", bundle: ..., traitCollection: ...)`
    static func hero46狂风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero46狂风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-46空城计", bundle: ..., traitCollection: ...)`
    static func hero46空城计(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero46空城计, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-46诸葛亮", bundle: ..., traitCollection: ...)`
    static func hero46诸葛亮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero46诸葛亮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-47双蛇相博", bundle: ..., traitCollection: ...)`
    static func hero47双蛇相博(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero47双蛇相博, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-47杀意之刃", bundle: ..., traitCollection: ...)`
    static func hero47杀意之刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero47杀意之刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-47森罗蛇阵", bundle: ..., traitCollection: ...)`
    static func hero47森罗蛇阵(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero47森罗蛇阵, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-47潜影蛇手", bundle: ..., traitCollection: ...)`
    static func hero47潜影蛇手(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero47潜影蛇手, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-47白蛇脱壳", bundle: ..., traitCollection: ...)`
    static func hero47白蛇脱壳(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero47白蛇脱壳, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-47蛇叔", bundle: ..., traitCollection: ...)`
    static func hero47蛇叔(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero47蛇叔, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-48大炎戒·炎帝", bundle: ..., traitCollection: ...)`
    static func hero48大炎戒炎帝(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero48大炎戒炎帝, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-48火拳", bundle: ..., traitCollection: ...)`
    static func hero48火拳(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero48火拳, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-48火拳·S", bundle: ..., traitCollection: ...)`
    static func hero48火拳S(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero48火拳S, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-48炎戒·火柱", bundle: ..., traitCollection: ...)`
    static func hero48炎戒火柱(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero48炎戒火柱, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-48烧烧果实", bundle: ..., traitCollection: ...)`
    static func hero48烧烧果实(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero48烧烧果实, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-48神火鸡·无名火", bundle: ..., traitCollection: ...)`
    static func hero48神火鸡无名火(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero48神火鸡无名火, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-49卡殿下", bundle: ..., traitCollection: ...)`
    static func hero49卡殿下(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero49卡殿下, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-49忍术", bundle: ..., traitCollection: ...)`
    static func hero49忍术(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero49忍术, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-49水鲛弹", bundle: ..., traitCollection: ...)`
    static func hero49水鲛弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero49水鲛弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-49神威", bundle: ..., traitCollection: ...)`
    static func hero49神威(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero49神威, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-49追牙", bundle: ..., traitCollection: ...)`
    static func hero49追牙(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero49追牙, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-49雷切", bundle: ..., traitCollection: ...)`
    static func hero49雷切(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero49雷切, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-4影踪", bundle: ..., traitCollection: ...)`
    static func hero4影踪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero4影踪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-4电击", bundle: ..., traitCollection: ...)`
    static func hero4电击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero4电击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-4白", bundle: ..., traitCollection: ...)`
    static func hero4白(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero4白, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-4银", bundle: ..., traitCollection: ...)`
    static func hero4银(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero4银, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-4黑", bundle: ..., traitCollection: ...)`
    static func hero4黑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero4黑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-4黑skill", bundle: ..., traitCollection: ...)`
    static func hero4黑skill(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero4黑skill, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-50火势蔓延", bundle: ..., traitCollection: ...)`
    static func hero50火势蔓延(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero50火势蔓延, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-50点燃", bundle: ..., traitCollection: ...)`
    static func hero50点燃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero50点燃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-50烈火之罚", bundle: ..., traitCollection: ...)`
    static func hero50烈火之罚(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero50烈火之罚, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-50焦热地狱", bundle: ..., traitCollection: ...)`
    static func hero50焦热地狱(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero50焦热地狱, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-50纵火狂", bundle: ..., traitCollection: ...)`
    static func hero50纵火狂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero50纵火狂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-50魔导少女", bundle: ..., traitCollection: ...)`
    static func hero50魔导少女(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero50魔导少女, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-51哉佩利敖光线", bundle: ..., traitCollection: ...)`
    static func hero51哉佩利敖光线(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero51哉佩利敖光线, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-51奥特曼", bundle: ..., traitCollection: ...)`
    static func hero51奥特曼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero51奥特曼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-51斯派修姆光线", bundle: ..., traitCollection: ...)`
    static func hero51斯派修姆光线(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero51斯派修姆光线, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-51神光棒", bundle: ..., traitCollection: ...)`
    static func hero51神光棒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero51神光棒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-51蓝帕尔特光弹", bundle: ..., traitCollection: ...)`
    static func hero51蓝帕尔特光弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero51蓝帕尔特光弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-51迪拉休姆光流", bundle: ..., traitCollection: ...)`
    static func hero51迪拉休姆光流(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero51迪拉休姆光流, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-52三世因果咒", bundle: ..., traitCollection: ...)`
    static func hero52三世因果咒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero52三世因果咒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-52唐僧", bundle: ..., traitCollection: ...)`
    static func hero52唐僧(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero52唐僧, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-52大悲咒", bundle: ..., traitCollection: ...)`
    static func hero52大悲咒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero52大悲咒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-52慧根", bundle: ..., traitCollection: ...)`
    static func hero52慧根(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero52慧根, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-52救世真言", bundle: ..., traitCollection: ...)`
    static func hero52救世真言(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero52救世真言, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-52补缺真言", bundle: ..., traitCollection: ...)`
    static func hero52补缺真言(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero52补缺真言, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-53光明审判", bundle: ..., traitCollection: ...)`
    static func hero53光明审判(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero53光明审判, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-53天谕秘术", bundle: ..., traitCollection: ...)`
    static func hero53天谕秘术(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero53天谕秘术, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-53庇护之翼", bundle: ..., traitCollection: ...)`
    static func hero53庇护之翼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero53庇护之翼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-53神圣守护", bundle: ..., traitCollection: ...)`
    static func hero53神圣守护(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero53神圣守护, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-53裁决之杖", bundle: ..., traitCollection: ...)`
    static func hero53裁决之杖(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero53裁决之杖, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-53雅典娜", bundle: ..., traitCollection: ...)`
    static func hero53雅典娜(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero53雅典娜, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-54暗影形态or神圣形态", bundle: ..., traitCollection: ...)`
    static func hero54暗影形态or神圣形态(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero54暗影形态or神圣形态, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-54瀑流or暗言术痛", bundle: ..., traitCollection: ...)`
    static func hero54瀑流or暗言术痛(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero54瀑流or暗言术痛, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-54牧师娃", bundle: ..., traitCollection: ...)`
    static func hero54牧师娃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero54牧师娃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-54真言术盾or暗言术灭", bundle: ..., traitCollection: ...)`
    static func hero54真言术盾or暗言术灭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero54真言术盾or暗言术灭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-54真言术韧", bundle: ..., traitCollection: ...)`
    static func hero54真言术韧(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero54真言术韧, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-54虔诚之跃or心灵尖啸", bundle: ..., traitCollection: ...)`
    static func hero54虔诚之跃or心灵尖啸(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero54虔诚之跃or心灵尖啸, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-55截击鸡", bundle: ..., traitCollection: ...)`
    static func hero55截击鸡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero55截击鸡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-55拯救失足的小鸡", bundle: ..., traitCollection: ...)`
    static func hero55拯救失足的小鸡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero55拯救失足的小鸡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-55攻击鸡", bundle: ..., traitCollection: ...)`
    static func hero55攻击鸡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero55攻击鸡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-55突击鸡", bundle: ..., traitCollection: ...)`
    static func hero55突击鸡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero55突击鸡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-55轰炸鸡", bundle: ..., traitCollection: ...)`
    static func hero55轰炸鸡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero55轰炸鸡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-55齐天小剩", bundle: ..., traitCollection: ...)`
    static func hero55齐天小剩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero55齐天小剩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-56冰电之刃", bundle: ..., traitCollection: ...)`
    static func hero56冰电之刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero56冰电之刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-56天海之罚", bundle: ..., traitCollection: ...)`
    static func hero56天海之罚(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero56天海之罚, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-56洪流风暴", bundle: ..., traitCollection: ...)`
    static func hero56洪流风暴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero56洪流风暴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-56腐蚀浸泡", bundle: ..., traitCollection: ...)`
    static func hero56腐蚀浸泡(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero56腐蚀浸泡, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-56舰队统帅", bundle: ..., traitCollection: ...)`
    static func hero56舰队统帅(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero56舰队统帅, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-56锚击", bundle: ..., traitCollection: ...)`
    static func hero56锚击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero56锚击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-57吸血鬼之触", bundle: ..., traitCollection: ...)`
    static func hero57吸血鬼之触(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero57吸血鬼之触, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-57嗜血悸动", bundle: ..., traitCollection: ...)`
    static func hero57嗜血悸动(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero57嗜血悸动, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-57梦寐附体", bundle: ..., traitCollection: ...)`
    static func hero57梦寐附体(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero57梦寐附体, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-57死神", bundle: ..., traitCollection: ...)`
    static func hero57死神(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero57死神, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-57灵魂撕裂", bundle: ..., traitCollection: ...)`
    static func hero57灵魂撕裂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero57灵魂撕裂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-57鬼哭神嚎", bundle: ..., traitCollection: ...)`
    static func hero57鬼哭神嚎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero57鬼哭神嚎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-58变异魔菇", bundle: ..., traitCollection: ...)`
    static func hero58变异魔菇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero58变异魔菇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-58坚固伞盖", bundle: ..., traitCollection: ...)`
    static func hero58坚固伞盖(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero58坚固伞盖, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-58寄生真菌", bundle: ..., traitCollection: ...)`
    static func hero58寄生真菌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero58寄生真菌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-58扎根", bundle: ..., traitCollection: ...)`
    static func hero58扎根(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero58扎根, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-58毒菌爆发", bundle: ..., traitCollection: ...)`
    static func hero58毒菌爆发(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero58毒菌爆发, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-58蘑菇云", bundle: ..., traitCollection: ...)`
    static func hero58蘑菇云(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero58蘑菇云, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-59属性附加", bundle: ..., traitCollection: ...)`
    static func hero59属性附加(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero59属性附加, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-59暗影突袭", bundle: ..., traitCollection: ...)`
    static func hero59暗影突袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero59暗影突袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-59痛苦女王", bundle: ..., traitCollection: ...)`
    static func hero59痛苦女王(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero59痛苦女王, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-59痛苦尖叫", bundle: ..., traitCollection: ...)`
    static func hero59痛苦尖叫(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero59痛苦尖叫, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-59超声波冲击", bundle: ..., traitCollection: ...)`
    static func hero59超声波冲击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero59超声波冲击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-59闪烁", bundle: ..., traitCollection: ...)`
    static func hero59闪烁(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero59闪烁, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-5失落圣诞", bundle: ..., traitCollection: ...)`
    static func hero5失落圣诞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero5失落圣诞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-5挽诗", bundle: ..., traitCollection: ...)`
    static func hero5挽诗(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero5挽诗, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-5本我黯甲", bundle: ..., traitCollection: ...)`
    static func hero5本我黯甲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero5本我黯甲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-5楪祈", bundle: ..., traitCollection: ...)`
    static func hero5楪祈(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero5楪祈, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-5歌者闇剑", bundle: ..., traitCollection: ...)`
    static func hero5歌者闇剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero5歌者闇剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-5涯-领袖之枪", bundle: ..., traitCollection: ...)`
    static func hero5涯领袖之枪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero5涯领袖之枪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-60属性附加", bundle: ..., traitCollection: ...)`
    static func hero60属性附加(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero60属性附加, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-60月之女祭司", bundle: ..., traitCollection: ...)`
    static func hero60月之女祭司(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero60月之女祭司, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-60月之暗面", bundle: ..., traitCollection: ...)`
    static func hero60月之暗面(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero60月之暗面, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-60月神之箭", bundle: ..., traitCollection: ...)`
    static func hero60月神之箭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero60月神之箭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-60群星坠落", bundle: ..., traitCollection: ...)`
    static func hero60群星坠落(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero60群星坠落, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-60跳跃", bundle: ..., traitCollection: ...)`
    static func hero60跳跃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero60跳跃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-61倾国", bundle: ..., traitCollection: ...)`
    static func hero61倾国(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero61倾国, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-61天魔妙舞or影舞斩", bundle: ..., traitCollection: ...)`
    static func hero61天魔妙舞or影舞斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero61天魔妙舞or影舞斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-61天魔绫", bundle: ..., traitCollection: ...)`
    static func hero61天魔绫(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero61天魔绫, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-61缠绵悱恻", bundle: ..., traitCollection: ...)`
    static func hero61缠绵悱恻(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero61缠绵悱恻, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-61貂蝉", bundle: ..., traitCollection: ...)`
    static func hero61貂蝉(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero61貂蝉, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-61魅影突袭or魅影迷踪", bundle: ..., traitCollection: ...)`
    static func hero61魅影突袭or魅影迷踪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero61魅影突袭or魅影迷踪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-62御坂美琴", bundle: ..., traitCollection: ...)`
    static func hero62御坂美琴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero62御坂美琴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-62电磁场", bundle: ..., traitCollection: ...)`
    static func hero62电磁场(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero62电磁场, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-62电磁炮", bundle: ..., traitCollection: ...)`
    static func hero62电磁炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero62电磁炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-62真正的落雷", bundle: ..., traitCollection: ...)`
    static func hero62真正的落雷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero62真正的落雷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-62铁砂风暴", bundle: ..., traitCollection: ...)`
    static func hero62铁砂风暴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero62铁砂风暴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-62雷击之剑", bundle: ..., traitCollection: ...)`
    static func hero62雷击之剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero62雷击之剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-63夏娜", bundle: ..., traitCollection: ...)`
    static func hero63夏娜(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero63夏娜, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-63审判", bundle: ..., traitCollection: ...)`
    static func hero63审判(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero63审判, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-63断罪", bundle: ..., traitCollection: ...)`
    static func hero63断罪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero63断罪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-63真红", bundle: ..., traitCollection: ...)`
    static func hero63真红(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero63真红, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-63贽殿遮那", bundle: ..., traitCollection: ...)`
    static func hero63贽殿遮那(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero63贽殿遮那, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-63飞焰", bundle: ..., traitCollection: ...)`
    static func hero63飞焰(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero63飞焰, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-64俘虏之箭", bundle: ..., traitCollection: ...)`
    static func hero64俘虏之箭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero64俘虏之箭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-64手枪之吻", bundle: ..., traitCollection: ...)`
    static func hero64手枪之吻(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero64手枪之吻, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-64甜甜果实", bundle: ..., traitCollection: ...)`
    static func hero64甜甜果实(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero64甜甜果实, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-64芳香腿", bundle: ..., traitCollection: ...)`
    static func hero64芳香腿(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero64芳香腿, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-64蛇血舞姬", bundle: ..., traitCollection: ...)`
    static func hero64蛇血舞姬(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero64蛇血舞姬, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-64迷恋甘风", bundle: ..., traitCollection: ...)`
    static func hero64迷恋甘风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero64迷恋甘风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-65九尾妖狐外衣or仙法九尾妖狐外衣", bundle: ..., traitCollection: ...)`
    static func hero65九尾妖狐外衣or仙法九尾妖狐外衣(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero65九尾妖狐外衣or仙法九尾妖狐外衣, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-65仙人模式", bundle: ..., traitCollection: ...)`
    static func hero65仙人模式(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero65仙人模式, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-65千年杀", bundle: ..., traitCollection: ...)`
    static func hero65千年杀(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero65千年杀, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-65螺旋丸or仙法螺旋丸", bundle: ..., traitCollection: ...)`
    static func hero65螺旋丸or仙法螺旋丸(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero65螺旋丸or仙法螺旋丸, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-65螺旋手里剑or仙法螺旋手里剑", bundle: ..., traitCollection: ...)`
    static func hero65螺旋手里剑or仙法螺旋手里剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero65螺旋手里剑or仙法螺旋手里剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-65青丘国主", bundle: ..., traitCollection: ...)`
    static func hero65青丘国主(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero65青丘国主, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-66垃圾毁灭者", bundle: ..., traitCollection: ...)`
    static func hero66垃圾毁灭者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero66垃圾毁灭者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-66散射弹幕", bundle: ..., traitCollection: ...)`
    static func hero66散射弹幕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero66散射弹幕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-66热力学定律", bundle: ..., traitCollection: ...)`
    static func hero66热力学定律(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero66热力学定律, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-66硫磺使者", bundle: ..., traitCollection: ...)`
    static func hero66硫磺使者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero66硫磺使者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-66蒸汽护盾", bundle: ..., traitCollection: ...)`
    static func hero66蒸汽护盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero66蒸汽护盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-66飞射齿轮", bundle: ..., traitCollection: ...)`
    static func hero66飞射齿轮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero66飞射齿轮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-67暗影之怒", bundle: ..., traitCollection: ...)`
    static func hero67暗影之怒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero67暗影之怒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-67术士娃", bundle: ..., traitCollection: ...)`
    static func hero67术士娃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero67术士娃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-67死亡缠绕", bundle: ..., traitCollection: ...)`
    static func hero67死亡缠绕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero67死亡缠绕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-67混乱箭", bundle: ..., traitCollection: ...)`
    static func hero67混乱箭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero67混乱箭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-67烧尽", bundle: ..., traitCollection: ...)`
    static func hero67烧尽(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero67烧尽, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-67献祭术", bundle: ..., traitCollection: ...)`
    static func hero67献祭术(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero67献祭术, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-68定向气旋", bundle: ..., traitCollection: ...)`
    static func hero68定向气旋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero68定向气旋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-68巽风祝福", bundle: ..., traitCollection: ...)`
    static func hero68巽风祝福(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero68巽风祝福, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-68暴风领域", bundle: ..., traitCollection: ...)`
    static func hero68暴风领域(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero68暴风领域, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-68闪电屏障", bundle: ..., traitCollection: ...)`
    static func hero68闪电屏障(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero68闪电屏障, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-68雷霆之怒", bundle: ..., traitCollection: ...)`
    static func hero68雷霆之怒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero68雷霆之怒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-68风暴精灵", bundle: ..., traitCollection: ...)`
    static func hero68风暴精灵(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero68风暴精灵, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-69坍缩", bundle: ..., traitCollection: ...)`
    static func hero69坍缩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero69坍缩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-69引力捕捉", bundle: ..., traitCollection: ...)`
    static func hero69引力捕捉(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero69引力捕捉, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-69泯灭", bundle: ..., traitCollection: ...)`
    static func hero69泯灭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero69泯灭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-69深渊之眼", bundle: ..., traitCollection: ...)`
    static func hero69深渊之眼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero69深渊之眼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-69深渊裂隙", bundle: ..., traitCollection: ...)`
    static func hero69深渊裂隙(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero69深渊裂隙, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-69虫洞穿梭", bundle: ..., traitCollection: ...)`
    static func hero69虫洞穿梭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero69虫洞穿梭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-6巨型光子炮", bundle: ..., traitCollection: ...)`
    static func hero6巨型光子炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero6巨型光子炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-6机枪模式", bundle: ..., traitCollection: ...)`
    static func hero6机枪模式(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero6机枪模式, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-6绝对压制", bundle: ..., traitCollection: ...)`
    static func hero6绝对压制(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero6绝对压制, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-6羁绊之心", bundle: ..., traitCollection: ...)`
    static func hero6羁绊之心(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero6羁绊之心, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-6蓝羽化", bundle: ..., traitCollection: ...)`
    static func hero6蓝羽化(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero6蓝羽化, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-6黑岩射手", bundle: ..., traitCollection: ...)`
    static func hero6黑岩射手(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero6黑岩射手, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-70刺客本能", bundle: ..., traitCollection: ...)`
    static func hero70刺客本能(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero70刺客本能, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-70寻踪苦无", bundle: ..., traitCollection: ...)`
    static func hero70寻踪苦无(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero70寻踪苦无, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-70影舞者", bundle: ..., traitCollection: ...)`
    static func hero70影舞者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero70影舞者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-70暗影之舞", bundle: ..., traitCollection: ...)`
    static func hero70暗影之舞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero70暗影之舞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-70杀戮之风", bundle: ..., traitCollection: ...)`
    static func hero70杀戮之风(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero70杀戮之风, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-70蓄势待发", bundle: ..., traitCollection: ...)`
    static func hero70蓄势待发(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero70蓄势待发, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-71投掷鱼叉or波涛", bundle: ..., traitCollection: ...)`
    static func hero71投掷鱼叉or波涛(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero71投掷鱼叉or波涛, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-71捕鱼达人", bundle: ..., traitCollection: ...)`
    static func hero71捕鱼达人(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero71捕鱼达人, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-71海风之力or鲨齿", bundle: ..., traitCollection: ...)`
    static func hero71海风之力or鲨齿(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero71海风之力or鲨齿, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-71潜踪", bundle: ..., traitCollection: ...)`
    static func hero71潜踪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero71潜踪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-71猎潮者", bundle: ..., traitCollection: ...)`
    static func hero71猎潮者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero71猎潮者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-71网罟陷阱or冲浪", bundle: ..., traitCollection: ...)`
    static func hero71网罟陷阱or冲浪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero71网罟陷阱or冲浪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-72Ice Geyser", bundle: ..., traitCollection: ...)`
    static func hero72IceGeyser(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero72IceGeyser, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-72Ice Make Floor", bundle: ..., traitCollection: ...)`
    static func hero72IceMakeFloor(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero72IceMakeFloor, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-72Ice Make Lance", bundle: ..., traitCollection: ...)`
    static func hero72IceMakeLance(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero72IceMakeLance, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-72Ice Make Saucer", bundle: ..., traitCollection: ...)`
    static func hero72IceMakeSaucer(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero72IceMakeSaucer, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-72冰刃七连舞", bundle: ..., traitCollection: ...)`
    static func hero72冰刃七连舞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero72冰刃七连舞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-72格雷", bundle: ..., traitCollection: ...)`
    static func hero72格雷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero72格雷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-73岩石巨像", bundle: ..., traitCollection: ...)`
    static func hero73岩石巨像(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero73岩石巨像, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-73巨像冲撞", bundle: ..., traitCollection: ...)`
    static func hero73巨像冲撞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero73巨像冲撞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-73巨像践踏", bundle: ..., traitCollection: ...)`
    static func hero73巨像践踏(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero73巨像践踏, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-73巨石弹幕", bundle: ..., traitCollection: ...)`
    static func hero73巨石弹幕(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero73巨石弹幕, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-73泰坦之心", bundle: ..., traitCollection: ...)`
    static func hero73泰坦之心(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero73泰坦之心, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-73盖亚诅咒", bundle: ..., traitCollection: ...)`
    static func hero73盖亚诅咒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero73盖亚诅咒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-74刺耳战呼", bundle: ..., traitCollection: ...)`
    static func hero74刺耳战呼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero74刺耳战呼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-74斗志高昂", bundle: ..., traitCollection: ...)`
    static func hero74斗志高昂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero74斗志高昂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-74旋风斩", bundle: ..., traitCollection: ...)`
    static func hero74旋风斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero74旋风斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-74暴风狂斧", bundle: ..., traitCollection: ...)`
    static func hero74暴风狂斧(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero74暴风狂斧, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-74狂战士之血", bundle: ..., traitCollection: ...)`
    static func hero74狂战士之血(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero74狂战士之血, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-74百战不殆", bundle: ..., traitCollection: ...)`
    static func hero74百战不殆(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero74百战不殆, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-75夺魄凝视", bundle: ..., traitCollection: ...)`
    static func hero75夺魄凝视(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero75夺魄凝视, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-75姬丝秀忒", bundle: ..., traitCollection: ...)`
    static func hero75姬丝秀忒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero75姬丝秀忒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-75怪异杀手", bundle: ..., traitCollection: ...)`
    static func hero75怪异杀手(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero75怪异杀手, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-75血腥风暴", bundle: ..., traitCollection: ...)`
    static func hero75血腥风暴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero75血腥风暴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-75进食", bundle: ..., traitCollection: ...)`
    static func hero75进食(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero75进食, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-75鲜血之吻", bundle: ..., traitCollection: ...)`
    static func hero75鲜血之吻(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero75鲜血之吻, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-76五行遁术", bundle: ..., traitCollection: ...)`
    static func hero76五行遁术(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero76五行遁术, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-76五雷天心正法", bundle: ..., traitCollection: ...)`
    static func hero76五雷天心正法(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero76五雷天心正法, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-76天魔解体大法", bundle: ..., traitCollection: ...)`
    static func hero76天魔解体大法(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero76天魔解体大法, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-76平天大圣", bundle: ..., traitCollection: ...)`
    static func hero76平天大圣(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero76平天大圣, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-76平天手衡心法", bundle: ..., traitCollection: ...)`
    static func hero76平天手衡心法(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero76平天手衡心法, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-76灭天三式", bundle: ..., traitCollection: ...)`
    static func hero76灭天三式(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero76灭天三式, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-77制裁之锤", bundle: ..., traitCollection: ...)`
    static func hero77制裁之锤(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero77制裁之锤, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-77圣盾术", bundle: ..., traitCollection: ...)`
    static func hero77圣盾术(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero77圣盾术, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-77审判", bundle: ..., traitCollection: ...)`
    static func hero77审判(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero77审判, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-77清算", bundle: ..., traitCollection: ...)`
    static func hero77清算(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero77清算, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-77虔诚光环", bundle: ..., traitCollection: ...)`
    static func hero77虔诚光环(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero77虔诚光环, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-77骑士娃", bundle: ..., traitCollection: ...)`
    static func hero77骑士娃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero77骑士娃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-78七星光芒剑", bundle: ..., traitCollection: ...)`
    static func hero78七星光芒剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero78七星光芒剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-78嗜血修罗", bundle: ..., traitCollection: ...)`
    static func hero78嗜血修罗(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero78嗜血修罗, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-78夏洛特", bundle: ..., traitCollection: ...)`
    static func hero78夏洛特(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero78夏洛特, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-78破空剑", bundle: ..., traitCollection: ...)`
    static func hero78破空剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero78破空剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-78致命三角剑", bundle: ..., traitCollection: ...)`
    static func hero78致命三角剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero78致命三角剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-78迅光三角剑", bundle: ..., traitCollection: ...)`
    static func hero78迅光三角剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero78迅光三角剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-79加速齿轮", bundle: ..., traitCollection: ...)`
    static func hero79加速齿轮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero79加速齿轮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-79化学烟雾", bundle: ..., traitCollection: ...)`
    static func hero79化学烟雾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero79化学烟雾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-79危险实验", bundle: ..., traitCollection: ...)`
    static func hero79危险实验(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero79危险实验, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-79奇迹导弹", bundle: ..., traitCollection: ...)`
    static func hero79奇迹导弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero79奇迹导弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-79机械链爪", bundle: ..., traitCollection: ...)`
    static func hero79机械链爪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero79机械链爪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-79记忆金属", bundle: ..., traitCollection: ...)`
    static func hero79记忆金属(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero79记忆金属, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-7Flag设定", bundle: ..., traitCollection: ...)`
    static func hero7Flag设定(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero7Flag设定, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-7同调", bundle: ..., traitCollection: ...)`
    static func hero7同调(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero7同调, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-7好感度逆转", bundle: ..., traitCollection: ...)`
    static func hero7好感度逆转(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero7好感度逆转, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-7攻略之神", bundle: ..., traitCollection: ...)`
    static func hero7攻略之神(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero7攻略之神, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-7桂木桂马", bundle: ..., traitCollection: ...)`
    static func hero7桂木桂马(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero7桂木桂马, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-7神之模式", bundle: ..., traitCollection: ...)`
    static func hero7神之模式(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero7神之模式, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-80乾坤一掷", bundle: ..., traitCollection: ...)`
    static func hero80乾坤一掷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero80乾坤一掷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-80切糕糖浆", bundle: ..., traitCollection: ...)`
    static func hero80切糕糖浆(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero80切糕糖浆, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-80巴依老爷", bundle: ..., traitCollection: ...)`
    static func hero80巴依老爷(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero80巴依老爷, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-80斑马王子", bundle: ..., traitCollection: ...)`
    static func hero80斑马王子(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero80斑马王子, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-80生命杠杆", bundle: ..., traitCollection: ...)`
    static func hero80生命杠杆(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero80生命杠杆, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-80魔鬼契约", bundle: ..., traitCollection: ...)`
    static func hero80魔鬼契约(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero80魔鬼契约, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-81冰弹", bundle: ..., traitCollection: ...)`
    static func hero81冰弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero81冰弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-81库奇", bundle: ..., traitCollection: ...)`
    static func hero81库奇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero81库奇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-81报偿打击", bundle: ..., traitCollection: ...)`
    static func hero81报偿打击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero81报偿打击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-81机械护盾", bundle: ..., traitCollection: ...)`
    static func hero81机械护盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero81机械护盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-81火弹", bundle: ..., traitCollection: ...)`
    static func hero81火弹(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero81火弹, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-81能量泄露", bundle: ..., traitCollection: ...)`
    static func hero81能量泄露(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero81能量泄露, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-82回光返照", bundle: ..., traitCollection: ...)`
    static func hero82回光返照(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero82回光返照, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-82无光盾", bundle: ..., traitCollection: ...)`
    static func hero82无光盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero82无光盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-82无敌", bundle: ..., traitCollection: ...)`
    static func hero82无敌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero82无敌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-82死亡之握", bundle: ..., traitCollection: ...)`
    static func hero82死亡之握(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero82死亡之握, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-82死亡骑士", bundle: ..., traitCollection: ...)`
    static func hero82死亡骑士(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero82死亡骑士, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-82霜之哀伤", bundle: ..., traitCollection: ...)`
    static func hero82霜之哀伤(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero82霜之哀伤, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-83万人敌", bundle: ..., traitCollection: ...)`
    static func hero83万人敌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero83万人敌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-83丈八蛇矛", bundle: ..., traitCollection: ...)`
    static func hero83丈八蛇矛(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero83丈八蛇矛, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-83张飞", bundle: ..., traitCollection: ...)`
    static func hero83张飞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero83张飞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-83愈战愈勇", bundle: ..., traitCollection: ...)`
    static func hero83愈战愈勇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero83愈战愈勇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-83猛张飞", bundle: ..., traitCollection: ...)`
    static func hero83猛张飞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero83猛张飞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-83破胆怒吼", bundle: ..., traitCollection: ...)`
    static func hero83破胆怒吼(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero83破胆怒吼, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-84冲锋陷阵", bundle: ..., traitCollection: ...)`
    static func hero84冲锋陷阵(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero84冲锋陷阵, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-84勇士底力", bundle: ..., traitCollection: ...)`
    static func hero84勇士底力(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero84勇士底力, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-84蛮锤之怒", bundle: ..., traitCollection: ...)`
    static func hero84蛮锤之怒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero84蛮锤之怒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-84蛮锤勇士", bundle: ..., traitCollection: ...)`
    static func hero84蛮锤勇士(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero84蛮锤勇士, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-84重击", bundle: ..., traitCollection: ...)`
    static func hero84重击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero84重击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-84风暴锤击", bundle: ..., traitCollection: ...)`
    static func hero84风暴锤击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero84风暴锤击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-85乌摇", bundle: ..., traitCollection: ...)`
    static func hero85乌摇(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero85乌摇, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-85兜割", bundle: ..., traitCollection: ...)`
    static func hero85兜割(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero85兜割, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-85空间崩裂", bundle: ..., traitCollection: ...)`
    static func hero85空间崩裂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero85空间崩裂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-85胡子船长", bundle: ..., traitCollection: ...)`
    static func hero85胡子船长(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero85胡子船长, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-85震空", bundle: ..., traitCollection: ...)`
    static func hero85震空(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero85震空, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-85震震果实", bundle: ..., traitCollection: ...)`
    static func hero85震震果实(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero85震震果实, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-86倒打一耙", bundle: ..., traitCollection: ...)`
    static func hero86倒打一耙(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero86倒打一耙, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-86崩裂大地", bundle: ..., traitCollection: ...)`
    static func hero86崩裂大地(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero86崩裂大地, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-86无坚不摧", bundle: ..., traitCollection: ...)`
    static func hero86无坚不摧(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero86无坚不摧, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-86猪八戒", bundle: ..., traitCollection: ...)`
    static func hero86猪八戒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero86猪八戒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-86群山崩塌", bundle: ..., traitCollection: ...)`
    static func hero86群山崩塌(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero86群山崩塌, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-86脂肪护盾", bundle: ..., traitCollection: ...)`
    static func hero86脂肪护盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero86脂肪护盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-87旋风火腿", bundle: ..., traitCollection: ...)`
    static func hero87旋风火腿(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero87旋风火腿, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-87生吞", bundle: ..., traitCollection: ...)`
    static func hero87生吞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero87生吞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-87脂肪爆炸", bundle: ..., traitCollection: ...)`
    static func hero87脂肪爆炸(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero87脂肪爆炸, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-87食之忍者", bundle: ..., traitCollection: ...)`
    static func hero87食之忍者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero87食之忍者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-87食欲振奋", bundle: ..., traitCollection: ...)`
    static func hero87食欲振奋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero87食欲振奋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-87饱腹感", bundle: ..., traitCollection: ...)`
    static func hero87饱腹感(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero87饱腹感, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-88以牙还牙", bundle: ..., traitCollection: ...)`
    static func hero88以牙还牙(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero88以牙还牙, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-88厚颜无耻", bundle: ..., traitCollection: ...)`
    static func hero88厚颜无耻(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero88厚颜无耻, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-88吕子乔", bundle: ..., traitCollection: ...)`
    static func hero88吕子乔(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero88吕子乔, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-88损人利己", bundle: ..., traitCollection: ...)`
    static func hero88损人利己(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero88损人利己, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-88斗转星移", bundle: ..., traitCollection: ...)`
    static func hero88斗转星移(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero88斗转星移, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-88舍身取利", bundle: ..., traitCollection: ...)`
    static func hero88舍身取利(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero88舍身取利, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-89口蜜腹剑", bundle: ..., traitCollection: ...)`
    static func hero89口蜜腹剑(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero89口蜜腹剑, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-89好男人", bundle: ..., traitCollection: ...)`
    static func hero89好男人(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero89好男人, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-89忽悠", bundle: ..., traitCollection: ...)`
    static func hero89忽悠(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero89忽悠, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-89曾小贤", bundle: ..., traitCollection: ...)`
    static func hero89曾小贤(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero89曾小贤, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-89调戏", bundle: ..., traitCollection: ...)`
    static func hero89调戏(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero89调戏, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-89银剑风暴", bundle: ..., traitCollection: ...)`
    static func hero89银剑风暴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero89银剑风暴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-8五星撕裂", bundle: ..., traitCollection: ...)`
    static func hero8五星撕裂(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero8五星撕裂, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-8四倍痛击", bundle: ..., traitCollection: ...)`
    static func hero8四倍痛击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero8四倍痛击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-8圣母圣咏", bundle: ..., traitCollection: ...)`
    static func hero8圣母圣咏(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero8圣母圣咏, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-8妖精之舞", bundle: ..., traitCollection: ...)`
    static func hero8妖精之舞(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero8妖精之舞, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-8狂暴补师", bundle: ..., traitCollection: ...)`
    static func hero8狂暴补师(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero8狂暴补师, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-8结城明日奈", bundle: ..., traitCollection: ...)`
    static func hero8结城明日奈(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero8结城明日奈, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-90FULL BURST MODE", bundle: ..., traitCollection: ...)`
    static func hero90FULLBURSTMODE(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero90FULLBURSTMODE, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-90GUNDAM", bundle: ..., traitCollection: ...)`
    static func hero90GUNDAM(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero90GUNDAM, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-90复列相位高速炮", bundle: ..., traitCollection: ...)`
    static func hero90复列相位高速炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero90复列相位高速炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-90强袭自由", bundle: ..., traitCollection: ...)`
    static func hero90强袭自由(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero90强袭自由, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-90超级龙骑兵系统", bundle: ..., traitCollection: ...)`
    static func hero90超级龙骑兵系统(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero90超级龙骑兵系统, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-90高能量高速步枪", bundle: ..., traitCollection: ...)`
    static func hero90高能量高速步枪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero90高能量高速步枪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-91十六夜咲夜", bundle: ..., traitCollection: ...)`
    static func hero91十六夜咲夜(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero91十六夜咲夜, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-91女仆助您下楼梯", bundle: ..., traitCollection: ...)`
    static func hero91女仆助您下楼梯(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero91女仆助您下楼梯, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-91完美潇洒的世界", bundle: ..., traitCollection: ...)`
    static func hero91完美潇洒的世界(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero91完美潇洒的世界, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-91完美潇洒的女仆", bundle: ..., traitCollection: ...)`
    static func hero91完美潇洒的女仆(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero91完美潇洒的女仆, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-91完美潇洒的时计", bundle: ..., traitCollection: ...)`
    static func hero91完美潇洒的时计(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero91完美潇洒的时计, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-91完美潇洒的飞刀", bundle: ..., traitCollection: ...)`
    static func hero91完美潇洒的飞刀(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero91完美潇洒的飞刀, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-92夜夜", bundle: ..., traitCollection: ...)`
    static func hero92夜夜(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero92夜夜, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-92旋转吧！雪月花or月影红莲", bundle: ..., traitCollection: ...)`
    static func hero92旋转吧雪月花or月影红莲(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero92旋转吧雪月花or月影红莲, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-92楸木太刀影", bundle: ..., traitCollection: ...)`
    static func hero92楸木太刀影(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero92楸木太刀影, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-92破却水月", bundle: ..., traitCollection: ...)`
    static func hero92破却水月(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero92破却水月, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-92红色有角三倍速", bundle: ..., traitCollection: ...)`
    static func hero92红色有角三倍速(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero92红色有角三倍速, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-92金刚力", bundle: ..., traitCollection: ...)`
    static func hero92金刚力(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero92金刚力, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-93坂田银时", bundle: ..., traitCollection: ...)`
    static func hero93坂田银时(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero93坂田银时, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-93扰tu乱cao", bundle: ..., traitCollection: ...)`
    static func hero93扰tu乱cao(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero93扰tu乱cao, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-93牙dou突s", bundle: ..., traitCollection: ...)`
    static func hero93牙dou突s(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero93牙dou突s, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-93白tang夜niao叉bing", bundle: ..., traitCollection: ...)`
    static func hero93白tang夜niao叉bing(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero93白tang夜niao叉bing, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-93阿姆施特朗炮", bundle: ..., traitCollection: ...)`
    static func hero93阿姆施特朗炮(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero93阿姆施特朗炮, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-93飞bi剑shi", bundle: ..., traitCollection: ...)`
    static func hero93飞bi剑shi(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero93飞bi剑shi, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-94冲锋", bundle: ..., traitCollection: ...)`
    static func hero94冲锋(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero94冲锋, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-94战士娃", bundle: ..., traitCollection: ...)`
    static func hero94战士娃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero94战士娃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-94旋风利刃", bundle: ..., traitCollection: ...)`
    static func hero94旋风利刃(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero94旋风利刃, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-94残暴", bundle: ..., traitCollection: ...)`
    static func hero94残暴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero94残暴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-94致死打击", bundle: ..., traitCollection: ...)`
    static func hero94致死打击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero94致死打击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-94雷霆震击", bundle: ..., traitCollection: ...)`
    static func hero94雷霆震击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero94雷霆震击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-95召唤筋斗云", bundle: ..., traitCollection: ...)`
    static func hero95召唤筋斗云(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero95召唤筋斗云, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-95小悟空", bundle: ..., traitCollection: ...)`
    static func hero95小悟空(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero95小悟空, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-95残像拳", bundle: ..., traitCollection: ...)`
    static func hero95残像拳(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero95残像拳, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-95狂暴", bundle: ..., traitCollection: ...)`
    static func hero95狂暴(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero95狂暴, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-95金箍棒", bundle: ..., traitCollection: ...)`
    static func hero95金箍棒(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero95金箍棒, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-95龟派气功", bundle: ..., traitCollection: ...)`
    static func hero95龟派气功(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero95龟派气功, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-96Aegis", bundle: ..., traitCollection: ...)`
    static func hero96Aegis(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero96Aegis, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-96Apollon", bundle: ..., traitCollection: ...)`
    static func hero96Apollon(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero96Apollon, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-96Artemis", bundle: ..., traitCollection: ...)`
    static func hero96Artemis(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero96Artemis, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-96lcarus", bundle: ..., traitCollection: ...)`
    static func hero96lcarus(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero96lcarus, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-96伊卡洛斯", bundle: ..., traitCollection: ...)`
    static func hero96伊卡洛斯(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero96伊卡洛斯, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-96可变式羽翼系统", bundle: ..., traitCollection: ...)`
    static func hero96可变式羽翼系统(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero96可变式羽翼系统, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-98小鸟游六花", bundle: ..., traitCollection: ...)`
    static func hero98小鸟游六花(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero98小鸟游六花, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-98显卡切换", bundle: ..., traitCollection: ...)`
    static func hero98显卡切换(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero98显卡切换, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-98永恒之枪", bundle: ..., traitCollection: ...)`
    static func hero98永恒之枪(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero98永恒之枪, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-98漆黑之盾", bundle: ..., traitCollection: ...)`
    static func hero98漆黑之盾(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero98漆黑之盾, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-98邪王真眼使", bundle: ..., traitCollection: ...)`
    static func hero98邪王真眼使(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero98邪王真眼使, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-98阿瓦隆粉碎", bundle: ..., traitCollection: ...)`
    static func hero98阿瓦隆粉碎(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero98阿瓦隆粉碎, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-9四方斩", bundle: ..., traitCollection: ...)`
    static func hero9四方斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero9四方斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-9封弊者", bundle: ..., traitCollection: ...)`
    static func hero9封弊者(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero9封弊者, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-9星爆气流斩", bundle: ..., traitCollection: ...)`
    static func hero9星爆气流斩(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero9星爆气流斩, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-9桐人", bundle: ..., traitCollection: ...)`
    static func hero9桐人(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero9桐人, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-9音速冲击", bundle: ..., traitCollection: ...)`
    static func hero9音速冲击(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero9音速冲击, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "hero-9魔剑侵袭", bundle: ..., traitCollection: ...)`
    static func hero9魔剑侵袭(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.hero9魔剑侵袭, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "kill", bundle: ..., traitCollection: ...)`
    static func kill(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.kill, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "killHelp", bundle: ..., traitCollection: ...)`
    static func killHelp(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.killHelp, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "LaunchScreen", bundle: ..., traitCollection: ...)`
    static func launchScreen(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.launchScreen, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "lose", bundle: ..., traitCollection: ...)`
    static func lose(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.lose, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "magical_scroll", bundle: ..., traitCollection: ...)`
    static func magical_scroll(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.magical_scroll, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "magical_scroll_filled", bundle: ..., traitCollection: ...)`
    static func magical_scroll_filled(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.magical_scroll_filled, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "rook", bundle: ..., traitCollection: ...)`
    static func rook(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.rook, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "sword", bundle: ..., traitCollection: ...)`
    static func sword(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.sword, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "sword_filled", bundle: ..., traitCollection: ...)`
    static func sword_filled(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.sword_filled, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "Tag", bundle: ..., traitCollection: ...)`
    static func tag(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.tag, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "TwoSwords", bundle: ..., traitCollection: ...)`
    static func twoSwords(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.twoSwords, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "user_male_circle", bundle: ..., traitCollection: ...)`
    static func user_male_circle(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.user_male_circle, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "user_male_circle_filled", bundle: ..., traitCollection: ...)`
    static func user_male_circle_filled(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.user_male_circle_filled, compatibleWithTraitCollection: traitCollection)
    }
    
    /// `UIImage(named: "win", bundle: ..., traitCollection: ...)`
    static func win(compatibleWithTraitCollection traitCollection: UITraitCollection? = nil) -> UIImage? {
      return UIImage(resource: R.image.win, compatibleWithTraitCollection: traitCollection)
    }
    
    private init() {}
  }
  
  private struct intern: Rswift.Validatable {
    static func validate() throws {
      try _R.validate()
    }
    
    private init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    private init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 10 reuse identifiers.
  struct reuseIdentifier {
    /// Reuse identifier `accountCellIdentifier`.
    static let accountCellIdentifier: ReuseIdentifier<userAccountTableViewCell> = ReuseIdentifier(identifier: "accountCellIdentifier")
    /// Reuse identifier `EquipmentCollectionViewCellIdentifier`.
    static let equipmentCollectionViewCellIdentifier: ReuseIdentifier<EquipmentCollectionViewCell> = ReuseIdentifier(identifier: "EquipmentCollectionViewCellIdentifier")
    /// Reuse identifier `FriendAnalysisCellIdentifier`.
    static let friendAnalysisCellIdentifier: ReuseIdentifier<FriendAnalysisTableViewCell> = ReuseIdentifier(identifier: "FriendAnalysisCellIdentifier")
    /// Reuse identifier `HeroCollectionViewCellIdentifier`.
    static let heroCollectionViewCellIdentifier: ReuseIdentifier<HeroCollectionViewCell> = ReuseIdentifier(identifier: "HeroCollectionViewCellIdentifier")
    /// Reuse identifier `HeroWinRateCellIdentifier`.
    static let heroWinRateCellIdentifier: ReuseIdentifier<HeroWinRateTableViewCell> = ReuseIdentifier(identifier: "HeroWinRateCellIdentifier")
    /// Reuse identifier `MatchCellIdentifier`.
    static let matchCellIdentifier: ReuseIdentifier<MatchBasicTableViewCell> = ReuseIdentifier(identifier: "MatchCellIdentifier")
    /// Reuse identifier `matchDetailCellIdentifier`.
    static let matchDetailCellIdentifier: ReuseIdentifier<matchDetailTableViewCell> = ReuseIdentifier(identifier: "matchDetailCellIdentifier")
    /// Reuse identifier `MenuTableViewCellIdentifier`.
    static let menuTableViewCellIdentifier: ReuseIdentifier<MenuTableViewCell> = ReuseIdentifier(identifier: "MenuTableViewCellIdentifier")
    /// Reuse identifier `PersonalRankCellIdentifier`.
    static let personalRankCellIdentifier: ReuseIdentifier<PersonalRankTableViewCell> = ReuseIdentifier(identifier: "PersonalRankCellIdentifier")
    /// Reuse identifier `SkillCellIdentifier`.
    static let skillCellIdentifier: ReuseIdentifier<SkillInfoTableViewCell> = ReuseIdentifier(identifier: "SkillCellIdentifier")
    
    private init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 2 view controllers.
  struct segue {
    /// This struct is generated for `AdvancedAnalysisMainTableViewController`, and contains static references to 3 segues.
    struct advancedAnalysisMainTableViewController {
      /// Segue identifier `carryAnalysisSegue`.
      static let carryAnalysisSegue: StoryboardSegueIdentifier<UIStoryboardSegue, AdvancedAnalysisMainTableViewController, CarryAnalysisViewController> = StoryboardSegueIdentifier(identifier: "carryAnalysisSegue")
      /// Segue identifier `friendAnalysisSegue`.
      static let friendAnalysisSegue: StoryboardSegueIdentifier<UIStoryboardSegue, AdvancedAnalysisMainTableViewController, FriendAnalysisViewController> = StoryboardSegueIdentifier(identifier: "friendAnalysisSegue")
      /// Segue identifier `HeroWinRateSegue`.
      static let heroWinRateSegue: StoryboardSegueIdentifier<UIStoryboardSegue, AdvancedAnalysisMainTableViewController, HeroWinRateViewController> = StoryboardSegueIdentifier(identifier: "HeroWinRateSegue")
      
      /// Optionally returns a typed version of segue `carryAnalysisSegue`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func carryAnalysisSegue(segue segue: UIStoryboardSegue) -> TypedStoryboardSegueInfo<UIStoryboardSegue, AdvancedAnalysisMainTableViewController, CarryAnalysisViewController>? {
        return TypedStoryboardSegueInfo(segueIdentifier: R.segue.advancedAnalysisMainTableViewController.carryAnalysisSegue, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `friendAnalysisSegue`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func friendAnalysisSegue(segue segue: UIStoryboardSegue) -> TypedStoryboardSegueInfo<UIStoryboardSegue, AdvancedAnalysisMainTableViewController, FriendAnalysisViewController>? {
        return TypedStoryboardSegueInfo(segueIdentifier: R.segue.advancedAnalysisMainTableViewController.friendAnalysisSegue, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `HeroWinRateSegue`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func heroWinRateSegue(segue segue: UIStoryboardSegue) -> TypedStoryboardSegueInfo<UIStoryboardSegue, AdvancedAnalysisMainTableViewController, HeroWinRateViewController>? {
        return TypedStoryboardSegueInfo(segueIdentifier: R.segue.advancedAnalysisMainTableViewController.heroWinRateSegue, segue: segue)
      }
      
      private init() {}
    }
    
    /// This struct is generated for `PersonalInfoViewController`, and contains static references to 2 segues.
    struct personalInfoViewController {
      /// Segue identifier `accountManageSegue`.
      static let accountManageSegue: StoryboardSegueIdentifier<UIStoryboardSegue, PersonalInfoViewController, AccountChangeViewController> = StoryboardSegueIdentifier(identifier: "accountManageSegue")
      /// Segue identifier `advancedAnalysisSegue`.
      static let advancedAnalysisSegue: StoryboardSegueIdentifier<UIStoryboardSegue, PersonalInfoViewController, UIViewController> = StoryboardSegueIdentifier(identifier: "advancedAnalysisSegue")
      
      /// Optionally returns a typed version of segue `accountManageSegue`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func accountManageSegue(segue segue: UIStoryboardSegue) -> TypedStoryboardSegueInfo<UIStoryboardSegue, PersonalInfoViewController, AccountChangeViewController>? {
        return TypedStoryboardSegueInfo(segueIdentifier: R.segue.personalInfoViewController.accountManageSegue, segue: segue)
      }
      
      /// Optionally returns a typed version of segue `advancedAnalysisSegue`.
      /// Returns nil if either the segue identifier, the source, destination, or segue types don't match.
      /// For use inside `prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)`.
      static func advancedAnalysisSegue(segue segue: UIStoryboardSegue) -> TypedStoryboardSegueInfo<UIStoryboardSegue, PersonalInfoViewController, UIViewController>? {
        return TypedStoryboardSegueInfo(segueIdentifier: R.segue.personalInfoViewController.advancedAnalysisSegue, segue: segue)
      }
      
      private init() {}
    }
    
    private init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 7 storyboards.
  struct storyboard {
    /// Storyboard `AdvancedAnalysis`.
    static let advancedAnalysis = _R.storyboard.advancedAnalysis()
    /// Storyboard `Equipment`.
    static let equipment = _R.storyboard.equipment()
    /// Storyboard `Hero`.
    static let hero = _R.storyboard.hero()
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    /// Storyboard `Match`.
    static let match = _R.storyboard.match()
    /// Storyboard `PersonalInfo`.
    static let personalInfo = _R.storyboard.personalInfo()
    
    /// `UIStoryboard(name: "AdvancedAnalysis", bundle: ...)`
    static func advancedAnalysis(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.advancedAnalysis)
    }
    
    /// `UIStoryboard(name: "Equipment", bundle: ...)`
    static func equipment(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.equipment)
    }
    
    /// `UIStoryboard(name: "Hero", bundle: ...)`
    static func hero(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.hero)
    }
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.main)
    }
    
    /// `UIStoryboard(name: "Match", bundle: ...)`
    static func match(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.match)
    }
    
    /// `UIStoryboard(name: "PersonalInfo", bundle: ...)`
    static func personalInfo(_: Void) -> UIStoryboard {
      return UIStoryboard(resource: R.storyboard.personalInfo)
    }
    
    private init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    /// This `R.string.leanCloudFeedback` struct is generated, and contains static references to 5 localization keys.
    struct leanCloudFeedback {
      /// Value: 详情
      static let detail = StringResource(key: "Detail", tableName: "LeanCloudFeedback", locales: [])
      /// Value: Email 或 QQ 号
      static let emailOrQQ = StringResource(key: "Email Or QQ", tableName: "LeanCloudFeedback", locales: [])
      /// Value: 请填写反馈
      static let pleaseWriteYourFeedback = StringResource(key: "Please write your feedback", tableName: "LeanCloudFeedback", locales: [])
      /// Value: 发送
      static let send = StringResource(key: "Send", tableName: "LeanCloudFeedback", locales: [])
      /// Value: 意见反馈
      static let userFeedback = StringResource(key: "User Feedback", tableName: "LeanCloudFeedback", locales: [])
      
      /// Value: 详情
      static func detail(_: Void) -> String {
        return NSLocalizedString("Detail", tableName: "LeanCloudFeedback", comment: "")
      }
      
      /// Value: Email 或 QQ 号
      static func emailOrQQ(_: Void) -> String {
        return NSLocalizedString("Email Or QQ", tableName: "LeanCloudFeedback", comment: "")
      }
      
      /// Value: 请填写反馈
      static func pleaseWriteYourFeedback(_: Void) -> String {
        return NSLocalizedString("Please write your feedback", tableName: "LeanCloudFeedback", comment: "")
      }
      
      /// Value: 发送
      static func send(_: Void) -> String {
        return NSLocalizedString("Send", tableName: "LeanCloudFeedback", comment: "")
      }
      
      /// Value: 意见反馈
      static func userFeedback(_: Void) -> String {
        return NSLocalizedString("User Feedback", tableName: "LeanCloudFeedback", comment: "")
      }
      
      private init() {}
    }
    
    private init() {}
  }
  
  private init() {}
}

struct _R: Rswift.Validatable {
  static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(NSLocale.init) ?? NSLocale.currentLocale()
  static let hostingBundle = NSBundle(identifier: "net.dowhile.Tk300HeroAssistant") ?? NSBundle.mainBundle()
  
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct nib {
    private init() {}
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try launchScreen.validate()
      try match.validate()
      try equipment.validate()
    }
    
    struct advancedAnalysis: StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIViewController
      
      let bundle = _R.hostingBundle
      let name = "AdvancedAnalysis"
      
      private init() {}
    }
    
    struct equipment: StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UINavigationController
      
      let bundle = _R.hostingBundle
      let equipmentDetailViewControllerID = StoryboardViewControllerResource<EquipmentDetailViewController>(identifier: "EquipmentDetailViewControllerID")
      let name = "Equipment"
      
      func equipmentDetailViewControllerID(_: Void) -> EquipmentDetailViewController? {
        return UIStoryboard(resource: self).instantiateViewController(equipmentDetailViewControllerID)
      }
      
      static func validate() throws {
        if _R.storyboard.equipment().equipmentDetailViewControllerID() == nil { throw ValidationError(description:"[R.swift] ViewController with identifier 'equipmentDetailViewControllerID' could not be loaded from storyboard 'Equipment' as 'EquipmentDetailViewController'.") }
      }
      
      private init() {}
    }
    
    struct hero: StoryboardResourceWithInitialControllerType {
      typealias InitialController = UINavigationController
      
      let bundle = _R.hostingBundle
      let name = "Hero"
      
      private init() {}
    }
    
    struct launchScreen: StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIViewController
      
      let bundle = _R.hostingBundle
      let name = "LaunchScreen"
      
      static func validate() throws {
        if UIImage(named: "LaunchScreen") == nil { throw ValidationError(description: "[R.swift] Image named 'LaunchScreen' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
      
      private init() {}
    }
    
    struct main: StoryboardResourceWithInitialControllerType {
      typealias InitialController = MainViewController
      
      let bundle = _R.hostingBundle
      let name = "Main"
      
      private init() {}
    }
    
    struct match: StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UINavigationController
      
      let bundle = _R.hostingBundle
      let matchDetailViewController = StoryboardViewControllerResource<MatchDetailViewController>(identifier: "MatchDetailViewController")
      let name = "Match"
      
      func matchDetailViewController(_: Void) -> MatchDetailViewController? {
        return UIStoryboard(resource: self).instantiateViewController(matchDetailViewController)
      }
      
      static func validate() throws {
        if UIImage(named: "death") == nil { throw ValidationError(description: "[R.swift] Image named 'death' is used in storyboard 'Match', but couldn't be loaded.") }
        if UIImage(named: "buBing") == nil { throw ValidationError(description: "[R.swift] Image named 'buBing' is used in storyboard 'Match', but couldn't be loaded.") }
        if UIImage(named: "coins") == nil { throw ValidationError(description: "[R.swift] Image named 'coins' is used in storyboard 'Match', but couldn't be loaded.") }
        if UIImage(named: "kill") == nil { throw ValidationError(description: "[R.swift] Image named 'kill' is used in storyboard 'Match', but couldn't be loaded.") }
        if UIImage(named: "killHelp") == nil { throw ValidationError(description: "[R.swift] Image named 'killHelp' is used in storyboard 'Match', but couldn't be loaded.") }
        if UIImage(named: "rook") == nil { throw ValidationError(description: "[R.swift] Image named 'rook' is used in storyboard 'Match', but couldn't be loaded.") }
        if _R.storyboard.match().matchDetailViewController() == nil { throw ValidationError(description:"[R.swift] ViewController with identifier 'matchDetailViewController' could not be loaded from storyboard 'Match' as 'MatchDetailViewController'.") }
      }
      
      private init() {}
    }
    
    struct personalInfo: StoryboardResourceWithInitialControllerType {
      typealias InitialController = UINavigationController
      
      let bundle = _R.hostingBundle
      let name = "PersonalInfo"
      
      private init() {}
    }
    
    private init() {}
  }
  
  private init() {}
}